{"version":3,"sources":["../webpack/bootstrap","../node_modules/monaco-editor/esm/vs/base/common/platform.js","../node_modules/monaco-editor/esm/vs/base/common/process.js","../node_modules/process/browser.js","../node_modules/webpack/buildin/global.js","../node_modules/monaco-editor/esm/vs/base/common/errors.js","../node_modules/monaco-editor/esm/vs/base/common/functional.js","../node_modules/monaco-editor/esm/vs/base/common/iterator.js","../node_modules/monaco-editor/esm/vs/base/common/lifecycle.js","../node_modules/monaco-editor/esm/vs/base/common/linkedList.js","../node_modules/monaco-editor/esm/vs/base/common/stopwatch.js","../node_modules/monaco-editor/esm/vs/base/common/event.js","../node_modules/monaco-editor/esm/vs/base/common/types.js","../node_modules/monaco-editor/esm/vs/base/common/strings.js","../node_modules/monaco-editor/esm/vs/base/common/worker/simpleWorker.js","../node_modules/monaco-editor/esm/vs/base/common/diff/diffChange.js","../node_modules/monaco-editor/esm/vs/base/common/hash.js","../node_modules/monaco-editor/esm/vs/base/common/diff/diff.js","../node_modules/monaco-editor/esm/vs/base/common/path.js","../node_modules/monaco-editor/esm/vs/base/common/uri.js","../node_modules/monaco-editor/esm/vs/editor/common/core/position.js","../node_modules/monaco-editor/esm/vs/editor/common/core/range.js","../node_modules/monaco-editor/esm/vs/editor/common/diff/diffComputer.js","../node_modules/monaco-editor/esm/vs/base/common/uint.js","../node_modules/monaco-editor/esm/vs/editor/common/viewModel/prefixSumComputer.js","../node_modules/monaco-editor/esm/vs/editor/common/model/wordHelper.js","../node_modules/monaco-editor/esm/vs/editor/common/core/characterClassifier.js","../node_modules/monaco-editor/esm/vs/editor/common/modes/linkComputer.js","../node_modules/monaco-editor/esm/vs/editor/common/modes/supports/inplaceReplaceSupport.js","../node_modules/monaco-editor/esm/vs/base/common/cancellation.js","../node_modules/monaco-editor/esm/vs/base/common/keyCodes.js","../node_modules/monaco-editor/esm/vs/editor/common/standalone/standaloneEnums.js","../node_modules/monaco-editor/esm/vs/editor/common/core/selection.js","../node_modules/monaco-editor/esm/vs/editor/common/core/token.js","../node_modules/monaco-editor/esm/vs/editor/common/standalone/standaloneBase.js","../node_modules/monaco-editor/esm/vs/editor/common/services/editorSimpleWorker.js","../node_modules/monaco-editor/esm/vs/editor/common/model/mirrorTextModel.js","../node_modules/monaco-editor/esm/vs/editor/editor.worker.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","_a","_isWindows","_isMacintosh","_isLinux","_isLinuxSnap","_isNative","_isWeb","_isIOS","_locale","undefined","_language","_translationsConfigFile","_userAgent","globals","self","global","nodeProcess","vscode","process","isElectronRenderer","versions","electron","type","navigator","platform","env","rawNlsConfig","nlsConfig","JSON","parse","resolved","availableLanguages","locale","e","console","error","userAgent","indexOf","maxTouchPoints","language","_platform","isWindows","isMacintosh","isWeb","setImmediate","postMessage","importScripts","pending","addEventListener","data","vscodeSetImmediateId","len","length","candidate","id","splice","callback","lastId","myId","push","nextTick","_promise","Promise","resolve","then","safeProcess","sandboxProcess","arch","cwd","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","Error","defaultClearTimeout","runTimeout","fun","setTimeout","this","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","concat","drainQueue","timeout","run","marker","runClearTimeout","Item","array","noop","args","Array","arguments","apply","title","browser","argv","version","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","chdir","dir","umask","g","Function","window","errorHandler","unexpectedErrorHandler","stack","message","forEach","listener","onUnexpectedError","isPromiseCanceledError","transformErrorForSerialization","$isError","stacktrace","fn","_this","result","didCall","Iterable","is","thing","iterator","_empty","freeze","empty","single","element","from","iterable","isEmpty","next","done","first","some","predicate","find","filter","map","index","_len","iterables","_key","concatNested","reduce","reducer","initialValue","slice","arr","to","consume","atMost","Number","POSITIVE_INFINITY","consumed","equals","a","b","comparator","at","bt","ai","bi","an","bn","disposableTracker","trackDisposable","x","markAsDisposed","disposable","setParentOfDisposable","child","parent","setParent","setParentOfDisposables","children","MultiDisposeError","errors","super","join","dispose","arg","isArray","combinedDisposable","disposables","toDisposable","DisposableStore","_toDispose","Set","_isDisposed","clear","values","DISABLE_DISPOSED_WARNING","warn","add","Disposable","_store","None","Node","Undefined","prev","LinkedList","_first","_last","_size","node","_insert","atTheEnd","newNode","oldLast","oldFirst","didRemove","_remove","res","anchor","hasPerformanceNow","performance","now","highResolution","_highResolution","_startTime","_now","_stopTime","Date","Event","event","thisArgs","didFire","snapshot","each","merge","initial","output","emitter","fire","debounce","subscription","delay","leading","leakWarningThreshold","handle","numDebouncedCalls","cur","_output","latch","cache","firstCall","shouldEmit","signal","any","events","split","isT","buffer","_buffer","flush","ChainableEvent","chain","fromNodeEventEmitter","eventName","onFirstListenerAdd","onLastListenerRemove","fromDOMEventEmitter","removeEventListener","toPromise","_listenerCount","_invocationCount","_elapsedOverall","_name","_idPool","listenerCount","_stopWatch","elapsed","info","toFixed","options","_disposed","_options","_leakageMon","_perfMon","_profName","_event","_listeners","firstListener","remove","onFirstListenerDidAdd","onListenerDidAdd","removeMonitor","check","size","_b","_deliveryQueue","start","shift","stop","_c","_d","_e","getAllMethodNames","obj","methods","prop","proto","getPrototypeOf","getOwnPropertyNames","getAllPropertyNames","isUpperAsciiLetter","code","isHighSurrogate","charCode","isLowSurrogate","computeCodePoint","highSurrogate","lowSurrogate","String","fromCharCode","GraphemeBreakTree","_data","_INSTANCE","codePoint","nodeCount","nodeIndex","RequestMessage","vsWorker","req","method","ReplyMessage","seq","err","SubscribeEventMessage","EventMessage","UnsubscribeEventMessage","handler","_workerId","_handler","_lastSentReq","_pendingReplies","_pendingEmitters","Map","_pendingEvents","workerId","reject","_send","set","delete","_handleMessage","msg","_handleReplyMessage","_handleRequestMessage","_handleSubscribeEventMessage","_handleEventMessage","_handleUnsubscribeEventMessage","replyMessage","reply","requestMessage","handleMessage","detail","handleEvent","has","transfer","ArrayBuffer","sendMessage","propertyIsEvent","charCodeAt","propertyIsDynamicEvent","test","methodNames","invoke","proxyListen","createProxyMethod","createProxyDynamicEvent","methodName","requestHandlerFactory","_requestHandlerFactory","_requestHandler","_protocol","_handleEvent","initialize","loaderConfig","hostMethods","setWorkerId","hostProxy","listen","baseUrl","paths","vs","trustedTypesPolicy","catchError","require","config","DiffChange","originalStart","originalLength","modifiedStart","modifiedLength","numberHash","val","initialHashVal","stringHash","hashVal","leftRotate","bits","totalBits","delta","mask","fill","dest","count","byteLength","leftPad","char","toHexString","bufferOrValue","bitsize","Uint8Array","toString","padStart","_h0","_h1","_h2","_h3","_h4","_buff","_buffDV","DataView","_buffLen","_totalLen","_leftoverHighSurrogate","_finished","str","strLen","buff","offset","buffLen","leftoverHighSurrogate","nextCharCode","_push","_step","_wrapUp","ml","setUint32","Math","floor","bigBlock32","_bigBlock32","j","getUint32","f","k","temp","StringDiffSequence","source","characters","Int32Array","stringDiff","original","modified","pretty","ComputeDiff","changes","Debug","condition","MyArray","sourceArray","sourceIndex","destinationArray","destinationIndex","m_changes","m_originalStart","m_modifiedStart","m_originalCount","m_modifiedCount","originalIndex","modifiedIndex","min","MarkNextChange","reverse","originalSequence","modifiedSequence","continueProcessingPredicate","ContinueProcessingPredicate","_originalSequence","_modifiedSequence","originalStringElements","originalElementsOrHash","originalHasStrings","_getElements","modifiedStringElements","modifiedElementsOrHash","modifiedHasStrings","_hasStrings","_originalStringElements","_originalElementsOrHash","_modifiedStringElements","_modifiedElementsOrHash","m_forwardHistory","m_reverseHistory","sequence","elements","getElements","_isStringArray","hashes","newIndex","ElementsAreEqual","_getStrictElement","getStrictElement","index1","index2","_ComputeDiff","originalEnd","modifiedEnd","quitEarlyArr","ComputeDiffRecursive","PrettifyChanges","quitEarly","Assert","midOriginalArr","midModifiedArr","ComputeRecursionPoint","midOriginal","midModified","leftChanges","rightChanges","ConcatenateChanges","diagonalForwardBase","diagonalForwardStart","diagonalForwardEnd","diagonalForwardOffset","diagonalReverseBase","diagonalReverseStart","diagonalReverseEnd","diagonalReverseOffset","forwardPoints","reversePoints","deltaIsEven","forwardChanges","reverseChanges","changeHelper","diagonalMin","diagonalMax","diagonalRelative","lastOriginalIndex","historyIndex","diagonal","AddModifiedElement","AddOriginalElement","getReverseChanges","originalStartPoint","modifiedStartPoint","lastForwardChange","max","getOriginalEnd","getModifiedEnd","getChanges","maxDifferences","numDiagonals","numDifferences","furthestOriginalIndex","furthestModifiedIndex","ClipDiagonalBound","tempOriginalIndex","abs","WALKTRACE","matchLengthOfLongest","Copy2","change","originalStop","modifiedStop","checkOriginal","checkModified","OriginalElementsAreEqual","ModifiedElementsAreEqual","startStrictEqual","ElementsAreStrictEqual","mergedChangeArr","ChangesOverlap","prevChange","bestDelta","bestScore","_boundaryScore","score","aChange","bChange","matchedLength","aOriginalStart","bOriginalEnd","abOriginalLength","aModifiedStart","bModifiedEnd","abModifiedLength","_findBetterContiguousSequence","originalMatchStart","modifiedMatchStart","desiredLength","originalMax","modifiedMax","bestOriginalStart","bestModifiedStart","_contiguousSequenceScore","_OriginalIsBoundary","_ModifiedIsBoundary","_OriginalRegionIsBoundary","_ModifiedRegionIsBoundary","left","right","Copy","diagonalBaseIndex","diffEven","ErrorInvalidArgType","expected","actual","determiner","replace","validateString","isPathSeparator","isPosixPathSeparator","isWindowsDeviceRoot","normalizeString","path","allowAboveRoot","separator","lastSegmentLength","lastSlash","dots","lastSlashIndex","lastIndexOf","_format","sep","pathObject","root","base","ext","win32","resolvedDevice","resolvedTail","resolvedAbsolute","toLowerCase","rootEnd","device","isAbsolute","last","firstPart","tail","joined","needsReplace","slashCount","firstLen","normalize","fromOrig","toOrig","fromStart","fromEnd","fromLen","toStart","toEnd","toLen","lastCommonSep","fromCode","out","resolvedPath","end","matchedSlash","extIdx","firstNonSlashEnd","startDot","startPart","preDotState","format","ret","delimiter","posix","trailingSeparator","toNamespacedPath","hasRoot","relative","dirname","basename","extname","_schemePattern","_singleSlashStart","_doubleSlashStart","_validateUri","_strict","scheme","authority","query","fragment","_slash","_regexp","schemeOrData","_schemeFix","_referenceResolution","fsPath","with","uriToFsPath","Uri","match","exec","percentDecode","idx","substring","components","uri","newPath","pathFragment","file","_asFormatted","_formatted","external","_fsPath","_sep","_pathSepMarker","$mid","encodeTable","encodeURIComponentFast","uriComponent","allowSlash","nativeEncodePos","pos","encodeURIComponent","charAt","substr","escaped","encodeURIComponentMinimal","keepDriveLetterCasing","skipEncoding","encoder","userinfo","_rEncodedAsHex","decodeURIComponentGraceful","decodeURIComponent","Position","lineNumber","column","newLineNumber","newColumn","deltaLineNumber","deltaColumn","other","isBefore","isBeforeOrEqual","aLineNumber","bLineNumber","startLineNumber","startColumn","endLineNumber","endColumn","range","position","containsPosition","containsRange","otherRange","strictContainsRange","plusRange","intersectRanges","resultStartLineNumber","resultStartColumn","resultEndLineNumber","resultEndColumn","otherStartLineNumber","otherStartColumn","otherEndLineNumber","otherEndColumn","equalsRange","getEndPosition","getStartPosition","collapseToStart","aStartLineNumber","bStartLineNumber","aStartColumn","bStartColumn","aEndLineNumber","bEndLineNumber","computeDiff","LineSequence","lines","startColumns","endColumns","getFirstNonBlankColumn","getLastNonBlankColumn","_startColumns","_endColumns","shouldIgnoreTrimWhitespace","startIndex","endIndex","charCodes","lineNumbers","columns","lineContent","col","CharSequence","_charCodes","_lineNumbers","_columns","CharChange","originalStartLineNumber","originalStartColumn","originalEndLineNumber","originalEndColumn","modifiedStartLineNumber","modifiedStartColumn","modifiedEndLineNumber","modifiedEndColumn","diffChange","originalCharSequence","modifiedCharSequence","getStartLineNumber","getStartColumn","getEndLineNumber","getEndColumn","LineChange","charChanges","originalLineSequence","modifiedLineSequence","continueCharDiff","shouldComputeCharChanges","shouldPostProcessCharChanges","createCharSequence","rawChanges","currChange","originalMatchingLength","modifiedMatchingLength","postProcessCharChanges","createFromDiffChange","DiffComputer","originalLines","modifiedLines","opts","shouldMakePrettyDiff","continueLineDiff","createContinueProcessingPredicate","maxComputationTime","diffResult","lineChanges","createFromDiffResult","originalLineIndex","modifiedLineIndex","nextChange","originalLine","modifiedLine","_pushTrimWhitespaceCharChange","originalMaxColumn","modifiedMaxColumn","originalLineNumber","modifiedLineNumber","_mergeTrimWhitespaceCharChange","txt","defaultValue","chCode","maximumRuntime","startTime","toUint8","v","toUint32","PrefixSumIndexOfResult","remainder","_prefixSumIndexOfResultBrand","prefixSum","Uint32Array","prefixSumValidIndex","insertIndex","insertValues","oldValues","oldPrefixSum","insertValuesLen","subarray","maxCount","_getPrefixSum","sum","getTotalSum","low","high","mid","midStop","midStart","DEFAULT_WORD_REGEXP","allowInWords","RegExp","createWordRegExp","_defaultConfig","maxLen","windowSize","timeBudget","_findRegexMatchEnclosingPosition","wordDefinition","text","stopPos","matchIndex","lastIndex","_defaultValue","_asciiMap","_createAsciiMap","_map","asciiMap","_value","Uint8Matrix","rows","cols","row","StateMachine","edges","maxCharCode","maxState","states","_states","_maxCharCode","currentState","_stateMachine","_classifier","LinkComputer","classifier","line","linkBeginIndex","linkEndIndex","lastIncludedCharIndex","charCodeBeforeLink","lastCharCodeInLink","url","model","stateMachine","FORCE_TERMINATION_CHARACTERS","CANNOT_END_WITH_CHARACTERS","getClassifier","lineCount","getLineCount","getLineContent","linkBeginChCode","state","hasOpenParens","hasOpenSquareBracket","inSquareBrackets","hasOpenCurlyBracket","resetStateMachine","chClass","_createLink","nextState","BasicInplaceReplace","_defaultValueSet","range1","text1","range2","text2","up","doNavigateValueSet","numberResult","numberReplace","textReplace","precision","pow","n1","n2","parseFloat","isNaN","valueSetsReplace","valueSets","valueSetReplace","valueSet","INSTANCE","shortcutEvent","context","CancellationToken","isCancellationToken","Cancelled","isCancellationRequested","onCancellationRequested","_isCancelled","_emitter","CancellationTokenSource","_token","_parentListener","cancel","KeyCodeStrMap","_keyCodeToStr","_strToKeyCode","keyCode","uiMap","userSettingsUSMap","userSettingsGeneralMap","EVENT_KEY_CODE_MAP","NATIVE_WINDOWS_KEY_CODE_TO_KEY_CODE","scanCodeIntToStr","scanCodeStrToInt","scanCodeLowerCaseStrToInt","IMMUTABLE_CODE_TO_KEY_CODE","IMMUTABLE_KEY_CODE_TO_CODE","KeyCodeUtils","AccessibilitySupport","CompletionItemInsertTextRule","CompletionItemKind","CompletionItemTag","CompletionTriggerKind","ContentWidgetPositionPreference","CursorChangeReason","DefaultEndOfLine","DocumentHighlightKind","EditorAutoIndentStrategy","EditorOption","EndOfLinePreference","EndOfLineSequence","IndentAction","InlayHintKind","InlineCompletionTriggerKind","KeyCode","MarkerSeverity","MarkerTag","MinimapPosition","MouseTargetType","OverlayWidgetPositionPreference","OverviewRulerLane","RenderLineNumbersType","RenderMinimap","ScrollType","ScrollbarVisibility","SelectionDirection","SignatureHelpTriggerKind","SymbolKind","SymbolTag","TextEditorCursorBlinkingStyle","TextEditorCursorStyle","TrackedRangeStickiness","WrappingIndent","mappings","seenKeyCode","seenScanCode","mapping","_keyCodeOrd","immutable","scanCode","scanCodeStr","keyCodeStr","eventKeyCode","vkey","usUserSettingsLabel","generalUserSettingsLabel","define","keyCodeToStr","fromString","strToKeyCode","toUserSettingsUS","toUserSettingsGeneral","fromUserSettings","toElectronAccelerator","selectionStartLineNumber","selectionStartColumn","positionLineNumber","positionColumn","selectionsEqual","getDirection","sel","direction","Token","_tokenBrand","secondPart","KeyChord","CtrlCmd","Shift","Alt","WinCtrl","__awaiter","thisArg","_arguments","P","generator","fulfilled","step","rejected","eol","versionId","_uri","_lines","_eol","_versionId","_lineStarts","_cachedTextValue","_acceptDeleteRange","_acceptInsertText","eolLength","linesLength","lineStartValues","lineIndex","newValue","changeValue","_setLineText","removeValues","insertText","insertLines","newLengths","getText","wordAtText","getWordAtText","textOffset","t1","prevRegexIndex","regexIndex","thisMatch","word","flags","ignoreCase","multiline","unicode","ensureValidWordDefinition","wordenize","_wordenize","lineText","wordRangesIdx","wordRanges","content","ranges","words","_validateRange","lineEnding","startLineIndex","endLineIndex","resultLines","_validatePosition","_ensureLineStarts","getPrefixSum","getIndexOf","lineLength","isIPosition","hasChanged","maxCharacter","host","foreignModuleFactory","_host","_models","_foreignModuleFactory","_foreignModule","all","keys","EOL","strURL","onEvents","originalUrl","modifiedUrl","ignoreTrimWhitespace","_getModel","getLinesContent","identical","_modelsAreIdentical","originalLineCount","modelUrl","edits","lastEol","sort","compareRangesUsingStarts","getValueInRange","_diffLimit","editOffset","offsetAt","lift","positionAt","newEdit","computeLinks","modelUrls","leadingWord","wordDef","wordDefFlags","sw","wordDefRegExp","seen","outer","_suggestionsLimit","duration","getLineWords","selectionText","wordRange","getWordAtPosition","navigateValueSet","createData","foreignHostMethods","ctx","fhr","getMirrorModels","_getModels","monaco","editor","languages","Emitter","KeyMod","Range","Selection","initialized","foreignModule","simpleWorker","onmessage"],"mappings":"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","file":"editor.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/web-app/app-manager/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar _a;\nconst LANGUAGE_DEFAULT = 'en';\nlet _isWindows = false;\nlet _isMacintosh = false;\nlet _isLinux = false;\nlet _isLinuxSnap = false;\nlet _isNative = false;\nlet _isWeb = false;\nlet _isIOS = false;\nlet _locale = undefined;\nlet _language = LANGUAGE_DEFAULT;\nlet _translationsConfigFile = undefined;\nlet _userAgent = undefined;\nexport const globals = typeof self === 'object' ? self : typeof global === 'object' ? global : {};\nlet nodeProcess = undefined;\nif (typeof globals.vscode !== 'undefined' && typeof globals.vscode.process !== 'undefined') {\n  // Native environment (sandboxed)\n  nodeProcess = globals.vscode.process;\n} else if (typeof process !== 'undefined') {\n  // Native environment (non-sandboxed)\n  nodeProcess = process;\n}\nconst isElectronRenderer = typeof ((_a = nodeProcess === null || nodeProcess === void 0 ? void 0 : nodeProcess.versions) === null || _a === void 0 ? void 0 : _a.electron) === 'string' && nodeProcess.type === 'renderer';\n// Web environment\nif (typeof navigator === 'object' && !isElectronRenderer) {\n  _userAgent = navigator.userAgent;\n  _isWindows = _userAgent.indexOf('Windows') >= 0;\n  _isMacintosh = _userAgent.indexOf('Macintosh') >= 0;\n  _isIOS = (_userAgent.indexOf('Macintosh') >= 0 || _userAgent.indexOf('iPad') >= 0 || _userAgent.indexOf('iPhone') >= 0) && !!navigator.maxTouchPoints && navigator.maxTouchPoints > 0;\n  _isLinux = _userAgent.indexOf('Linux') >= 0;\n  _isWeb = true;\n  _locale = navigator.language;\n  _language = _locale;\n}\n// Native environment\nelse if (typeof nodeProcess === 'object') {\n  _isWindows = nodeProcess.platform === 'win32';\n  _isMacintosh = nodeProcess.platform === 'darwin';\n  _isLinux = nodeProcess.platform === 'linux';\n  _isLinuxSnap = _isLinux && !!nodeProcess.env['SNAP'] && !!nodeProcess.env['SNAP_REVISION'];\n  _locale = LANGUAGE_DEFAULT;\n  _language = LANGUAGE_DEFAULT;\n  const rawNlsConfig = nodeProcess.env['VSCODE_NLS_CONFIG'];\n  if (rawNlsConfig) {\n    try {\n      const nlsConfig = JSON.parse(rawNlsConfig);\n      const resolved = nlsConfig.availableLanguages['*'];\n      _locale = nlsConfig.locale;\n      // VSCode's default language is 'en'\n      _language = resolved ? resolved : LANGUAGE_DEFAULT;\n      _translationsConfigFile = nlsConfig._translationsConfigFile;\n    } catch (e) {}\n  }\n  _isNative = true;\n}\n// Unknown environment\nelse {\n  console.error('Unable to resolve platform.');\n}\nlet _platform = 0 /* Web */;\nif (_isMacintosh) {\n  _platform = 1 /* Mac */;\n} else if (_isWindows) {\n  _platform = 3 /* Windows */;\n} else if (_isLinux) {\n  _platform = 2 /* Linux */;\n}\nexport const isWindows = _isWindows;\nexport const isMacintosh = _isMacintosh;\nexport const isLinux = _isLinux;\nexport const isNative = _isNative;\nexport const isWeb = _isWeb;\nexport const isIOS = _isIOS;\nexport const userAgent = _userAgent;\nexport const setImmediate = function defineSetImmediate() {\n  if (globals.setImmediate) {\n    return globals.setImmediate.bind(globals);\n  }\n  if (typeof globals.postMessage === 'function' && !globals.importScripts) {\n    let pending = [];\n    globals.addEventListener('message', e => {\n      if (e.data && e.data.vscodeSetImmediateId) {\n        for (let i = 0, len = pending.length; i < len; i++) {\n          const candidate = pending[i];\n          if (candidate.id === e.data.vscodeSetImmediateId) {\n            pending.splice(i, 1);\n            candidate.callback();\n            return;\n          }\n        }\n      }\n    });\n    let lastId = 0;\n    return callback => {\n      const myId = ++lastId;\n      pending.push({\n        id: myId,\n        callback: callback\n      });\n      globals.postMessage({\n        vscodeSetImmediateId: myId\n      }, '*');\n    };\n  }\n  if (typeof (nodeProcess === null || nodeProcess === void 0 ? void 0 : nodeProcess.nextTick) === 'function') {\n    return nodeProcess.nextTick.bind(nodeProcess);\n  }\n  const _promise = Promise.resolve();\n  return callback => _promise.then(callback);\n}();\nexport const OS = _isMacintosh || _isIOS ? 2 /* Macintosh */ : _isWindows ? 1 /* Windows */ : 3 /* Linux */;\nlet _isLittleEndian = true;\nlet _isLittleEndianComputed = false;\nexport function isLittleEndian() {\n  if (!_isLittleEndianComputed) {\n    _isLittleEndianComputed = true;\n    const test = new Uint8Array(2);\n    test[0] = 1;\n    test[1] = 2;\n    const view = new Uint16Array(test.buffer);\n    _isLittleEndian = view[0] === (2 << 8) + 1;\n  }\n  return _isLittleEndian;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { globals, isMacintosh, isWindows, setImmediate } from './platform.js';\nlet safeProcess;\n// Native sandbox environment\nif (typeof globals.vscode !== 'undefined' && typeof globals.vscode.process !== 'undefined') {\n  const sandboxProcess = globals.vscode.process;\n  safeProcess = {\n    get platform() {\n      return sandboxProcess.platform;\n    },\n    get arch() {\n      return sandboxProcess.arch;\n    },\n    get env() {\n      return sandboxProcess.env;\n    },\n    cwd() {\n      return sandboxProcess.cwd();\n    },\n    nextTick(callback) {\n      return setImmediate(callback);\n    }\n  };\n}\n// Native node.js environment\nelse if (typeof process !== 'undefined') {\n  safeProcess = {\n    get platform() {\n      return process.platform;\n    },\n    get arch() {\n      return process.arch;\n    },\n    get env() {\n      return process.env;\n    },\n    cwd() {\n      return process.env['VSCODE_CWD'] || process.cwd();\n    },\n    nextTick(callback) {\n      return process.nextTick(callback);\n    }\n  };\n}\n// Web environment\nelse {\n  safeProcess = {\n    // Supported\n    get platform() {\n      return isWindows ? 'win32' : isMacintosh ? 'darwin' : 'linux';\n    },\n    get arch() {\n      return undefined; /* arch is undefined in web */\n    },\n    nextTick(callback) {\n      return setImmediate(callback);\n    },\n    // Unsupported\n    get env() {\n      return {};\n    },\n    cwd() {\n      return '/';\n    }\n  };\n}\n/**\n * Provides safe access to the `cwd` property in node.js, sandboxed or web\n * environments.\n *\n * Note: in web, this property is hardcoded to be `/`.\n */\nexport const cwd = safeProcess.cwd;\n/**\n * Provides safe access to the `env` property in node.js, sandboxed or web\n * environments.\n *\n * Note: in web, this property is hardcoded to be `{}`.\n */\nexport const env = safeProcess.env;\n/**\n * Provides safe access to the `platform` property in node.js, sandboxed or web\n * environments.\n */\nexport const platform = safeProcess.platform;","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\nfunction defaultSetTimout() {\n  throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout() {\n  throw new Error('clearTimeout has not been defined');\n}\n(function () {\n  try {\n    if (typeof setTimeout === 'function') {\n      cachedSetTimeout = setTimeout;\n    } else {\n      cachedSetTimeout = defaultSetTimout;\n    }\n  } catch (e) {\n    cachedSetTimeout = defaultSetTimout;\n  }\n  try {\n    if (typeof clearTimeout === 'function') {\n      cachedClearTimeout = clearTimeout;\n    } else {\n      cachedClearTimeout = defaultClearTimeout;\n    }\n  } catch (e) {\n    cachedClearTimeout = defaultClearTimeout;\n  }\n})();\nfunction runTimeout(fun) {\n  if (cachedSetTimeout === setTimeout) {\n    //normal enviroments in sane situations\n    return setTimeout(fun, 0);\n  }\n  // if setTimeout wasn't available but was latter defined\n  if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n    cachedSetTimeout = setTimeout;\n    return setTimeout(fun, 0);\n  }\n  try {\n    // when when somebody has screwed with setTimeout but no I.E. maddness\n    return cachedSetTimeout(fun, 0);\n  } catch (e) {\n    try {\n      // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n      return cachedSetTimeout.call(null, fun, 0);\n    } catch (e) {\n      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n      return cachedSetTimeout.call(this, fun, 0);\n    }\n  }\n}\nfunction runClearTimeout(marker) {\n  if (cachedClearTimeout === clearTimeout) {\n    //normal enviroments in sane situations\n    return clearTimeout(marker);\n  }\n  // if clearTimeout wasn't available but was latter defined\n  if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n    cachedClearTimeout = clearTimeout;\n    return clearTimeout(marker);\n  }\n  try {\n    // when when somebody has screwed with setTimeout but no I.E. maddness\n    return cachedClearTimeout(marker);\n  } catch (e) {\n    try {\n      // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n      return cachedClearTimeout.call(null, marker);\n    } catch (e) {\n      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n      // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n      return cachedClearTimeout.call(this, marker);\n    }\n  }\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\nfunction cleanUpNextTick() {\n  if (!draining || !currentQueue) {\n    return;\n  }\n  draining = false;\n  if (currentQueue.length) {\n    queue = currentQueue.concat(queue);\n  } else {\n    queueIndex = -1;\n  }\n  if (queue.length) {\n    drainQueue();\n  }\n}\nfunction drainQueue() {\n  if (draining) {\n    return;\n  }\n  var timeout = runTimeout(cleanUpNextTick);\n  draining = true;\n  var len = queue.length;\n  while (len) {\n    currentQueue = queue;\n    queue = [];\n    while (++queueIndex < len) {\n      if (currentQueue) {\n        currentQueue[queueIndex].run();\n      }\n    }\n    queueIndex = -1;\n    len = queue.length;\n  }\n  currentQueue = null;\n  draining = false;\n  runClearTimeout(timeout);\n}\nprocess.nextTick = function (fun) {\n  var args = new Array(arguments.length - 1);\n  if (arguments.length > 1) {\n    for (var i = 1; i < arguments.length; i++) {\n      args[i - 1] = arguments[i];\n    }\n  }\n  queue.push(new Item(fun, args));\n  if (queue.length === 1 && !draining) {\n    runTimeout(drainQueue);\n  }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n  this.fun = fun;\n  this.array = array;\n}\nItem.prototype.run = function () {\n  this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\nfunction noop() {}\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\nprocess.listeners = function (name) {\n  return [];\n};\nprocess.binding = function (name) {\n  throw new Error('process.binding is not supported');\n};\nprocess.cwd = function () {\n  return '/';\n};\nprocess.chdir = function (dir) {\n  throw new Error('process.chdir is not supported');\n};\nprocess.umask = function () {\n  return 0;\n};","var g;\n\n// This works in non-strict mode\ng = function () {\n  return this;\n}();\ntry {\n  // This works if eval is allowed (see CSP)\n  g = g || new Function(\"return this\")();\n} catch (e) {\n  // This works if the window reference is available\n  if (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;","// Avoid circular dependency on EventEmitter by implementing a subset of the interface.\nexport class ErrorHandler {\n  constructor() {\n    this.listeners = [];\n    this.unexpectedErrorHandler = function (e) {\n      setTimeout(() => {\n        if (e.stack) {\n          throw new Error(e.message + '\\n\\n' + e.stack);\n        }\n        throw e;\n      }, 0);\n    };\n  }\n  emit(e) {\n    this.listeners.forEach(listener => {\n      listener(e);\n    });\n  }\n  onUnexpectedError(e) {\n    this.unexpectedErrorHandler(e);\n    this.emit(e);\n  }\n  // For external errors, we don't want the listeners to be called\n  onUnexpectedExternalError(e) {\n    this.unexpectedErrorHandler(e);\n  }\n}\nexport const errorHandler = new ErrorHandler();\nexport function onUnexpectedError(e) {\n  // ignore errors from cancelled promises\n  if (!isPromiseCanceledError(e)) {\n    errorHandler.onUnexpectedError(e);\n  }\n  return undefined;\n}\nexport function onUnexpectedExternalError(e) {\n  // ignore errors from cancelled promises\n  if (!isPromiseCanceledError(e)) {\n    errorHandler.onUnexpectedExternalError(e);\n  }\n  return undefined;\n}\nexport function transformErrorForSerialization(error) {\n  if (error instanceof Error) {\n    let {\n      name,\n      message\n    } = error;\n    const stack = error.stacktrace || error.stack;\n    return {\n      $isError: true,\n      name,\n      message,\n      stack\n    };\n  }\n  // return as is\n  return error;\n}\nconst canceledName = 'Canceled';\n/**\n * Checks if the given error is a promise in canceled state\n */\nexport function isPromiseCanceledError(error) {\n  return error instanceof Error && error.name === canceledName && error.message === canceledName;\n}\n/**\n * Returns an error that signals cancellation.\n */\nexport function canceled() {\n  const error = new Error(canceledName);\n  error.name = error.message;\n  return error;\n}\nexport function illegalArgument(name) {\n  if (name) {\n    return new Error(\"Illegal argument: \".concat(name));\n  } else {\n    return new Error('Illegal argument');\n  }\n}\nexport function illegalState(name) {\n  if (name) {\n    return new Error(\"Illegal state: \".concat(name));\n  } else {\n    return new Error('Illegal state');\n  }\n}\nexport class NotSupportedError extends Error {\n  constructor(message) {\n    super('NotSupported');\n    if (message) {\n      this.message = message;\n    }\n  }\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport function once(fn) {\n  const _this = this;\n  let didCall = false;\n  let result;\n  return function () {\n    if (didCall) {\n      return result;\n    }\n    didCall = true;\n    result = fn.apply(_this, arguments);\n    return result;\n  };\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport var Iterable;\n(function (Iterable) {\n  function is(thing) {\n    return thing && typeof thing === 'object' && typeof thing[Symbol.iterator] === 'function';\n  }\n  Iterable.is = is;\n  const _empty = Object.freeze([]);\n  function empty() {\n    return _empty;\n  }\n  Iterable.empty = empty;\n  function* single(element) {\n    yield element;\n  }\n  Iterable.single = single;\n  function from(iterable) {\n    return iterable || _empty;\n  }\n  Iterable.from = from;\n  function isEmpty(iterable) {\n    return !iterable || iterable[Symbol.iterator]().next().done === true;\n  }\n  Iterable.isEmpty = isEmpty;\n  function first(iterable) {\n    return iterable[Symbol.iterator]().next().value;\n  }\n  Iterable.first = first;\n  function some(iterable, predicate) {\n    for (const element of iterable) {\n      if (predicate(element)) {\n        return true;\n      }\n    }\n    return false;\n  }\n  Iterable.some = some;\n  function find(iterable, predicate) {\n    for (const element of iterable) {\n      if (predicate(element)) {\n        return element;\n      }\n    }\n    return undefined;\n  }\n  Iterable.find = find;\n  function* filter(iterable, predicate) {\n    for (const element of iterable) {\n      if (predicate(element)) {\n        yield element;\n      }\n    }\n  }\n  Iterable.filter = filter;\n  function* map(iterable, fn) {\n    let index = 0;\n    for (const element of iterable) {\n      yield fn(element, index++);\n    }\n  }\n  Iterable.map = map;\n  function* concat() {\n    for (var _len = arguments.length, iterables = new Array(_len), _key = 0; _key < _len; _key++) {\n      iterables[_key] = arguments[_key];\n    }\n    for (const iterable of iterables) {\n      for (const element of iterable) {\n        yield element;\n      }\n    }\n  }\n  Iterable.concat = concat;\n  function* concatNested(iterables) {\n    for (const iterable of iterables) {\n      for (const element of iterable) {\n        yield element;\n      }\n    }\n  }\n  Iterable.concatNested = concatNested;\n  function reduce(iterable, reducer, initialValue) {\n    let value = initialValue;\n    for (const element of iterable) {\n      value = reducer(value, element);\n    }\n    return value;\n  }\n  Iterable.reduce = reduce;\n  /**\n   * Returns an iterable slice of the array, with the same semantics as `array.slice()`.\n   */\n  function slice(arr, from) {\n    let to = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : arr.length;\n    return function* () {\n      if (from < 0) {\n        from += arr.length;\n      }\n      if (to < 0) {\n        to += arr.length;\n      } else if (to > arr.length) {\n        to = arr.length;\n      }\n      for (; from < to; from++) {\n        yield arr[from];\n      }\n    }();\n  }\n  Iterable.slice = slice;\n  /**\n   * Consumes `atMost` elements from iterable and returns the consumed elements,\n   * and an iterable for the rest of the elements.\n   */\n  function consume(iterable) {\n    let atMost = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Number.POSITIVE_INFINITY;\n    const consumed = [];\n    if (atMost === 0) {\n      return [consumed, iterable];\n    }\n    const iterator = iterable[Symbol.iterator]();\n    for (let i = 0; i < atMost; i++) {\n      const next = iterator.next();\n      if (next.done) {\n        return [consumed, Iterable.empty()];\n      }\n      consumed.push(next.value);\n    }\n    return [consumed, {\n      [Symbol.iterator]() {\n        return iterator;\n      }\n    }];\n  }\n  Iterable.consume = consume;\n  /**\n   * Returns whether the iterables are the same length and all items are\n   * equal using the comparator function.\n   */\n  function equals(a, b) {\n    let comparator = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : (at, bt) => at === bt;\n    const ai = a[Symbol.iterator]();\n    const bi = b[Symbol.iterator]();\n    while (true) {\n      const an = ai.next();\n      const bn = bi.next();\n      if (an.done !== bn.done) {\n        return false;\n      } else if (an.done) {\n        return true;\n      } else if (!comparator(an.value, bn.value)) {\n        return false;\n      }\n    }\n  }\n  Iterable.equals = equals;\n})(Iterable || (Iterable = {}));","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { once } from './functional.js';\nimport { Iterable } from './iterator.js';\n/**\n * Enables logging of potentially leaked disposables.\n *\n * A disposable is considered leaked if it is not disposed or not registered as the child of\n * another disposable. This tracking is very simple an only works for classes that either\n * extend Disposable or use a DisposableStore. This means there are a lot of false positives.\n */\nconst TRACK_DISPOSABLES = false;\nlet disposableTracker = null;\nexport function setDisposableTracker(tracker) {\n  disposableTracker = tracker;\n}\nif (TRACK_DISPOSABLES) {\n  const __is_disposable_tracked__ = '__is_disposable_tracked__';\n  setDisposableTracker(new class {\n    trackDisposable(x) {\n      const stack = new Error('Potentially leaked disposable').stack;\n      setTimeout(() => {\n        if (!x[__is_disposable_tracked__]) {\n          console.log(stack);\n        }\n      }, 3000);\n    }\n    setParent(child, parent) {\n      if (child && child !== Disposable.None) {\n        try {\n          child[__is_disposable_tracked__] = true;\n        } catch (_a) {\n          // noop\n        }\n      }\n    }\n    markAsDisposed(disposable) {\n      if (disposable && disposable !== Disposable.None) {\n        try {\n          disposable[__is_disposable_tracked__] = true;\n        } catch (_a) {\n          // noop\n        }\n      }\n    }\n    markAsSingleton(disposable) {}\n  }());\n}\nfunction trackDisposable(x) {\n  disposableTracker === null || disposableTracker === void 0 ? void 0 : disposableTracker.trackDisposable(x);\n  return x;\n}\nfunction markAsDisposed(disposable) {\n  disposableTracker === null || disposableTracker === void 0 ? void 0 : disposableTracker.markAsDisposed(disposable);\n}\nfunction setParentOfDisposable(child, parent) {\n  disposableTracker === null || disposableTracker === void 0 ? void 0 : disposableTracker.setParent(child, parent);\n}\nfunction setParentOfDisposables(children, parent) {\n  if (!disposableTracker) {\n    return;\n  }\n  for (const child of children) {\n    disposableTracker.setParent(child, parent);\n  }\n}\n/**\n * Indicates that the given object is a singleton which does not need to be disposed.\n*/\nexport function markAsSingleton(singleton) {\n  disposableTracker === null || disposableTracker === void 0 ? void 0 : disposableTracker.markAsSingleton(singleton);\n  return singleton;\n}\nexport class MultiDisposeError extends Error {\n  constructor(errors) {\n    super(\"Encountered errors while disposing of store. Errors: [\".concat(errors.join(', '), \"]\"));\n    this.errors = errors;\n  }\n}\nexport function isDisposable(thing) {\n  return typeof thing.dispose === 'function' && thing.dispose.length === 0;\n}\nexport function dispose(arg) {\n  if (Iterable.is(arg)) {\n    let errors = [];\n    for (const d of arg) {\n      if (d) {\n        try {\n          d.dispose();\n        } catch (e) {\n          errors.push(e);\n        }\n      }\n    }\n    if (errors.length === 1) {\n      throw errors[0];\n    } else if (errors.length > 1) {\n      throw new MultiDisposeError(errors);\n    }\n    return Array.isArray(arg) ? [] : arg;\n  } else if (arg) {\n    arg.dispose();\n    return arg;\n  }\n}\nexport function combinedDisposable() {\n  for (var _len = arguments.length, disposables = new Array(_len), _key = 0; _key < _len; _key++) {\n    disposables[_key] = arguments[_key];\n  }\n  const parent = toDisposable(() => dispose(disposables));\n  setParentOfDisposables(disposables, parent);\n  return parent;\n}\nexport function toDisposable(fn) {\n  const self = trackDisposable({\n    dispose: once(() => {\n      markAsDisposed(self);\n      fn();\n    })\n  });\n  return self;\n}\nexport class DisposableStore {\n  constructor() {\n    this._toDispose = new Set();\n    this._isDisposed = false;\n    trackDisposable(this);\n  }\n  /**\n   * Dispose of all registered disposables and mark this object as disposed.\n   *\n   * Any future disposables added to this object will be disposed of on `add`.\n   */\n  dispose() {\n    if (this._isDisposed) {\n      return;\n    }\n    markAsDisposed(this);\n    this._isDisposed = true;\n    this.clear();\n  }\n  /**\n   * Dispose of all registered disposables but do not mark this object as disposed.\n   */\n  clear() {\n    try {\n      dispose(this._toDispose.values());\n    } finally {\n      this._toDispose.clear();\n    }\n  }\n  add(o) {\n    if (!o) {\n      return o;\n    }\n    if (o === this) {\n      throw new Error('Cannot register a disposable on itself!');\n    }\n    setParentOfDisposable(o, this);\n    if (this._isDisposed) {\n      if (!DisposableStore.DISABLE_DISPOSED_WARNING) {\n        console.warn(new Error('Trying to add a disposable to a DisposableStore that has already been disposed of. The added object will be leaked!').stack);\n      }\n    } else {\n      this._toDispose.add(o);\n    }\n    return o;\n  }\n}\nDisposableStore.DISABLE_DISPOSED_WARNING = false;\nexport class Disposable {\n  constructor() {\n    this._store = new DisposableStore();\n    trackDisposable(this);\n    setParentOfDisposable(this._store, this);\n  }\n  dispose() {\n    markAsDisposed(this);\n    this._store.dispose();\n  }\n  _register(o) {\n    if (o === this) {\n      throw new Error('Cannot register a disposable on itself!');\n    }\n    return this._store.add(o);\n  }\n}\nDisposable.None = Object.freeze({\n  dispose() {}\n});\n/**\n * Manages the lifecycle of a disposable value that may be changed.\n *\n * This ensures that when the disposable value is changed, the previously held disposable is disposed of. You can\n * also register a `MutableDisposable` on a `Disposable` to ensure it is automatically cleaned up.\n */\nexport class MutableDisposable {\n  constructor() {\n    this._isDisposed = false;\n    trackDisposable(this);\n  }\n  get value() {\n    return this._isDisposed ? undefined : this._value;\n  }\n  set value(value) {\n    var _a;\n    if (this._isDisposed || value === this._value) {\n      return;\n    }\n    (_a = this._value) === null || _a === void 0 ? void 0 : _a.dispose();\n    if (value) {\n      setParentOfDisposable(value, this);\n    }\n    this._value = value;\n  }\n  clear() {\n    this.value = undefined;\n  }\n  dispose() {\n    var _a;\n    this._isDisposed = true;\n    markAsDisposed(this);\n    (_a = this._value) === null || _a === void 0 ? void 0 : _a.dispose();\n    this._value = undefined;\n  }\n  /**\n   * Clears the value, but does not dispose it.\n   * The old value is returned.\n  */\n  clearAndLeak() {\n    const oldValue = this._value;\n    this._value = undefined;\n    if (oldValue) {\n      setParentOfDisposable(oldValue, null);\n    }\n    return oldValue;\n  }\n}\nexport class ImmortalReference {\n  constructor(object) {\n    this.object = object;\n  }\n  dispose() {}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nclass Node {\n  constructor(element) {\n    this.element = element;\n    this.next = Node.Undefined;\n    this.prev = Node.Undefined;\n  }\n}\nNode.Undefined = new Node(undefined);\nexport class LinkedList {\n  constructor() {\n    this._first = Node.Undefined;\n    this._last = Node.Undefined;\n    this._size = 0;\n  }\n  get size() {\n    return this._size;\n  }\n  isEmpty() {\n    return this._first === Node.Undefined;\n  }\n  clear() {\n    let node = this._first;\n    while (node !== Node.Undefined) {\n      const next = node.next;\n      node.prev = Node.Undefined;\n      node.next = Node.Undefined;\n      node = next;\n    }\n    this._first = Node.Undefined;\n    this._last = Node.Undefined;\n    this._size = 0;\n  }\n  unshift(element) {\n    return this._insert(element, false);\n  }\n  push(element) {\n    return this._insert(element, true);\n  }\n  _insert(element, atTheEnd) {\n    const newNode = new Node(element);\n    if (this._first === Node.Undefined) {\n      this._first = newNode;\n      this._last = newNode;\n    } else if (atTheEnd) {\n      // push\n      const oldLast = this._last;\n      this._last = newNode;\n      newNode.prev = oldLast;\n      oldLast.next = newNode;\n    } else {\n      // unshift\n      const oldFirst = this._first;\n      this._first = newNode;\n      newNode.next = oldFirst;\n      oldFirst.prev = newNode;\n    }\n    this._size += 1;\n    let didRemove = false;\n    return () => {\n      if (!didRemove) {\n        didRemove = true;\n        this._remove(newNode);\n      }\n    };\n  }\n  shift() {\n    if (this._first === Node.Undefined) {\n      return undefined;\n    } else {\n      const res = this._first.element;\n      this._remove(this._first);\n      return res;\n    }\n  }\n  pop() {\n    if (this._last === Node.Undefined) {\n      return undefined;\n    } else {\n      const res = this._last.element;\n      this._remove(this._last);\n      return res;\n    }\n  }\n  _remove(node) {\n    if (node.prev !== Node.Undefined && node.next !== Node.Undefined) {\n      // middle\n      const anchor = node.prev;\n      anchor.next = node.next;\n      node.next.prev = anchor;\n    } else if (node.prev === Node.Undefined && node.next === Node.Undefined) {\n      // only node\n      this._first = Node.Undefined;\n      this._last = Node.Undefined;\n    } else if (node.next === Node.Undefined) {\n      // last\n      this._last = this._last.prev;\n      this._last.next = Node.Undefined;\n    } else if (node.prev === Node.Undefined) {\n      // first\n      this._first = this._first.next;\n      this._first.prev = Node.Undefined;\n    }\n    // done\n    this._size -= 1;\n  }\n  *[Symbol.iterator]() {\n    let node = this._first;\n    while (node !== Node.Undefined) {\n      yield node.element;\n      node = node.next;\n    }\n  }\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { globals } from './platform.js';\nconst hasPerformanceNow = globals.performance && typeof globals.performance.now === 'function';\nexport class StopWatch {\n  constructor(highResolution) {\n    this._highResolution = hasPerformanceNow && highResolution;\n    this._startTime = this._now();\n    this._stopTime = -1;\n  }\n  static create() {\n    let highResolution = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    return new StopWatch(highResolution);\n  }\n  stop() {\n    this._stopTime = this._now();\n  }\n  elapsed() {\n    if (this._stopTime !== -1) {\n      return this._stopTime - this._startTime;\n    }\n    return this._now() - this._startTime;\n  }\n  _now() {\n    return this._highResolution ? globals.performance.now() : Date.now();\n  }\n}","import { onUnexpectedError } from './errors.js';\nimport { combinedDisposable, Disposable, DisposableStore, toDisposable } from './lifecycle.js';\nimport { LinkedList } from './linkedList.js';\nimport { StopWatch } from './stopwatch.js';\nexport var Event;\n(function (Event) {\n  Event.None = () => Disposable.None;\n  /**\n   * Given an event, returns another event which only fires once.\n   */\n  function once(event) {\n    return function (listener) {\n      let thisArgs = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      let disposables = arguments.length > 2 ? arguments[2] : undefined;\n      // we need this, in case the event fires during the listener call\n      let didFire = false;\n      let result;\n      result = event(e => {\n        if (didFire) {\n          return;\n        } else if (result) {\n          result.dispose();\n        } else {\n          didFire = true;\n        }\n        return listener.call(thisArgs, e);\n      }, null, disposables);\n      if (didFire) {\n        result.dispose();\n      }\n      return result;\n    };\n  }\n  Event.once = once;\n  /**\n   * @deprecated DO NOT use, this leaks memory\n   */\n  function map(event, map) {\n    return snapshot(function (listener) {\n      let thisArgs = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      let disposables = arguments.length > 2 ? arguments[2] : undefined;\n      return event(i => listener.call(thisArgs, map(i)), null, disposables);\n    });\n  }\n  Event.map = map;\n  /**\n   * @deprecated DO NOT use, this leaks memory\n   */\n  function forEach(event, each) {\n    return snapshot(function (listener) {\n      let thisArgs = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      let disposables = arguments.length > 2 ? arguments[2] : undefined;\n      return event(i => {\n        each(i);\n        listener.call(thisArgs, i);\n      }, null, disposables);\n    });\n  }\n  Event.forEach = forEach;\n  function filter(event, filter) {\n    return snapshot(function (listener) {\n      let thisArgs = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      let disposables = arguments.length > 2 ? arguments[2] : undefined;\n      return event(e => filter(e) && listener.call(thisArgs, e), null, disposables);\n    });\n  }\n  Event.filter = filter;\n  /**\n   * Given an event, returns the same event but typed as `Event<void>`.\n   */\n  function signal(event) {\n    return event;\n  }\n  Event.signal = signal;\n  function any() {\n    for (var _len = arguments.length, events = new Array(_len), _key = 0; _key < _len; _key++) {\n      events[_key] = arguments[_key];\n    }\n    return function (listener) {\n      let thisArgs = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      let disposables = arguments.length > 2 ? arguments[2] : undefined;\n      return combinedDisposable(...events.map(event => event(e => listener.call(thisArgs, e), null, disposables)));\n    };\n  }\n  Event.any = any;\n  /**\n   * @deprecated DO NOT use, this leaks memory\n   */\n  function reduce(event, merge, initial) {\n    let output = initial;\n    return map(event, e => {\n      output = merge(output, e);\n      return output;\n    });\n  }\n  Event.reduce = reduce;\n  /**\n   * @deprecated DO NOT use, this leaks memory\n   */\n  function snapshot(event) {\n    let listener;\n    const emitter = new Emitter({\n      onFirstListenerAdd() {\n        listener = event(emitter.fire, emitter);\n      },\n      onLastListenerRemove() {\n        listener.dispose();\n      }\n    });\n    return emitter.event;\n  }\n  /**\n   * @deprecated DO NOT use, this leaks memory\n   */\n  function debounce(event, merge) {\n    let delay = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 100;\n    let leading = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n    let leakWarningThreshold = arguments.length > 4 ? arguments[4] : undefined;\n    let subscription;\n    let output = undefined;\n    let handle = undefined;\n    let numDebouncedCalls = 0;\n    const emitter = new Emitter({\n      leakWarningThreshold,\n      onFirstListenerAdd() {\n        subscription = event(cur => {\n          numDebouncedCalls++;\n          output = merge(output, cur);\n          if (leading && !handle) {\n            emitter.fire(output);\n            output = undefined;\n          }\n          clearTimeout(handle);\n          handle = setTimeout(() => {\n            const _output = output;\n            output = undefined;\n            handle = undefined;\n            if (!leading || numDebouncedCalls > 1) {\n              emitter.fire(_output);\n            }\n            numDebouncedCalls = 0;\n          }, delay);\n        });\n      },\n      onLastListenerRemove() {\n        subscription.dispose();\n      }\n    });\n    return emitter.event;\n  }\n  Event.debounce = debounce;\n  /**\n   * @deprecated DO NOT use, this leaks memory\n   */\n  function latch(event) {\n    let equals = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : (a, b) => a === b;\n    let firstCall = true;\n    let cache;\n    return filter(event, value => {\n      const shouldEmit = firstCall || !equals(value, cache);\n      firstCall = false;\n      cache = value;\n      return shouldEmit;\n    });\n  }\n  Event.latch = latch;\n  /**\n   * @deprecated DO NOT use, this leaks memory\n   */\n  function split(event, isT) {\n    return [Event.filter(event, isT), Event.filter(event, e => !isT(e))];\n  }\n  Event.split = split;\n  /**\n   * @deprecated DO NOT use, this leaks memory\n   */\n  function buffer(event) {\n    let nextTick = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    let _buffer = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n    let buffer = _buffer.slice();\n    let listener = event(e => {\n      if (buffer) {\n        buffer.push(e);\n      } else {\n        emitter.fire(e);\n      }\n    });\n    const flush = () => {\n      if (buffer) {\n        buffer.forEach(e => emitter.fire(e));\n      }\n      buffer = null;\n    };\n    const emitter = new Emitter({\n      onFirstListenerAdd() {\n        if (!listener) {\n          listener = event(e => emitter.fire(e));\n        }\n      },\n      onFirstListenerDidAdd() {\n        if (buffer) {\n          if (nextTick) {\n            setTimeout(flush);\n          } else {\n            flush();\n          }\n        }\n      },\n      onLastListenerRemove() {\n        if (listener) {\n          listener.dispose();\n        }\n        listener = null;\n      }\n    });\n    return emitter.event;\n  }\n  Event.buffer = buffer;\n  class ChainableEvent {\n    constructor(event) {\n      this.event = event;\n    }\n    map(fn) {\n      return new ChainableEvent(map(this.event, fn));\n    }\n    forEach(fn) {\n      return new ChainableEvent(forEach(this.event, fn));\n    }\n    filter(fn) {\n      return new ChainableEvent(filter(this.event, fn));\n    }\n    reduce(merge, initial) {\n      return new ChainableEvent(reduce(this.event, merge, initial));\n    }\n    latch() {\n      return new ChainableEvent(latch(this.event));\n    }\n    debounce(merge) {\n      let delay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100;\n      let leading = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      let leakWarningThreshold = arguments.length > 3 ? arguments[3] : undefined;\n      return new ChainableEvent(debounce(this.event, merge, delay, leading, leakWarningThreshold));\n    }\n    on(listener, thisArgs, disposables) {\n      return this.event(listener, thisArgs, disposables);\n    }\n    once(listener, thisArgs, disposables) {\n      return once(this.event)(listener, thisArgs, disposables);\n    }\n  }\n  /**\n   * @deprecated DO NOT use, this leaks memory\n   */\n  function chain(event) {\n    return new ChainableEvent(event);\n  }\n  Event.chain = chain;\n  function fromNodeEventEmitter(emitter, eventName) {\n    let map = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : id => id;\n    const fn = function () {\n      return result.fire(map(...arguments));\n    };\n    const onFirstListenerAdd = () => emitter.on(eventName, fn);\n    const onLastListenerRemove = () => emitter.removeListener(eventName, fn);\n    const result = new Emitter({\n      onFirstListenerAdd,\n      onLastListenerRemove\n    });\n    return result.event;\n  }\n  Event.fromNodeEventEmitter = fromNodeEventEmitter;\n  function fromDOMEventEmitter(emitter, eventName) {\n    let map = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : id => id;\n    const fn = function () {\n      return result.fire(map(...arguments));\n    };\n    const onFirstListenerAdd = () => emitter.addEventListener(eventName, fn);\n    const onLastListenerRemove = () => emitter.removeEventListener(eventName, fn);\n    const result = new Emitter({\n      onFirstListenerAdd,\n      onLastListenerRemove\n    });\n    return result.event;\n  }\n  Event.fromDOMEventEmitter = fromDOMEventEmitter;\n  function toPromise(event) {\n    return new Promise(resolve => once(event)(resolve));\n  }\n  Event.toPromise = toPromise;\n})(Event || (Event = {}));\nclass EventProfiling {\n  constructor(name) {\n    this._listenerCount = 0;\n    this._invocationCount = 0;\n    this._elapsedOverall = 0;\n    this._name = \"\".concat(name, \"_\").concat(EventProfiling._idPool++);\n  }\n  start(listenerCount) {\n    this._stopWatch = new StopWatch(true);\n    this._listenerCount = listenerCount;\n  }\n  stop() {\n    if (this._stopWatch) {\n      const elapsed = this._stopWatch.elapsed();\n      this._elapsedOverall += elapsed;\n      this._invocationCount += 1;\n      console.info(\"did FIRE \".concat(this._name, \": elapsed_ms: \").concat(elapsed.toFixed(5), \", listener: \").concat(this._listenerCount, \" (elapsed_overall: \").concat(this._elapsedOverall.toFixed(2), \", invocations: \").concat(this._invocationCount, \")\"));\n      this._stopWatch = undefined;\n    }\n  }\n}\nEventProfiling._idPool = 0;\nlet _globalLeakWarningThreshold = -1;\nclass LeakageMonitor {\n  constructor(customThreshold) {\n    let name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Math.random().toString(18).slice(2, 5);\n    this.customThreshold = customThreshold;\n    this.name = name;\n    this._warnCountdown = 0;\n  }\n  dispose() {\n    if (this._stacks) {\n      this._stacks.clear();\n    }\n  }\n  check(listenerCount) {\n    let threshold = _globalLeakWarningThreshold;\n    if (typeof this.customThreshold === 'number') {\n      threshold = this.customThreshold;\n    }\n    if (threshold <= 0 || listenerCount < threshold) {\n      return undefined;\n    }\n    if (!this._stacks) {\n      this._stacks = new Map();\n    }\n    const stack = new Error().stack.split('\\n').slice(3).join('\\n');\n    const count = this._stacks.get(stack) || 0;\n    this._stacks.set(stack, count + 1);\n    this._warnCountdown -= 1;\n    if (this._warnCountdown <= 0) {\n      // only warn on first exceed and then every time the limit\n      // is exceeded by 50% again\n      this._warnCountdown = threshold * 0.5;\n      // find most frequent listener and print warning\n      let topStack;\n      let topCount = 0;\n      for (const [stack, count] of this._stacks) {\n        if (!topStack || topCount < count) {\n          topStack = stack;\n          topCount = count;\n        }\n      }\n      console.warn(\"[\".concat(this.name, \"] potential listener LEAK detected, having \").concat(listenerCount, \" listeners already. MOST frequent listener (\").concat(topCount, \"):\"));\n      console.warn(topStack);\n    }\n    return () => {\n      const count = this._stacks.get(stack) || 0;\n      this._stacks.set(stack, count - 1);\n    };\n  }\n}\n/**\n * The Emitter can be used to expose an Event to the public\n * to fire it from the insides.\n * Sample:\n    class Document {\n\n        private readonly _onDidChange = new Emitter<(value:string)=>any>();\n\n        public onDidChange = this._onDidChange.event;\n\n        // getter-style\n        // get onDidChange(): Event<(value:string)=>any> {\n        // \treturn this._onDidChange.event;\n        // }\n\n        private _doIt() {\n            //...\n            this._onDidChange.fire(value);\n        }\n    }\n */\nexport class Emitter {\n  constructor(options) {\n    var _a;\n    this._disposed = false;\n    this._options = options;\n    this._leakageMon = _globalLeakWarningThreshold > 0 ? new LeakageMonitor(this._options && this._options.leakWarningThreshold) : undefined;\n    this._perfMon = ((_a = this._options) === null || _a === void 0 ? void 0 : _a._profName) ? new EventProfiling(this._options._profName) : undefined;\n  }\n  /**\n   * For the public to allow to subscribe\n   * to events from this Emitter\n   */\n  get event() {\n    if (!this._event) {\n      this._event = (listener, thisArgs, disposables) => {\n        var _a;\n        if (!this._listeners) {\n          this._listeners = new LinkedList();\n        }\n        const firstListener = this._listeners.isEmpty();\n        if (firstListener && this._options && this._options.onFirstListenerAdd) {\n          this._options.onFirstListenerAdd(this);\n        }\n        const remove = this._listeners.push(!thisArgs ? listener : [listener, thisArgs]);\n        if (firstListener && this._options && this._options.onFirstListenerDidAdd) {\n          this._options.onFirstListenerDidAdd(this);\n        }\n        if (this._options && this._options.onListenerDidAdd) {\n          this._options.onListenerDidAdd(this, listener, thisArgs);\n        }\n        // check and record this emitter for potential leakage\n        const removeMonitor = (_a = this._leakageMon) === null || _a === void 0 ? void 0 : _a.check(this._listeners.size);\n        const result = toDisposable(() => {\n          if (removeMonitor) {\n            removeMonitor();\n          }\n          if (!this._disposed) {\n            remove();\n            if (this._options && this._options.onLastListenerRemove) {\n              const hasListeners = this._listeners && !this._listeners.isEmpty();\n              if (!hasListeners) {\n                this._options.onLastListenerRemove(this);\n              }\n            }\n          }\n        });\n        if (disposables instanceof DisposableStore) {\n          disposables.add(result);\n        } else if (Array.isArray(disposables)) {\n          disposables.push(result);\n        }\n        return result;\n      };\n    }\n    return this._event;\n  }\n  /**\n   * To be kept private to fire an event to\n   * subscribers\n   */\n  fire(event) {\n    var _a, _b;\n    if (this._listeners) {\n      // put all [listener,event]-pairs into delivery queue\n      // then emit all event. an inner/nested event might be\n      // the driver of this\n      if (!this._deliveryQueue) {\n        this._deliveryQueue = new LinkedList();\n      }\n      for (let listener of this._listeners) {\n        this._deliveryQueue.push([listener, event]);\n      }\n      // start/stop performance insight collection\n      (_a = this._perfMon) === null || _a === void 0 ? void 0 : _a.start(this._deliveryQueue.size);\n      while (this._deliveryQueue.size > 0) {\n        const [listener, event] = this._deliveryQueue.shift();\n        try {\n          if (typeof listener === 'function') {\n            listener.call(undefined, event);\n          } else {\n            listener[0].call(listener[1], event);\n          }\n        } catch (e) {\n          onUnexpectedError(e);\n        }\n      }\n      (_b = this._perfMon) === null || _b === void 0 ? void 0 : _b.stop();\n    }\n  }\n  dispose() {\n    var _a, _b, _c, _d, _e;\n    if (!this._disposed) {\n      this._disposed = true;\n      (_a = this._listeners) === null || _a === void 0 ? void 0 : _a.clear();\n      (_b = this._deliveryQueue) === null || _b === void 0 ? void 0 : _b.clear();\n      (_d = (_c = this._options) === null || _c === void 0 ? void 0 : _c.onLastListenerRemove) === null || _d === void 0 ? void 0 : _d.call(_c);\n      (_e = this._leakageMon) === null || _e === void 0 ? void 0 : _e.dispose();\n    }\n  }\n}\nexport class PauseableEmitter extends Emitter {\n  constructor(options) {\n    super(options);\n    this._isPaused = 0;\n    this._eventQueue = new LinkedList();\n    this._mergeFn = options === null || options === void 0 ? void 0 : options.merge;\n  }\n  pause() {\n    this._isPaused++;\n  }\n  resume() {\n    if (this._isPaused !== 0 && --this._isPaused === 0) {\n      if (this._mergeFn) {\n        // use the merge function to create a single composite\n        // event. make a copy in case firing pauses this emitter\n        const events = Array.from(this._eventQueue);\n        this._eventQueue.clear();\n        super.fire(this._mergeFn(events));\n      } else {\n        // no merging, fire each event individually and test\n        // that this emitter isn't paused halfway through\n        while (!this._isPaused && this._eventQueue.size !== 0) {\n          super.fire(this._eventQueue.shift());\n        }\n      }\n    }\n  }\n  fire(event) {\n    if (this._listeners) {\n      if (this._isPaused !== 0) {\n        this._eventQueue.push(event);\n      } else {\n        super.fire(event);\n      }\n    }\n  }\n}\nexport class DebounceEmitter extends PauseableEmitter {\n  constructor(options) {\n    var _a;\n    super(options);\n    this._delay = (_a = options.delay) !== null && _a !== void 0 ? _a : 100;\n  }\n  fire(event) {\n    if (!this._handle) {\n      this.pause();\n      this._handle = setTimeout(() => {\n        this._handle = undefined;\n        this.resume();\n      }, this._delay);\n    }\n    super.fire(event);\n  }\n}\n/**\n * The EventBufferer is useful in situations in which you want\n * to delay firing your events during some code.\n * You can wrap that code and be sure that the event will not\n * be fired during that wrap.\n *\n * ```\n * const emitter: Emitter;\n * const delayer = new EventDelayer();\n * const delayedEvent = delayer.wrapEvent(emitter.event);\n *\n * delayedEvent(console.log);\n *\n * delayer.bufferEvents(() => {\n *   emitter.fire(); // event will not be fired yet\n * });\n *\n * // event will only be fired at this point\n * ```\n */\nexport class EventBufferer {\n  constructor() {\n    this.buffers = [];\n  }\n  wrapEvent(event) {\n    return (listener, thisArgs, disposables) => {\n      return event(i => {\n        const buffer = this.buffers[this.buffers.length - 1];\n        if (buffer) {\n          buffer.push(() => listener.call(thisArgs, i));\n        } else {\n          listener.call(thisArgs, i);\n        }\n      }, undefined, disposables);\n    };\n  }\n  bufferEvents(fn) {\n    const buffer = [];\n    this.buffers.push(buffer);\n    const r = fn();\n    this.buffers.pop();\n    buffer.forEach(flush => flush());\n    return r;\n  }\n}\n/**\n * A Relay is an event forwarder which functions as a replugabble event pipe.\n * Once created, you can connect an input event to it and it will simply forward\n * events from that input event through its own `event` property. The `input`\n * can be changed at any point in time.\n */\nexport class Relay {\n  constructor() {\n    this.listening = false;\n    this.inputEvent = Event.None;\n    this.inputEventListener = Disposable.None;\n    this.emitter = new Emitter({\n      onFirstListenerDidAdd: () => {\n        this.listening = true;\n        this.inputEventListener = this.inputEvent(this.emitter.fire, this.emitter);\n      },\n      onLastListenerRemove: () => {\n        this.listening = false;\n        this.inputEventListener.dispose();\n      }\n    });\n    this.event = this.emitter.event;\n  }\n  set input(event) {\n    this.inputEvent = event;\n    if (this.listening) {\n      this.inputEventListener.dispose();\n      this.inputEventListener = event(this.emitter.fire, this.emitter);\n    }\n  }\n  dispose() {\n    this.inputEventListener.dispose();\n    this.emitter.dispose();\n  }\n}","/**\n * @returns whether the provided parameter is a JavaScript Array or not.\n */\nexport function isArray(array) {\n  return Array.isArray(array);\n}\n/**\n * @returns whether the provided parameter is a JavaScript String or not.\n */\nexport function isString(str) {\n  return typeof str === 'string';\n}\n/**\n *\n * @returns whether the provided parameter is of type `object` but **not**\n *\t`null`, an `array`, a `regexp`, nor a `date`.\n */\nexport function isObject(obj) {\n  // The method can't do a type cast since there are type (like strings) which\n  // are subclasses of any put not positvely matched by the function. Hence type\n  // narrowing results in wrong results.\n  return typeof obj === 'object' && obj !== null && !Array.isArray(obj) && !(obj instanceof RegExp) && !(obj instanceof Date);\n}\n/**\n * In **contrast** to just checking `typeof` this will return `false` for `NaN`.\n * @returns whether the provided parameter is a JavaScript Number or not.\n */\nexport function isNumber(obj) {\n  return typeof obj === 'number' && !isNaN(obj);\n}\n/**\n * @returns whether the provided parameter is a JavaScript Boolean or not.\n */\nexport function isBoolean(obj) {\n  return obj === true || obj === false;\n}\n/**\n * @returns whether the provided parameter is undefined.\n */\nexport function isUndefined(obj) {\n  return typeof obj === 'undefined';\n}\n/**\n * @returns whether the provided parameter is defined.\n */\nexport function isDefined(arg) {\n  return !isUndefinedOrNull(arg);\n}\n/**\n * @returns whether the provided parameter is undefined or null.\n */\nexport function isUndefinedOrNull(obj) {\n  return isUndefined(obj) || obj === null;\n}\nexport function assertType(condition, type) {\n  if (!condition) {\n    throw new Error(type ? \"Unexpected type, expected '\".concat(type, \"'\") : 'Unexpected type');\n  }\n}\n/**\n * Asserts that the argument passed in is neither undefined nor null.\n */\nexport function assertIsDefined(arg) {\n  if (isUndefinedOrNull(arg)) {\n    throw new Error('Assertion Failed: argument is undefined or null');\n  }\n  return arg;\n}\n/**\n * @returns whether the provided parameter is a JavaScript Function or not.\n */\nexport function isFunction(obj) {\n  return typeof obj === 'function';\n}\nexport function validateConstraints(args, constraints) {\n  const len = Math.min(args.length, constraints.length);\n  for (let i = 0; i < len; i++) {\n    validateConstraint(args[i], constraints[i]);\n  }\n}\nexport function validateConstraint(arg, constraint) {\n  if (isString(constraint)) {\n    if (typeof arg !== constraint) {\n      throw new Error(\"argument does not match constraint: typeof \".concat(constraint));\n    }\n  } else if (isFunction(constraint)) {\n    try {\n      if (arg instanceof constraint) {\n        return;\n      }\n    } catch (_a) {\n      // ignore\n    }\n    if (!isUndefinedOrNull(arg) && arg.constructor === constraint) {\n      return;\n    }\n    if (constraint.length === 1 && constraint.call(undefined, arg) === true) {\n      return;\n    }\n    throw new Error(\"argument does not match one of these constraints: arg instanceof constraint, arg.constructor === constraint, nor constraint(arg) === true\");\n  }\n}\nexport function getAllPropertyNames(obj) {\n  let res = [];\n  let proto = Object.getPrototypeOf(obj);\n  while (Object.prototype !== proto) {\n    res = res.concat(Object.getOwnPropertyNames(proto));\n    proto = Object.getPrototypeOf(proto);\n  }\n  return res;\n}\nexport function getAllMethodNames(obj) {\n  const methods = [];\n  for (const prop of getAllPropertyNames(obj)) {\n    if (typeof obj[prop] === 'function') {\n      methods.push(prop);\n    }\n  }\n  return methods;\n}\nexport function createProxyObject(methodNames, invoke) {\n  const createProxyMethod = method => {\n    return function () {\n      const args = Array.prototype.slice.call(arguments, 0);\n      return invoke(method, args);\n    };\n  };\n  let result = {};\n  for (const methodName of methodNames) {\n    result[methodName] = createProxyMethod(methodName);\n  }\n  return result;\n}\n/**\n * Converts null to undefined, passes all other values through.\n */\nexport function withNullAsUndefined(x) {\n  return x === null ? undefined : x;\n}\nexport function assertNever(value) {\n  let message = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'Unreachable';\n  throw new Error(message);\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport function isFalsyOrWhitespace(str) {\n  if (!str || typeof str !== 'string') {\n    return true;\n  }\n  return str.trim().length === 0;\n}\nconst _formatRegexp = /{(\\d+)}/g;\n/**\n * Helper to produce a string with a variable number of arguments. Insert variable segments\n * into the string using the {n} notation where N is the index of the argument following the string.\n * @param value string to which formatting is applied\n * @param args replacements for {n}-entries\n */\nexport function format(value) {\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n  if (args.length === 0) {\n    return value;\n  }\n  return value.replace(_formatRegexp, function (match, group) {\n    const idx = parseInt(group, 10);\n    return isNaN(idx) || idx < 0 || idx >= args.length ? match : args[idx];\n  });\n}\n/**\n * Converts HTML characters inside the string to use entities instead. Makes the string safe from\n * being used e.g. in HTMLElement.innerHTML.\n */\nexport function escape(html) {\n  return html.replace(/[<>&]/g, function (match) {\n    switch (match) {\n      case '<':\n        return '&lt;';\n      case '>':\n        return '&gt;';\n      case '&':\n        return '&amp;';\n      default:\n        return match;\n    }\n  });\n}\n/**\n * Escapes regular expression characters in a given string\n */\nexport function escapeRegExpCharacters(value) {\n  return value.replace(/[\\\\\\{\\}\\*\\+\\?\\|\\^\\$\\.\\[\\]\\(\\)]/g, '\\\\$&');\n}\n/**\n * Removes all occurrences of needle from the beginning and end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim (default is a blank)\n */\nexport function trim(haystack) {\n  let needle = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ' ';\n  const trimmed = ltrim(haystack, needle);\n  return rtrim(trimmed, needle);\n}\n/**\n * Removes all occurrences of needle from the beginning of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function ltrim(haystack, needle) {\n  if (!haystack || !needle) {\n    return haystack;\n  }\n  const needleLen = needle.length;\n  if (needleLen === 0 || haystack.length === 0) {\n    return haystack;\n  }\n  let offset = 0;\n  while (haystack.indexOf(needle, offset) === offset) {\n    offset = offset + needleLen;\n  }\n  return haystack.substring(offset);\n}\n/**\n * Removes all occurrences of needle from the end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function rtrim(haystack, needle) {\n  if (!haystack || !needle) {\n    return haystack;\n  }\n  const needleLen = needle.length,\n    haystackLen = haystack.length;\n  if (needleLen === 0 || haystackLen === 0) {\n    return haystack;\n  }\n  let offset = haystackLen,\n    idx = -1;\n  while (true) {\n    idx = haystack.lastIndexOf(needle, offset - 1);\n    if (idx === -1 || idx + needleLen !== offset) {\n      break;\n    }\n    if (idx === 0) {\n      return '';\n    }\n    offset = idx;\n  }\n  return haystack.substring(0, offset);\n}\nexport function convertSimple2RegExpPattern(pattern) {\n  return pattern.replace(/[\\-\\\\\\{\\}\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&').replace(/[\\*]/g, '.*');\n}\nexport function stripWildcards(pattern) {\n  return pattern.replace(/\\*/g, '');\n}\nexport function createRegExp(searchString, isRegex) {\n  let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  if (!searchString) {\n    throw new Error('Cannot create regex from empty string');\n  }\n  if (!isRegex) {\n    searchString = escapeRegExpCharacters(searchString);\n  }\n  if (options.wholeWord) {\n    if (!/\\B/.test(searchString.charAt(0))) {\n      searchString = '\\\\b' + searchString;\n    }\n    if (!/\\B/.test(searchString.charAt(searchString.length - 1))) {\n      searchString = searchString + '\\\\b';\n    }\n  }\n  let modifiers = '';\n  if (options.global) {\n    modifiers += 'g';\n  }\n  if (!options.matchCase) {\n    modifiers += 'i';\n  }\n  if (options.multiline) {\n    modifiers += 'm';\n  }\n  if (options.unicode) {\n    modifiers += 'u';\n  }\n  return new RegExp(searchString, modifiers);\n}\nexport function regExpLeadsToEndlessLoop(regexp) {\n  // Exit early if it's one of these special cases which are meant to match\n  // against an empty string\n  if (regexp.source === '^' || regexp.source === '^$' || regexp.source === '$' || regexp.source === '^\\\\s*$') {\n    return false;\n  }\n  // We check against an empty string. If the regular expression doesn't advance\n  // (e.g. ends in an endless loop) it will match an empty string.\n  const match = regexp.exec('');\n  return !!(match && regexp.lastIndex === 0);\n}\nexport function regExpFlags(regexp) {\n  return (regexp.global ? 'g' : '') + (regexp.ignoreCase ? 'i' : '') + (regexp.multiline ? 'm' : '') + (regexp /* standalone editor compilation */.unicode ? 'u' : '');\n}\nexport function splitLines(str) {\n  return str.split(/\\r\\n|\\r|\\n/);\n}\n/**\n * Returns first index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function firstNonWhitespaceIndex(str) {\n  for (let i = 0, len = str.length; i < len; i++) {\n    const chCode = str.charCodeAt(i);\n    if (chCode !== 32 /* Space */ && chCode !== 9 /* Tab */) {\n      return i;\n    }\n  }\n  return -1;\n}\n/**\n * Returns the leading whitespace of the string.\n * If the string contains only whitespaces, returns entire string\n */\nexport function getLeadingWhitespace(str) {\n  let start = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  let end = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : str.length;\n  for (let i = start; i < end; i++) {\n    const chCode = str.charCodeAt(i);\n    if (chCode !== 32 /* Space */ && chCode !== 9 /* Tab */) {\n      return str.substring(start, i);\n    }\n  }\n  return str.substring(start, end);\n}\n/**\n * Returns last index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function lastNonWhitespaceIndex(str) {\n  let startIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : str.length - 1;\n  for (let i = startIndex; i >= 0; i--) {\n    const chCode = str.charCodeAt(i);\n    if (chCode !== 32 /* Space */ && chCode !== 9 /* Tab */) {\n      return i;\n    }\n  }\n  return -1;\n}\nexport function compare(a, b) {\n  if (a < b) {\n    return -1;\n  } else if (a > b) {\n    return 1;\n  } else {\n    return 0;\n  }\n}\nexport function compareSubstring(a, b) {\n  let aStart = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  let aEnd = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : a.length;\n  let bStart = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;\n  let bEnd = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : b.length;\n  for (; aStart < aEnd && bStart < bEnd; aStart++, bStart++) {\n    let codeA = a.charCodeAt(aStart);\n    let codeB = b.charCodeAt(bStart);\n    if (codeA < codeB) {\n      return -1;\n    } else if (codeA > codeB) {\n      return 1;\n    }\n  }\n  const aLen = aEnd - aStart;\n  const bLen = bEnd - bStart;\n  if (aLen < bLen) {\n    return -1;\n  } else if (aLen > bLen) {\n    return 1;\n  }\n  return 0;\n}\nexport function compareIgnoreCase(a, b) {\n  return compareSubstringIgnoreCase(a, b, 0, a.length, 0, b.length);\n}\nexport function compareSubstringIgnoreCase(a, b) {\n  let aStart = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  let aEnd = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : a.length;\n  let bStart = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;\n  let bEnd = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : b.length;\n  for (; aStart < aEnd && bStart < bEnd; aStart++, bStart++) {\n    let codeA = a.charCodeAt(aStart);\n    let codeB = b.charCodeAt(bStart);\n    if (codeA === codeB) {\n      // equal\n      continue;\n    }\n    if (codeA >= 128 || codeB >= 128) {\n      // not ASCII letters -> fallback to lower-casing strings\n      return compareSubstring(a.toLowerCase(), b.toLowerCase(), aStart, aEnd, bStart, bEnd);\n    }\n    // mapper lower-case ascii letter onto upper-case varinats\n    // [97-122] (lower ascii) --> [65-90] (upper ascii)\n    if (isLowerAsciiLetter(codeA)) {\n      codeA -= 32;\n    }\n    if (isLowerAsciiLetter(codeB)) {\n      codeB -= 32;\n    }\n    // compare both code points\n    const diff = codeA - codeB;\n    if (diff === 0) {\n      continue;\n    }\n    return diff;\n  }\n  const aLen = aEnd - aStart;\n  const bLen = bEnd - bStart;\n  if (aLen < bLen) {\n    return -1;\n  } else if (aLen > bLen) {\n    return 1;\n  }\n  return 0;\n}\nexport function isLowerAsciiLetter(code) {\n  return code >= 97 /* a */ && code <= 122 /* z */;\n}\nexport function isUpperAsciiLetter(code) {\n  return code >= 65 /* A */ && code <= 90 /* Z */;\n}\nexport function equalsIgnoreCase(a, b) {\n  return a.length === b.length && compareSubstringIgnoreCase(a, b) === 0;\n}\nexport function startsWithIgnoreCase(str, candidate) {\n  const candidateLength = candidate.length;\n  if (candidate.length > str.length) {\n    return false;\n  }\n  return compareSubstringIgnoreCase(str, candidate, 0, candidateLength) === 0;\n}\n/**\n * @returns the length of the common prefix of the two strings.\n */\nexport function commonPrefixLength(a, b) {\n  let i,\n    len = Math.min(a.length, b.length);\n  for (i = 0; i < len; i++) {\n    if (a.charCodeAt(i) !== b.charCodeAt(i)) {\n      return i;\n    }\n  }\n  return len;\n}\n/**\n * @returns the length of the common suffix of the two strings.\n */\nexport function commonSuffixLength(a, b) {\n  let i,\n    len = Math.min(a.length, b.length);\n  const aLastIndex = a.length - 1;\n  const bLastIndex = b.length - 1;\n  for (i = 0; i < len; i++) {\n    if (a.charCodeAt(aLastIndex - i) !== b.charCodeAt(bLastIndex - i)) {\n      return i;\n    }\n  }\n  return len;\n}\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function isHighSurrogate(charCode) {\n  return 0xD800 <= charCode && charCode <= 0xDBFF;\n}\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function isLowSurrogate(charCode) {\n  return 0xDC00 <= charCode && charCode <= 0xDFFF;\n}\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function computeCodePoint(highSurrogate, lowSurrogate) {\n  return (highSurrogate - 0xD800 << 10) + (lowSurrogate - 0xDC00) + 0x10000;\n}\n/**\n * get the code point that begins at offset `offset`\n */\nexport function getNextCodePoint(str, len, offset) {\n  const charCode = str.charCodeAt(offset);\n  if (isHighSurrogate(charCode) && offset + 1 < len) {\n    const nextCharCode = str.charCodeAt(offset + 1);\n    if (isLowSurrogate(nextCharCode)) {\n      return computeCodePoint(charCode, nextCharCode);\n    }\n  }\n  return charCode;\n}\n/**\n * get the code point that ends right before offset `offset`\n */\nfunction getPrevCodePoint(str, offset) {\n  const charCode = str.charCodeAt(offset - 1);\n  if (isLowSurrogate(charCode) && offset > 1) {\n    const prevCharCode = str.charCodeAt(offset - 2);\n    if (isHighSurrogate(prevCharCode)) {\n      return computeCodePoint(prevCharCode, charCode);\n    }\n  }\n  return charCode;\n}\nexport function nextCharLength(str, offset) {\n  const graphemeBreakTree = GraphemeBreakTree.getInstance();\n  const initialOffset = offset;\n  const len = str.length;\n  const initialCodePoint = getNextCodePoint(str, len, offset);\n  offset += initialCodePoint >= 65536 /* UNICODE_SUPPLEMENTARY_PLANE_BEGIN */ ? 2 : 1;\n  let graphemeBreakType = graphemeBreakTree.getGraphemeBreakType(initialCodePoint);\n  while (offset < len) {\n    const nextCodePoint = getNextCodePoint(str, len, offset);\n    const nextGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(nextCodePoint);\n    if (breakBetweenGraphemeBreakType(graphemeBreakType, nextGraphemeBreakType)) {\n      break;\n    }\n    offset += nextCodePoint >= 65536 /* UNICODE_SUPPLEMENTARY_PLANE_BEGIN */ ? 2 : 1;\n    graphemeBreakType = nextGraphemeBreakType;\n  }\n  return offset - initialOffset;\n}\nexport function prevCharLength(str, offset) {\n  const graphemeBreakTree = GraphemeBreakTree.getInstance();\n  const initialOffset = offset;\n  const initialCodePoint = getPrevCodePoint(str, offset);\n  offset -= initialCodePoint >= 65536 /* UNICODE_SUPPLEMENTARY_PLANE_BEGIN */ ? 2 : 1;\n  let graphemeBreakType = graphemeBreakTree.getGraphemeBreakType(initialCodePoint);\n  while (offset > 0) {\n    const prevCodePoint = getPrevCodePoint(str, offset);\n    const prevGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(prevCodePoint);\n    if (breakBetweenGraphemeBreakType(prevGraphemeBreakType, graphemeBreakType)) {\n      break;\n    }\n    offset -= prevCodePoint >= 65536 /* UNICODE_SUPPLEMENTARY_PLANE_BEGIN */ ? 2 : 1;\n    graphemeBreakType = prevGraphemeBreakType;\n  }\n  return initialOffset - offset;\n}\n/**\n * Generated using https://github.com/alexdima/unicode-utils/blob/master/generate-rtl-test.js\n */\nconst CONTAINS_RTL = /(?:[\\u05BE\\u05C0\\u05C3\\u05C6\\u05D0-\\u05F4\\u0608\\u060B\\u060D\\u061B-\\u064A\\u066D-\\u066F\\u0671-\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1-\\u07EA\\u07F4\\u07F5\\u07FA-\\u0815\\u081A\\u0824\\u0828\\u0830-\\u0858\\u085E-\\u08BD\\u200F\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFD3D\\uFD50-\\uFDFC\\uFE70-\\uFEFC]|\\uD802[\\uDC00-\\uDD1B\\uDD20-\\uDE00\\uDE10-\\uDE33\\uDE40-\\uDEE4\\uDEEB-\\uDF35\\uDF40-\\uDFFF]|\\uD803[\\uDC00-\\uDCFF]|\\uD83A[\\uDC00-\\uDCCF\\uDD00-\\uDD43\\uDD50-\\uDFFF]|\\uD83B[\\uDC00-\\uDEBB])/;\n/**\n * Returns true if `str` contains any Unicode character that is classified as \"R\" or \"AL\".\n */\nexport function containsRTL(str) {\n  return CONTAINS_RTL.test(str);\n}\n/**\n * Generated using https://github.com/alexdima/unicode-utils/blob/master/generate-emoji-test.js\n */\nconst CONTAINS_EMOJI = /(?:[\\u231A\\u231B\\u23F0\\u23F3\\u2600-\\u27BF\\u2B50\\u2B55]|\\uD83C[\\uDDE6-\\uDDFF\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDE4F\\uDE80-\\uDEFC\\uDFE0-\\uDFEB]|\\uD83E[\\uDD00-\\uDDFF\\uDE70-\\uDED6])/;\nexport function containsEmoji(str) {\n  return CONTAINS_EMOJI.test(str);\n}\nconst IS_BASIC_ASCII = /^[\\t\\n\\r\\x20-\\x7E]*$/;\n/**\n * Returns true if `str` contains only basic ASCII characters in the range 32 - 126 (including 32 and 126) or \\n, \\r, \\t\n */\nexport function isBasicASCII(str) {\n  return IS_BASIC_ASCII.test(str);\n}\nexport const UNUSUAL_LINE_TERMINATORS = /[\\u2028\\u2029]/; // LINE SEPARATOR (LS) or PARAGRAPH SEPARATOR (PS)\n/**\n * Returns true if `str` contains unusual line terminators, like LS or PS\n */\nexport function containsUnusualLineTerminators(str) {\n  return UNUSUAL_LINE_TERMINATORS.test(str);\n}\nexport function containsFullWidthCharacter(str) {\n  for (let i = 0, len = str.length; i < len; i++) {\n    if (isFullWidthCharacter(str.charCodeAt(i))) {\n      return true;\n    }\n  }\n  return false;\n}\nexport function isFullWidthCharacter(charCode) {\n  // Do a cheap trick to better support wrapping of wide characters, treat them as 2 columns\n  // http://jrgraphix.net/research/unicode_blocks.php\n  //          2E80 — 2EFF   CJK Radicals Supplement\n  //          2F00 — 2FDF   Kangxi Radicals\n  //          2FF0 — 2FFF   Ideographic Description Characters\n  //          3000 — 303F   CJK Symbols and Punctuation\n  //          3040 — 309F   Hiragana\n  //          30A0 — 30FF   Katakana\n  //          3100 — 312F   Bopomofo\n  //          3130 — 318F   Hangul Compatibility Jamo\n  //          3190 — 319F   Kanbun\n  //          31A0 — 31BF   Bopomofo Extended\n  //          31F0 — 31FF   Katakana Phonetic Extensions\n  //          3200 — 32FF   Enclosed CJK Letters and Months\n  //          3300 — 33FF   CJK Compatibility\n  //          3400 — 4DBF   CJK Unified Ideographs Extension A\n  //          4DC0 — 4DFF   Yijing Hexagram Symbols\n  //          4E00 — 9FFF   CJK Unified Ideographs\n  //          A000 — A48F   Yi Syllables\n  //          A490 — A4CF   Yi Radicals\n  //          AC00 — D7AF   Hangul Syllables\n  // [IGNORE] D800 — DB7F   High Surrogates\n  // [IGNORE] DB80 — DBFF   High Private Use Surrogates\n  // [IGNORE] DC00 — DFFF   Low Surrogates\n  // [IGNORE] E000 — F8FF   Private Use Area\n  //          F900 — FAFF   CJK Compatibility Ideographs\n  // [IGNORE] FB00 — FB4F   Alphabetic Presentation Forms\n  // [IGNORE] FB50 — FDFF   Arabic Presentation Forms-A\n  // [IGNORE] FE00 — FE0F   Variation Selectors\n  // [IGNORE] FE20 — FE2F   Combining Half Marks\n  // [IGNORE] FE30 — FE4F   CJK Compatibility Forms\n  // [IGNORE] FE50 — FE6F   Small Form Variants\n  // [IGNORE] FE70 — FEFF   Arabic Presentation Forms-B\n  //          FF00 — FFEF   Halfwidth and Fullwidth Forms\n  //               [https://en.wikipedia.org/wiki/Halfwidth_and_fullwidth_forms]\n  //               of which FF01 - FF5E fullwidth ASCII of 21 to 7E\n  // [IGNORE]    and FF65 - FFDC halfwidth of Katakana and Hangul\n  // [IGNORE] FFF0 — FFFF   Specials\n  charCode = +charCode; // @perf\n  return charCode >= 0x2E80 && charCode <= 0xD7AF || charCode >= 0xF900 && charCode <= 0xFAFF || charCode >= 0xFF01 && charCode <= 0xFF5E;\n}\n/**\n * A fast function (therefore imprecise) to check if code points are emojis.\n * Generated using https://github.com/alexdima/unicode-utils/blob/master/generate-emoji-test.js\n */\nexport function isEmojiImprecise(x) {\n  return x >= 0x1F1E6 && x <= 0x1F1FF || x === 8986 || x === 8987 || x === 9200 || x === 9203 || x >= 9728 && x <= 10175 || x === 11088 || x === 11093 || x >= 127744 && x <= 128591 || x >= 128640 && x <= 128764 || x >= 128992 && x <= 129003 || x >= 129280 && x <= 129535 || x >= 129648 && x <= 129750;\n}\n// -- UTF-8 BOM\nexport const UTF8_BOM_CHARACTER = String.fromCharCode(65279 /* UTF8_BOM */);\nexport function startsWithUTF8BOM(str) {\n  return !!(str && str.length > 0 && str.charCodeAt(0) === 65279 /* UTF8_BOM */);\n}\nexport function containsUppercaseCharacter(target) {\n  let ignoreEscapedChars = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  if (!target) {\n    return false;\n  }\n  if (ignoreEscapedChars) {\n    target = target.replace(/\\\\./g, '');\n  }\n  return target.toLowerCase() !== target;\n}\n/**\n * Produces 'a'-'z', followed by 'A'-'Z'... followed by 'a'-'z', etc.\n */\nexport function singleLetterHash(n) {\n  const LETTERS_CNT = 90 /* Z */ - 65 /* A */ + 1;\n  n = n % (2 * LETTERS_CNT);\n  if (n < LETTERS_CNT) {\n    return String.fromCharCode(97 /* a */ + n);\n  }\n  return String.fromCharCode(65 /* A */ + n - LETTERS_CNT);\n}\n//#region Unicode Grapheme Break\nexport function getGraphemeBreakType(codePoint) {\n  const graphemeBreakTree = GraphemeBreakTree.getInstance();\n  return graphemeBreakTree.getGraphemeBreakType(codePoint);\n}\nexport function breakBetweenGraphemeBreakType(breakTypeA, breakTypeB) {\n  // http://www.unicode.org/reports/tr29/#Grapheme_Cluster_Boundary_Rules\n  // !!! Let's make the common case a bit faster\n  if (breakTypeA === 0 /* Other */) {\n    // see https://www.unicode.org/Public/13.0.0/ucd/auxiliary/GraphemeBreakTest-13.0.0d10.html#table\n    return breakTypeB !== 5 /* Extend */ && breakTypeB !== 7 /* SpacingMark */;\n  }\n  // Do not break between a CR and LF. Otherwise, break before and after controls.\n  // GB3                                        CR × LF\n  // GB4                       (Control | CR | LF) ÷\n  // GB5                                           ÷ (Control | CR | LF)\n  if (breakTypeA === 2 /* CR */) {\n    if (breakTypeB === 3 /* LF */) {\n      return false; // GB3\n    }\n  }\n  if (breakTypeA === 4 /* Control */ || breakTypeA === 2 /* CR */ || breakTypeA === 3 /* LF */) {\n    return true; // GB4\n  }\n  if (breakTypeB === 4 /* Control */ || breakTypeB === 2 /* CR */ || breakTypeB === 3 /* LF */) {\n    return true; // GB5\n  }\n  // Do not break Hangul syllable sequences.\n  // GB6                                         L × (L | V | LV | LVT)\n  // GB7                                  (LV | V) × (V | T)\n  // GB8                                 (LVT | T) × T\n  if (breakTypeA === 8 /* L */) {\n    if (breakTypeB === 8 /* L */ || breakTypeB === 9 /* V */ || breakTypeB === 11 /* LV */ || breakTypeB === 12 /* LVT */) {\n      return false; // GB6\n    }\n  }\n  if (breakTypeA === 11 /* LV */ || breakTypeA === 9 /* V */) {\n    if (breakTypeB === 9 /* V */ || breakTypeB === 10 /* T */) {\n      return false; // GB7\n    }\n  }\n  if (breakTypeA === 12 /* LVT */ || breakTypeA === 10 /* T */) {\n    if (breakTypeB === 10 /* T */) {\n      return false; // GB8\n    }\n  }\n  // Do not break before extending characters or ZWJ.\n  // GB9                                           × (Extend | ZWJ)\n  if (breakTypeB === 5 /* Extend */ || breakTypeB === 13 /* ZWJ */) {\n    return false; // GB9\n  }\n  // The GB9a and GB9b rules only apply to extended grapheme clusters:\n  // Do not break before SpacingMarks, or after Prepend characters.\n  // GB9a                                          × SpacingMark\n  // GB9b                                  Prepend ×\n  if (breakTypeB === 7 /* SpacingMark */) {\n    return false; // GB9a\n  }\n  if (breakTypeA === 1 /* Prepend */) {\n    return false; // GB9b\n  }\n  // Do not break within emoji modifier sequences or emoji zwj sequences.\n  // GB11    \\p{Extended_Pictographic} Extend* ZWJ × \\p{Extended_Pictographic}\n  if (breakTypeA === 13 /* ZWJ */ && breakTypeB === 14 /* Extended_Pictographic */) {\n    // Note: we are not implementing the rule entirely here to avoid introducing states\n    return false; // GB11\n  }\n  // GB12                          sot (RI RI)* RI × RI\n  // GB13                        [^RI] (RI RI)* RI × RI\n  if (breakTypeA === 6 /* Regional_Indicator */ && breakTypeB === 6 /* Regional_Indicator */) {\n    // Note: we are not implementing the rule entirely here to avoid introducing states\n    return false; // GB12 & GB13\n  }\n  // GB999                                     Any ÷ Any\n  return true;\n}\nclass GraphemeBreakTree {\n  constructor() {\n    this._data = getGraphemeBreakRawData();\n  }\n  static getInstance() {\n    if (!GraphemeBreakTree._INSTANCE) {\n      GraphemeBreakTree._INSTANCE = new GraphemeBreakTree();\n    }\n    return GraphemeBreakTree._INSTANCE;\n  }\n  getGraphemeBreakType(codePoint) {\n    // !!! Let's make 7bit ASCII a bit faster: 0..31\n    if (codePoint < 32) {\n      if (codePoint === 10 /* LineFeed */) {\n        return 3 /* LF */;\n      }\n      if (codePoint === 13 /* CarriageReturn */) {\n        return 2 /* CR */;\n      }\n      return 4 /* Control */;\n    }\n    // !!! Let's make 7bit ASCII a bit faster: 32..126\n    if (codePoint < 127) {\n      return 0 /* Other */;\n    }\n    const data = this._data;\n    const nodeCount = data.length / 3;\n    let nodeIndex = 1;\n    while (nodeIndex <= nodeCount) {\n      if (codePoint < data[3 * nodeIndex]) {\n        // go left\n        nodeIndex = 2 * nodeIndex;\n      } else if (codePoint > data[3 * nodeIndex + 1]) {\n        // go right\n        nodeIndex = 2 * nodeIndex + 1;\n      } else {\n        // hit\n        return data[3 * nodeIndex + 2];\n      }\n    }\n    return 0 /* Other */;\n  }\n}\nGraphemeBreakTree._INSTANCE = null;\nfunction getGraphemeBreakRawData() {\n  // generated using https://github.com/alexdima/unicode-utils/blob/master/generate-grapheme-break.js\n  return JSON.parse('[0,0,0,51592,51592,11,44424,44424,11,72251,72254,5,7150,7150,7,48008,48008,11,55176,55176,11,128420,128420,14,3276,3277,5,9979,9980,14,46216,46216,11,49800,49800,11,53384,53384,11,70726,70726,5,122915,122916,5,129320,129327,14,2558,2558,5,5906,5908,5,9762,9763,14,43360,43388,8,45320,45320,11,47112,47112,11,48904,48904,11,50696,50696,11,52488,52488,11,54280,54280,11,70082,70083,1,71350,71350,7,73111,73111,5,127892,127893,14,128726,128727,14,129473,129474,14,2027,2035,5,2901,2902,5,3784,3789,5,6754,6754,5,8418,8420,5,9877,9877,14,11088,11088,14,44008,44008,5,44872,44872,11,45768,45768,11,46664,46664,11,47560,47560,11,48456,48456,11,49352,49352,11,50248,50248,11,51144,51144,11,52040,52040,11,52936,52936,11,53832,53832,11,54728,54728,11,69811,69814,5,70459,70460,5,71096,71099,7,71998,71998,5,72874,72880,5,119149,119149,7,127374,127374,14,128335,128335,14,128482,128482,14,128765,128767,14,129399,129400,14,129680,129685,14,1476,1477,5,2377,2380,7,2759,2760,5,3137,3140,7,3458,3459,7,4153,4154,5,6432,6434,5,6978,6978,5,7675,7679,5,9723,9726,14,9823,9823,14,9919,9923,14,10035,10036,14,42736,42737,5,43596,43596,5,44200,44200,11,44648,44648,11,45096,45096,11,45544,45544,11,45992,45992,11,46440,46440,11,46888,46888,11,47336,47336,11,47784,47784,11,48232,48232,11,48680,48680,11,49128,49128,11,49576,49576,11,50024,50024,11,50472,50472,11,50920,50920,11,51368,51368,11,51816,51816,11,52264,52264,11,52712,52712,11,53160,53160,11,53608,53608,11,54056,54056,11,54504,54504,11,54952,54952,11,68108,68111,5,69933,69940,5,70197,70197,7,70498,70499,7,70845,70845,5,71229,71229,5,71727,71735,5,72154,72155,5,72344,72345,5,73023,73029,5,94095,94098,5,121403,121452,5,126981,127182,14,127538,127546,14,127990,127990,14,128391,128391,14,128445,128449,14,128500,128505,14,128752,128752,14,129160,129167,14,129356,129356,14,129432,129442,14,129648,129651,14,129751,131069,14,173,173,4,1757,1757,1,2274,2274,1,2494,2494,5,2641,2641,5,2876,2876,5,3014,3016,7,3262,3262,7,3393,3396,5,3570,3571,7,3968,3972,5,4228,4228,7,6086,6086,5,6679,6680,5,6912,6915,5,7080,7081,5,7380,7392,5,8252,8252,14,9096,9096,14,9748,9749,14,9784,9786,14,9833,9850,14,9890,9894,14,9938,9938,14,9999,9999,14,10085,10087,14,12349,12349,14,43136,43137,7,43454,43456,7,43755,43755,7,44088,44088,11,44312,44312,11,44536,44536,11,44760,44760,11,44984,44984,11,45208,45208,11,45432,45432,11,45656,45656,11,45880,45880,11,46104,46104,11,46328,46328,11,46552,46552,11,46776,46776,11,47000,47000,11,47224,47224,11,47448,47448,11,47672,47672,11,47896,47896,11,48120,48120,11,48344,48344,11,48568,48568,11,48792,48792,11,49016,49016,11,49240,49240,11,49464,49464,11,49688,49688,11,49912,49912,11,50136,50136,11,50360,50360,11,50584,50584,11,50808,50808,11,51032,51032,11,51256,51256,11,51480,51480,11,51704,51704,11,51928,51928,11,52152,52152,11,52376,52376,11,52600,52600,11,52824,52824,11,53048,53048,11,53272,53272,11,53496,53496,11,53720,53720,11,53944,53944,11,54168,54168,11,54392,54392,11,54616,54616,11,54840,54840,11,55064,55064,11,65438,65439,5,69633,69633,5,69837,69837,1,70018,70018,7,70188,70190,7,70368,70370,7,70465,70468,7,70712,70719,5,70835,70840,5,70850,70851,5,71132,71133,5,71340,71340,7,71458,71461,5,71985,71989,7,72002,72002,7,72193,72202,5,72281,72283,5,72766,72766,7,72885,72886,5,73104,73105,5,92912,92916,5,113824,113827,4,119173,119179,5,121505,121519,5,125136,125142,5,127279,127279,14,127489,127490,14,127570,127743,14,127900,127901,14,128254,128254,14,128369,128370,14,128400,128400,14,128425,128432,14,128468,128475,14,128489,128494,14,128715,128720,14,128745,128745,14,128759,128760,14,129004,129023,14,129296,129304,14,129340,129342,14,129388,129392,14,129404,129407,14,129454,129455,14,129485,129487,14,129659,129663,14,129719,129727,14,917536,917631,5,13,13,2,1160,1161,5,1564,1564,4,1807,1807,1,2085,2087,5,2363,2363,7,2402,2403,5,2507,2508,7,2622,2624,7,2691,2691,7,2786,2787,5,2881,2884,5,3006,3006,5,3072,3072,5,3170,3171,5,3267,3268,7,3330,3331,7,3406,3406,1,3538,3540,5,3655,3662,5,3897,3897,5,4038,4038,5,4184,4185,5,4352,4447,8,6068,6069,5,6155,6157,5,6448,6449,7,6742,6742,5,6783,6783,5,6966,6970,5,7042,7042,7,7143,7143,7,7212,7219,5,7412,7412,5,8206,8207,4,8294,8303,4,8596,8601,14,9410,9410,14,9742,9742,14,9757,9757,14,9770,9770,14,9794,9794,14,9828,9828,14,9855,9855,14,9882,9882,14,9900,9903,14,9929,9933,14,9963,9967,14,9987,9988,14,10006,10006,14,10062,10062,14,10175,10175,14,11744,11775,5,42607,42607,5,43043,43044,7,43263,43263,5,43444,43445,7,43569,43570,5,43698,43700,5,43766,43766,5,44032,44032,11,44144,44144,11,44256,44256,11,44368,44368,11,44480,44480,11,44592,44592,11,44704,44704,11,44816,44816,11,44928,44928,11,45040,45040,11,45152,45152,11,45264,45264,11,45376,45376,11,45488,45488,11,45600,45600,11,45712,45712,11,45824,45824,11,45936,45936,11,46048,46048,11,46160,46160,11,46272,46272,11,46384,46384,11,46496,46496,11,46608,46608,11,46720,46720,11,46832,46832,11,46944,46944,11,47056,47056,11,47168,47168,11,47280,47280,11,47392,47392,11,47504,47504,11,47616,47616,11,47728,47728,11,47840,47840,11,47952,47952,11,48064,48064,11,48176,48176,11,48288,48288,11,48400,48400,11,48512,48512,11,48624,48624,11,48736,48736,11,48848,48848,11,48960,48960,11,49072,49072,11,49184,49184,11,49296,49296,11,49408,49408,11,49520,49520,11,49632,49632,11,49744,49744,11,49856,49856,11,49968,49968,11,50080,50080,11,50192,50192,11,50304,50304,11,50416,50416,11,50528,50528,11,50640,50640,11,50752,50752,11,50864,50864,11,50976,50976,11,51088,51088,11,51200,51200,11,51312,51312,11,51424,51424,11,51536,51536,11,51648,51648,11,51760,51760,11,51872,51872,11,51984,51984,11,52096,52096,11,52208,52208,11,52320,52320,11,52432,52432,11,52544,52544,11,52656,52656,11,52768,52768,11,52880,52880,11,52992,52992,11,53104,53104,11,53216,53216,11,53328,53328,11,53440,53440,11,53552,53552,11,53664,53664,11,53776,53776,11,53888,53888,11,54000,54000,11,54112,54112,11,54224,54224,11,54336,54336,11,54448,54448,11,54560,54560,11,54672,54672,11,54784,54784,11,54896,54896,11,55008,55008,11,55120,55120,11,64286,64286,5,66272,66272,5,68900,68903,5,69762,69762,7,69817,69818,5,69927,69931,5,70003,70003,5,70070,70078,5,70094,70094,7,70194,70195,7,70206,70206,5,70400,70401,5,70463,70463,7,70475,70477,7,70512,70516,5,70722,70724,5,70832,70832,5,70842,70842,5,70847,70848,5,71088,71089,7,71102,71102,7,71219,71226,5,71231,71232,5,71342,71343,7,71453,71455,5,71463,71467,5,71737,71738,5,71995,71996,5,72000,72000,7,72145,72147,7,72160,72160,5,72249,72249,7,72273,72278,5,72330,72342,5,72752,72758,5,72850,72871,5,72882,72883,5,73018,73018,5,73031,73031,5,73109,73109,5,73461,73462,7,94031,94031,5,94192,94193,7,119142,119142,7,119155,119162,4,119362,119364,5,121476,121476,5,122888,122904,5,123184,123190,5,126976,126979,14,127184,127231,14,127344,127345,14,127405,127461,14,127514,127514,14,127561,127567,14,127778,127779,14,127896,127896,14,127985,127986,14,127995,127999,5,128326,128328,14,128360,128366,14,128378,128378,14,128394,128397,14,128405,128406,14,128422,128423,14,128435,128443,14,128453,128464,14,128479,128480,14,128484,128487,14,128496,128498,14,128640,128709,14,128723,128724,14,128736,128741,14,128747,128748,14,128755,128755,14,128762,128762,14,128981,128991,14,129096,129103,14,129292,129292,14,129311,129311,14,129329,129330,14,129344,129349,14,129360,129374,14,129394,129394,14,129402,129402,14,129413,129425,14,129445,129450,14,129466,129471,14,129483,129483,14,129511,129535,14,129653,129655,14,129667,129670,14,129705,129711,14,129731,129743,14,917505,917505,4,917760,917999,5,10,10,3,127,159,4,768,879,5,1471,1471,5,1536,1541,1,1648,1648,5,1767,1768,5,1840,1866,5,2070,2073,5,2137,2139,5,2307,2307,7,2366,2368,7,2382,2383,7,2434,2435,7,2497,2500,5,2519,2519,5,2563,2563,7,2631,2632,5,2677,2677,5,2750,2752,7,2763,2764,7,2817,2817,5,2879,2879,5,2891,2892,7,2914,2915,5,3008,3008,5,3021,3021,5,3076,3076,5,3146,3149,5,3202,3203,7,3264,3265,7,3271,3272,7,3298,3299,5,3390,3390,5,3402,3404,7,3426,3427,5,3535,3535,5,3544,3550,7,3635,3635,7,3763,3763,7,3893,3893,5,3953,3966,5,3981,3991,5,4145,4145,7,4157,4158,5,4209,4212,5,4237,4237,5,4520,4607,10,5970,5971,5,6071,6077,5,6089,6099,5,6277,6278,5,6439,6440,5,6451,6456,7,6683,6683,5,6744,6750,5,6765,6770,7,6846,6846,5,6964,6964,5,6972,6972,5,7019,7027,5,7074,7077,5,7083,7085,5,7146,7148,7,7154,7155,7,7222,7223,5,7394,7400,5,7416,7417,5,8204,8204,5,8233,8233,4,8288,8292,4,8413,8416,5,8482,8482,14,8986,8987,14,9193,9203,14,9654,9654,14,9733,9733,14,9745,9745,14,9752,9752,14,9760,9760,14,9766,9766,14,9774,9775,14,9792,9792,14,9800,9811,14,9825,9826,14,9831,9831,14,9852,9853,14,9872,9873,14,9880,9880,14,9885,9887,14,9896,9897,14,9906,9916,14,9926,9927,14,9936,9936,14,9941,9960,14,9974,9974,14,9982,9985,14,9992,9997,14,10002,10002,14,10017,10017,14,10055,10055,14,10071,10071,14,10145,10145,14,11013,11015,14,11503,11505,5,12334,12335,5,12951,12951,14,42612,42621,5,43014,43014,5,43047,43047,7,43204,43205,5,43335,43345,5,43395,43395,7,43450,43451,7,43561,43566,5,43573,43574,5,43644,43644,5,43710,43711,5,43758,43759,7,44005,44005,5,44012,44012,7,44060,44060,11,44116,44116,11,44172,44172,11,44228,44228,11,44284,44284,11,44340,44340,11,44396,44396,11,44452,44452,11,44508,44508,11,44564,44564,11,44620,44620,11,44676,44676,11,44732,44732,11,44788,44788,11,44844,44844,11,44900,44900,11,44956,44956,11,45012,45012,11,45068,45068,11,45124,45124,11,45180,45180,11,45236,45236,11,45292,45292,11,45348,45348,11,45404,45404,11,45460,45460,11,45516,45516,11,45572,45572,11,45628,45628,11,45684,45684,11,45740,45740,11,45796,45796,11,45852,45852,11,45908,45908,11,45964,45964,11,46020,46020,11,46076,46076,11,46132,46132,11,46188,46188,11,46244,46244,11,46300,46300,11,46356,46356,11,46412,46412,11,46468,46468,11,46524,46524,11,46580,46580,11,46636,46636,11,46692,46692,11,46748,46748,11,46804,46804,11,46860,46860,11,46916,46916,11,46972,46972,11,47028,47028,11,47084,47084,11,47140,47140,11,47196,47196,11,47252,47252,11,47308,47308,11,47364,47364,11,47420,47420,11,47476,47476,11,47532,47532,11,47588,47588,11,47644,47644,11,47700,47700,11,47756,47756,11,47812,47812,11,47868,47868,11,47924,47924,11,47980,47980,11,48036,48036,11,48092,48092,11,48148,48148,11,48204,48204,11,48260,48260,11,48316,48316,11,48372,48372,11,48428,48428,11,48484,48484,11,48540,48540,11,48596,48596,11,48652,48652,11,48708,48708,11,48764,48764,11,48820,48820,11,48876,48876,11,48932,48932,11,48988,48988,11,49044,49044,11,49100,49100,11,49156,49156,11,49212,49212,11,49268,49268,11,49324,49324,11,49380,49380,11,49436,49436,11,49492,49492,11,49548,49548,11,49604,49604,11,49660,49660,11,49716,49716,11,49772,49772,11,49828,49828,11,49884,49884,11,49940,49940,11,49996,49996,11,50052,50052,11,50108,50108,11,50164,50164,11,50220,50220,11,50276,50276,11,50332,50332,11,50388,50388,11,50444,50444,11,50500,50500,11,50556,50556,11,50612,50612,11,50668,50668,11,50724,50724,11,50780,50780,11,50836,50836,11,50892,50892,11,50948,50948,11,51004,51004,11,51060,51060,11,51116,51116,11,51172,51172,11,51228,51228,11,51284,51284,11,51340,51340,11,51396,51396,11,51452,51452,11,51508,51508,11,51564,51564,11,51620,51620,11,51676,51676,11,51732,51732,11,51788,51788,11,51844,51844,11,51900,51900,11,51956,51956,11,52012,52012,11,52068,52068,11,52124,52124,11,52180,52180,11,52236,52236,11,52292,52292,11,52348,52348,11,52404,52404,11,52460,52460,11,52516,52516,11,52572,52572,11,52628,52628,11,52684,52684,11,52740,52740,11,52796,52796,11,52852,52852,11,52908,52908,11,52964,52964,11,53020,53020,11,53076,53076,11,53132,53132,11,53188,53188,11,53244,53244,11,53300,53300,11,53356,53356,11,53412,53412,11,53468,53468,11,53524,53524,11,53580,53580,11,53636,53636,11,53692,53692,11,53748,53748,11,53804,53804,11,53860,53860,11,53916,53916,11,53972,53972,11,54028,54028,11,54084,54084,11,54140,54140,11,54196,54196,11,54252,54252,11,54308,54308,11,54364,54364,11,54420,54420,11,54476,54476,11,54532,54532,11,54588,54588,11,54644,54644,11,54700,54700,11,54756,54756,11,54812,54812,11,54868,54868,11,54924,54924,11,54980,54980,11,55036,55036,11,55092,55092,11,55148,55148,11,55216,55238,9,65056,65071,5,65529,65531,4,68097,68099,5,68159,68159,5,69446,69456,5,69688,69702,5,69808,69810,7,69815,69816,7,69821,69821,1,69888,69890,5,69932,69932,7,69957,69958,7,70016,70017,5,70067,70069,7,70079,70080,7,70089,70092,5,70095,70095,5,70191,70193,5,70196,70196,5,70198,70199,5,70367,70367,5,70371,70378,5,70402,70403,7,70462,70462,5,70464,70464,5,70471,70472,7,70487,70487,5,70502,70508,5,70709,70711,7,70720,70721,7,70725,70725,7,70750,70750,5,70833,70834,7,70841,70841,7,70843,70844,7,70846,70846,7,70849,70849,7,71087,71087,5,71090,71093,5,71100,71101,5,71103,71104,5,71216,71218,7,71227,71228,7,71230,71230,7,71339,71339,5,71341,71341,5,71344,71349,5,71351,71351,5,71456,71457,7,71462,71462,7,71724,71726,7,71736,71736,7,71984,71984,5,71991,71992,7,71997,71997,7,71999,71999,1,72001,72001,1,72003,72003,5,72148,72151,5,72156,72159,7,72164,72164,7,72243,72248,5,72250,72250,1,72263,72263,5,72279,72280,7,72324,72329,1,72343,72343,7,72751,72751,7,72760,72765,5,72767,72767,5,72873,72873,7,72881,72881,7,72884,72884,7,73009,73014,5,73020,73021,5,73030,73030,1,73098,73102,7,73107,73108,7,73110,73110,7,73459,73460,5,78896,78904,4,92976,92982,5,94033,94087,7,94180,94180,5,113821,113822,5,119141,119141,5,119143,119145,5,119150,119154,5,119163,119170,5,119210,119213,5,121344,121398,5,121461,121461,5,121499,121503,5,122880,122886,5,122907,122913,5,122918,122922,5,123628,123631,5,125252,125258,5,126980,126980,14,127183,127183,14,127245,127247,14,127340,127343,14,127358,127359,14,127377,127386,14,127462,127487,6,127491,127503,14,127535,127535,14,127548,127551,14,127568,127569,14,127744,127777,14,127780,127891,14,127894,127895,14,127897,127899,14,127902,127984,14,127987,127989,14,127991,127994,14,128000,128253,14,128255,128317,14,128329,128334,14,128336,128359,14,128367,128368,14,128371,128377,14,128379,128390,14,128392,128393,14,128398,128399,14,128401,128404,14,128407,128419,14,128421,128421,14,128424,128424,14,128433,128434,14,128444,128444,14,128450,128452,14,128465,128467,14,128476,128478,14,128481,128481,14,128483,128483,14,128488,128488,14,128495,128495,14,128499,128499,14,128506,128591,14,128710,128714,14,128721,128722,14,128725,128725,14,128728,128735,14,128742,128744,14,128746,128746,14,128749,128751,14,128753,128754,14,128756,128758,14,128761,128761,14,128763,128764,14,128884,128895,14,128992,129003,14,129036,129039,14,129114,129119,14,129198,129279,14,129293,129295,14,129305,129310,14,129312,129319,14,129328,129328,14,129331,129338,14,129343,129343,14,129351,129355,14,129357,129359,14,129375,129387,14,129393,129393,14,129395,129398,14,129401,129401,14,129403,129403,14,129408,129412,14,129426,129431,14,129443,129444,14,129451,129453,14,129456,129465,14,129472,129472,14,129475,129482,14,129484,129484,14,129488,129510,14,129536,129647,14,129652,129652,14,129656,129658,14,129664,129666,14,129671,129679,14,129686,129704,14,129712,129718,14,129728,129730,14,129744,129750,14,917504,917504,4,917506,917535,4,917632,917759,4,918000,921599,4,0,9,4,11,12,4,14,31,4,169,169,14,174,174,14,1155,1159,5,1425,1469,5,1473,1474,5,1479,1479,5,1552,1562,5,1611,1631,5,1750,1756,5,1759,1764,5,1770,1773,5,1809,1809,5,1958,1968,5,2045,2045,5,2075,2083,5,2089,2093,5,2259,2273,5,2275,2306,5,2362,2362,5,2364,2364,5,2369,2376,5,2381,2381,5,2385,2391,5,2433,2433,5,2492,2492,5,2495,2496,7,2503,2504,7,2509,2509,5,2530,2531,5,2561,2562,5,2620,2620,5,2625,2626,5,2635,2637,5,2672,2673,5,2689,2690,5,2748,2748,5,2753,2757,5,2761,2761,7,2765,2765,5,2810,2815,5,2818,2819,7,2878,2878,5,2880,2880,7,2887,2888,7,2893,2893,5,2903,2903,5,2946,2946,5,3007,3007,7,3009,3010,7,3018,3020,7,3031,3031,5,3073,3075,7,3134,3136,5,3142,3144,5,3157,3158,5,3201,3201,5,3260,3260,5,3263,3263,5,3266,3266,5,3270,3270,5,3274,3275,7,3285,3286,5,3328,3329,5,3387,3388,5,3391,3392,7,3398,3400,7,3405,3405,5,3415,3415,5,3457,3457,5,3530,3530,5,3536,3537,7,3542,3542,5,3551,3551,5,3633,3633,5,3636,3642,5,3761,3761,5,3764,3772,5,3864,3865,5,3895,3895,5,3902,3903,7,3967,3967,7,3974,3975,5,3993,4028,5,4141,4144,5,4146,4151,5,4155,4156,7,4182,4183,7,4190,4192,5,4226,4226,5,4229,4230,5,4253,4253,5,4448,4519,9,4957,4959,5,5938,5940,5,6002,6003,5,6070,6070,7,6078,6085,7,6087,6088,7,6109,6109,5,6158,6158,4,6313,6313,5,6435,6438,7,6441,6443,7,6450,6450,5,6457,6459,5,6681,6682,7,6741,6741,7,6743,6743,7,6752,6752,5,6757,6764,5,6771,6780,5,6832,6845,5,6847,6848,5,6916,6916,7,6965,6965,5,6971,6971,7,6973,6977,7,6979,6980,7,7040,7041,5,7073,7073,7,7078,7079,7,7082,7082,7,7142,7142,5,7144,7145,5,7149,7149,5,7151,7153,5,7204,7211,7,7220,7221,7,7376,7378,5,7393,7393,7,7405,7405,5,7415,7415,7,7616,7673,5,8203,8203,4,8205,8205,13,8232,8232,4,8234,8238,4,8265,8265,14,8293,8293,4,8400,8412,5,8417,8417,5,8421,8432,5,8505,8505,14,8617,8618,14,9000,9000,14,9167,9167,14,9208,9210,14,9642,9643,14,9664,9664,14,9728,9732,14,9735,9741,14,9743,9744,14,9746,9746,14,9750,9751,14,9753,9756,14,9758,9759,14,9761,9761,14,9764,9765,14,9767,9769,14,9771,9773,14,9776,9783,14,9787,9791,14,9793,9793,14,9795,9799,14,9812,9822,14,9824,9824,14,9827,9827,14,9829,9830,14,9832,9832,14,9851,9851,14,9854,9854,14,9856,9861,14,9874,9876,14,9878,9879,14,9881,9881,14,9883,9884,14,9888,9889,14,9895,9895,14,9898,9899,14,9904,9905,14,9917,9918,14,9924,9925,14,9928,9928,14,9934,9935,14,9937,9937,14,9939,9940,14,9961,9962,14,9968,9973,14,9975,9978,14,9981,9981,14,9986,9986,14,9989,9989,14,9998,9998,14,10000,10001,14,10004,10004,14,10013,10013,14,10024,10024,14,10052,10052,14,10060,10060,14,10067,10069,14,10083,10084,14,10133,10135,14,10160,10160,14,10548,10549,14,11035,11036,14,11093,11093,14,11647,11647,5,12330,12333,5,12336,12336,14,12441,12442,5,12953,12953,14,42608,42610,5,42654,42655,5,43010,43010,5,43019,43019,5,43045,43046,5,43052,43052,5,43188,43203,7,43232,43249,5,43302,43309,5,43346,43347,7,43392,43394,5,43443,43443,5,43446,43449,5,43452,43453,5,43493,43493,5,43567,43568,7,43571,43572,7,43587,43587,5,43597,43597,7,43696,43696,5,43703,43704,5,43713,43713,5,43756,43757,5,43765,43765,7,44003,44004,7,44006,44007,7,44009,44010,7,44013,44013,5,44033,44059,12,44061,44087,12,44089,44115,12,44117,44143,12,44145,44171,12,44173,44199,12,44201,44227,12,44229,44255,12,44257,44283,12,44285,44311,12,44313,44339,12,44341,44367,12,44369,44395,12,44397,44423,12,44425,44451,12,44453,44479,12,44481,44507,12,44509,44535,12,44537,44563,12,44565,44591,12,44593,44619,12,44621,44647,12,44649,44675,12,44677,44703,12,44705,44731,12,44733,44759,12,44761,44787,12,44789,44815,12,44817,44843,12,44845,44871,12,44873,44899,12,44901,44927,12,44929,44955,12,44957,44983,12,44985,45011,12,45013,45039,12,45041,45067,12,45069,45095,12,45097,45123,12,45125,45151,12,45153,45179,12,45181,45207,12,45209,45235,12,45237,45263,12,45265,45291,12,45293,45319,12,45321,45347,12,45349,45375,12,45377,45403,12,45405,45431,12,45433,45459,12,45461,45487,12,45489,45515,12,45517,45543,12,45545,45571,12,45573,45599,12,45601,45627,12,45629,45655,12,45657,45683,12,45685,45711,12,45713,45739,12,45741,45767,12,45769,45795,12,45797,45823,12,45825,45851,12,45853,45879,12,45881,45907,12,45909,45935,12,45937,45963,12,45965,45991,12,45993,46019,12,46021,46047,12,46049,46075,12,46077,46103,12,46105,46131,12,46133,46159,12,46161,46187,12,46189,46215,12,46217,46243,12,46245,46271,12,46273,46299,12,46301,46327,12,46329,46355,12,46357,46383,12,46385,46411,12,46413,46439,12,46441,46467,12,46469,46495,12,46497,46523,12,46525,46551,12,46553,46579,12,46581,46607,12,46609,46635,12,46637,46663,12,46665,46691,12,46693,46719,12,46721,46747,12,46749,46775,12,46777,46803,12,46805,46831,12,46833,46859,12,46861,46887,12,46889,46915,12,46917,46943,12,46945,46971,12,46973,46999,12,47001,47027,12,47029,47055,12,47057,47083,12,47085,47111,12,47113,47139,12,47141,47167,12,47169,47195,12,47197,47223,12,47225,47251,12,47253,47279,12,47281,47307,12,47309,47335,12,47337,47363,12,47365,47391,12,47393,47419,12,47421,47447,12,47449,47475,12,47477,47503,12,47505,47531,12,47533,47559,12,47561,47587,12,47589,47615,12,47617,47643,12,47645,47671,12,47673,47699,12,47701,47727,12,47729,47755,12,47757,47783,12,47785,47811,12,47813,47839,12,47841,47867,12,47869,47895,12,47897,47923,12,47925,47951,12,47953,47979,12,47981,48007,12,48009,48035,12,48037,48063,12,48065,48091,12,48093,48119,12,48121,48147,12,48149,48175,12,48177,48203,12,48205,48231,12,48233,48259,12,48261,48287,12,48289,48315,12,48317,48343,12,48345,48371,12,48373,48399,12,48401,48427,12,48429,48455,12,48457,48483,12,48485,48511,12,48513,48539,12,48541,48567,12,48569,48595,12,48597,48623,12,48625,48651,12,48653,48679,12,48681,48707,12,48709,48735,12,48737,48763,12,48765,48791,12,48793,48819,12,48821,48847,12,48849,48875,12,48877,48903,12,48905,48931,12,48933,48959,12,48961,48987,12,48989,49015,12,49017,49043,12,49045,49071,12,49073,49099,12,49101,49127,12,49129,49155,12,49157,49183,12,49185,49211,12,49213,49239,12,49241,49267,12,49269,49295,12,49297,49323,12,49325,49351,12,49353,49379,12,49381,49407,12,49409,49435,12,49437,49463,12,49465,49491,12,49493,49519,12,49521,49547,12,49549,49575,12,49577,49603,12,49605,49631,12,49633,49659,12,49661,49687,12,49689,49715,12,49717,49743,12,49745,49771,12,49773,49799,12,49801,49827,12,49829,49855,12,49857,49883,12,49885,49911,12,49913,49939,12,49941,49967,12,49969,49995,12,49997,50023,12,50025,50051,12,50053,50079,12,50081,50107,12,50109,50135,12,50137,50163,12,50165,50191,12,50193,50219,12,50221,50247,12,50249,50275,12,50277,50303,12,50305,50331,12,50333,50359,12,50361,50387,12,50389,50415,12,50417,50443,12,50445,50471,12,50473,50499,12,50501,50527,12,50529,50555,12,50557,50583,12,50585,50611,12,50613,50639,12,50641,50667,12,50669,50695,12,50697,50723,12,50725,50751,12,50753,50779,12,50781,50807,12,50809,50835,12,50837,50863,12,50865,50891,12,50893,50919,12,50921,50947,12,50949,50975,12,50977,51003,12,51005,51031,12,51033,51059,12,51061,51087,12,51089,51115,12,51117,51143,12,51145,51171,12,51173,51199,12,51201,51227,12,51229,51255,12,51257,51283,12,51285,51311,12,51313,51339,12,51341,51367,12,51369,51395,12,51397,51423,12,51425,51451,12,51453,51479,12,51481,51507,12,51509,51535,12,51537,51563,12,51565,51591,12,51593,51619,12,51621,51647,12,51649,51675,12,51677,51703,12,51705,51731,12,51733,51759,12,51761,51787,12,51789,51815,12,51817,51843,12,51845,51871,12,51873,51899,12,51901,51927,12,51929,51955,12,51957,51983,12,51985,52011,12,52013,52039,12,52041,52067,12,52069,52095,12,52097,52123,12,52125,52151,12,52153,52179,12,52181,52207,12,52209,52235,12,52237,52263,12,52265,52291,12,52293,52319,12,52321,52347,12,52349,52375,12,52377,52403,12,52405,52431,12,52433,52459,12,52461,52487,12,52489,52515,12,52517,52543,12,52545,52571,12,52573,52599,12,52601,52627,12,52629,52655,12,52657,52683,12,52685,52711,12,52713,52739,12,52741,52767,12,52769,52795,12,52797,52823,12,52825,52851,12,52853,52879,12,52881,52907,12,52909,52935,12,52937,52963,12,52965,52991,12,52993,53019,12,53021,53047,12,53049,53075,12,53077,53103,12,53105,53131,12,53133,53159,12,53161,53187,12,53189,53215,12,53217,53243,12,53245,53271,12,53273,53299,12,53301,53327,12,53329,53355,12,53357,53383,12,53385,53411,12,53413,53439,12,53441,53467,12,53469,53495,12,53497,53523,12,53525,53551,12,53553,53579,12,53581,53607,12,53609,53635,12,53637,53663,12,53665,53691,12,53693,53719,12,53721,53747,12,53749,53775,12,53777,53803,12,53805,53831,12,53833,53859,12,53861,53887,12,53889,53915,12,53917,53943,12,53945,53971,12,53973,53999,12,54001,54027,12,54029,54055,12,54057,54083,12,54085,54111,12,54113,54139,12,54141,54167,12,54169,54195,12,54197,54223,12,54225,54251,12,54253,54279,12,54281,54307,12,54309,54335,12,54337,54363,12,54365,54391,12,54393,54419,12,54421,54447,12,54449,54475,12,54477,54503,12,54505,54531,12,54533,54559,12,54561,54587,12,54589,54615,12,54617,54643,12,54645,54671,12,54673,54699,12,54701,54727,12,54729,54755,12,54757,54783,12,54785,54811,12,54813,54839,12,54841,54867,12,54869,54895,12,54897,54923,12,54925,54951,12,54953,54979,12,54981,55007,12,55009,55035,12,55037,55063,12,55065,55091,12,55093,55119,12,55121,55147,12,55149,55175,12,55177,55203,12,55243,55291,10,65024,65039,5,65279,65279,4,65520,65528,4,66045,66045,5,66422,66426,5,68101,68102,5,68152,68154,5,68325,68326,5,69291,69292,5,69632,69632,7,69634,69634,7,69759,69761,5]');\n}\n//#endregion\n/**\n * Computes the offset after performing a left delete on the given string,\n * while considering unicode grapheme/emoji rules.\n*/\nexport function getLeftDeleteOffset(offset, str) {\n  if (offset === 0) {\n    return 0;\n  }\n  // Try to delete emoji part.\n  const emojiOffset = getOffsetBeforeLastEmojiComponent(offset, str);\n  if (emojiOffset !== undefined) {\n    return emojiOffset;\n  }\n  // Otherwise, just skip a single code point.\n  const codePoint = getPrevCodePoint(str, offset);\n  offset -= getUTF16Length(codePoint);\n  return offset;\n}\nfunction getOffsetBeforeLastEmojiComponent(offset, str) {\n  // See https://www.unicode.org/reports/tr51/tr51-14.html#EBNF_and_Regex for the\n  // structure of emojis.\n  let codePoint = getPrevCodePoint(str, offset);\n  offset -= getUTF16Length(codePoint);\n  // Skip modifiers\n  while (isEmojiModifier(codePoint) || codePoint === 65039 /* emojiVariantSelector */ || codePoint === 8419 /* enclosingKeyCap */) {\n    if (offset === 0) {\n      // Cannot skip modifier, no preceding emoji base.\n      return undefined;\n    }\n    codePoint = getPrevCodePoint(str, offset);\n    offset -= getUTF16Length(codePoint);\n  }\n  // Expect base emoji\n  if (!isEmojiImprecise(codePoint)) {\n    // Unexpected code point, not a valid emoji.\n    return undefined;\n  }\n  if (offset >= 0) {\n    // Skip optional ZWJ code points that combine multiple emojis.\n    // In theory, we should check if that ZWJ actually combines multiple emojis\n    // to prevent deleting ZWJs in situations we didn't account for.\n    const optionalZwjCodePoint = getPrevCodePoint(str, offset);\n    if (optionalZwjCodePoint === 8205 /* zwj */) {\n      offset -= getUTF16Length(optionalZwjCodePoint);\n    }\n  }\n  return offset;\n}\nfunction getUTF16Length(codePoint) {\n  return codePoint >= 65536 /* UNICODE_SUPPLEMENTARY_PLANE_BEGIN */ ? 2 : 1;\n}\nfunction isEmojiModifier(codePoint) {\n  return 0x1F3FB <= codePoint && codePoint <= 0x1F3FF;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { transformErrorForSerialization } from '../errors.js';\nimport { Emitter } from '../event.js';\nimport { Disposable } from '../lifecycle.js';\nimport { globals, isWeb } from '../platform.js';\nimport * as types from '../types.js';\nimport * as strings from '../strings.js';\nconst INITIALIZE = '$initialize';\nlet webWorkerWarningLogged = false;\nexport function logOnceWebWorkerWarning(err) {\n  if (!isWeb) {\n    // running tests\n    return;\n  }\n  if (!webWorkerWarningLogged) {\n    webWorkerWarningLogged = true;\n    console.warn('Could not create web worker(s). Falling back to loading web worker code in main thread, which might cause UI freezes. Please see https://github.com/microsoft/monaco-editor#faq');\n  }\n  console.warn(err.message);\n}\nclass RequestMessage {\n  constructor(vsWorker, req, method, args) {\n    this.vsWorker = vsWorker;\n    this.req = req;\n    this.method = method;\n    this.args = args;\n    this.type = 0 /* Request */;\n  }\n}\nclass ReplyMessage {\n  constructor(vsWorker, seq, res, err) {\n    this.vsWorker = vsWorker;\n    this.seq = seq;\n    this.res = res;\n    this.err = err;\n    this.type = 1 /* Reply */;\n  }\n}\nclass SubscribeEventMessage {\n  constructor(vsWorker, req, eventName, arg) {\n    this.vsWorker = vsWorker;\n    this.req = req;\n    this.eventName = eventName;\n    this.arg = arg;\n    this.type = 2 /* SubscribeEvent */;\n  }\n}\nclass EventMessage {\n  constructor(vsWorker, req, event) {\n    this.vsWorker = vsWorker;\n    this.req = req;\n    this.event = event;\n    this.type = 3 /* Event */;\n  }\n}\nclass UnsubscribeEventMessage {\n  constructor(vsWorker, req) {\n    this.vsWorker = vsWorker;\n    this.req = req;\n    this.type = 4 /* UnsubscribeEvent */;\n  }\n}\nclass SimpleWorkerProtocol {\n  constructor(handler) {\n    this._workerId = -1;\n    this._handler = handler;\n    this._lastSentReq = 0;\n    this._pendingReplies = Object.create(null);\n    this._pendingEmitters = new Map();\n    this._pendingEvents = new Map();\n  }\n  setWorkerId(workerId) {\n    this._workerId = workerId;\n  }\n  sendMessage(method, args) {\n    const req = String(++this._lastSentReq);\n    return new Promise((resolve, reject) => {\n      this._pendingReplies[req] = {\n        resolve: resolve,\n        reject: reject\n      };\n      this._send(new RequestMessage(this._workerId, req, method, args));\n    });\n  }\n  listen(eventName, arg) {\n    let req = null;\n    const emitter = new Emitter({\n      onFirstListenerAdd: () => {\n        req = String(++this._lastSentReq);\n        this._pendingEmitters.set(req, emitter);\n        this._send(new SubscribeEventMessage(this._workerId, req, eventName, arg));\n      },\n      onLastListenerRemove: () => {\n        this._pendingEmitters.delete(req);\n        this._send(new UnsubscribeEventMessage(this._workerId, req));\n        req = null;\n      }\n    });\n    return emitter.event;\n  }\n  handleMessage(message) {\n    if (!message || !message.vsWorker) {\n      return;\n    }\n    if (this._workerId !== -1 && message.vsWorker !== this._workerId) {\n      return;\n    }\n    this._handleMessage(message);\n  }\n  _handleMessage(msg) {\n    switch (msg.type) {\n      case 1 /* Reply */:\n        return this._handleReplyMessage(msg);\n      case 0 /* Request */:\n        return this._handleRequestMessage(msg);\n      case 2 /* SubscribeEvent */:\n        return this._handleSubscribeEventMessage(msg);\n      case 3 /* Event */:\n        return this._handleEventMessage(msg);\n      case 4 /* UnsubscribeEvent */:\n        return this._handleUnsubscribeEventMessage(msg);\n    }\n  }\n  _handleReplyMessage(replyMessage) {\n    if (!this._pendingReplies[replyMessage.seq]) {\n      console.warn('Got reply to unknown seq');\n      return;\n    }\n    let reply = this._pendingReplies[replyMessage.seq];\n    delete this._pendingReplies[replyMessage.seq];\n    if (replyMessage.err) {\n      let err = replyMessage.err;\n      if (replyMessage.err.$isError) {\n        err = new Error();\n        err.name = replyMessage.err.name;\n        err.message = replyMessage.err.message;\n        err.stack = replyMessage.err.stack;\n      }\n      reply.reject(err);\n      return;\n    }\n    reply.resolve(replyMessage.res);\n  }\n  _handleRequestMessage(requestMessage) {\n    let req = requestMessage.req;\n    let result = this._handler.handleMessage(requestMessage.method, requestMessage.args);\n    result.then(r => {\n      this._send(new ReplyMessage(this._workerId, req, r, undefined));\n    }, e => {\n      if (e.detail instanceof Error) {\n        // Loading errors have a detail property that points to the actual error\n        e.detail = transformErrorForSerialization(e.detail);\n      }\n      this._send(new ReplyMessage(this._workerId, req, undefined, transformErrorForSerialization(e)));\n    });\n  }\n  _handleSubscribeEventMessage(msg) {\n    const req = msg.req;\n    const disposable = this._handler.handleEvent(msg.eventName, msg.arg)(event => {\n      this._send(new EventMessage(this._workerId, req, event));\n    });\n    this._pendingEvents.set(req, disposable);\n  }\n  _handleEventMessage(msg) {\n    if (!this._pendingEmitters.has(msg.req)) {\n      console.warn('Got event for unknown req');\n      return;\n    }\n    this._pendingEmitters.get(msg.req).fire(msg.event);\n  }\n  _handleUnsubscribeEventMessage(msg) {\n    if (!this._pendingEvents.has(msg.req)) {\n      console.warn('Got unsubscribe for unknown req');\n      return;\n    }\n    this._pendingEvents.get(msg.req).dispose();\n    this._pendingEvents.delete(msg.req);\n  }\n  _send(msg) {\n    let transfer = [];\n    if (msg.type === 0 /* Request */) {\n      for (let i = 0; i < msg.args.length; i++) {\n        if (msg.args[i] instanceof ArrayBuffer) {\n          transfer.push(msg.args[i]);\n        }\n      }\n    } else if (msg.type === 1 /* Reply */) {\n      if (msg.res instanceof ArrayBuffer) {\n        transfer.push(msg.res);\n      }\n    }\n    this._handler.sendMessage(msg, transfer);\n  }\n}\n/**\n * Main thread side\n */\nexport class SimpleWorkerClient extends Disposable {\n  constructor(workerFactory, moduleId, host) {\n    super();\n    let lazyProxyReject = null;\n    this._worker = this._register(workerFactory.create('vs/base/common/worker/simpleWorker', msg => {\n      this._protocol.handleMessage(msg);\n    }, err => {\n      // in Firefox, web workers fail lazily :(\n      // we will reject the proxy\n      if (lazyProxyReject) {\n        lazyProxyReject(err);\n      }\n    }));\n    this._protocol = new SimpleWorkerProtocol({\n      sendMessage: (msg, transfer) => {\n        this._worker.postMessage(msg, transfer);\n      },\n      handleMessage: (method, args) => {\n        if (typeof host[method] !== 'function') {\n          return Promise.reject(new Error('Missing method ' + method + ' on main thread host.'));\n        }\n        try {\n          return Promise.resolve(host[method].apply(host, args));\n        } catch (e) {\n          return Promise.reject(e);\n        }\n      },\n      handleEvent: (eventName, arg) => {\n        if (propertyIsDynamicEvent(eventName)) {\n          const event = host[eventName].call(host, arg);\n          if (typeof event !== 'function') {\n            throw new Error(\"Missing dynamic event \".concat(eventName, \" on main thread host.\"));\n          }\n          return event;\n        }\n        if (propertyIsEvent(eventName)) {\n          const event = host[eventName];\n          if (typeof event !== 'function') {\n            throw new Error(\"Missing event \".concat(eventName, \" on main thread host.\"));\n          }\n          return event;\n        }\n        throw new Error(\"Malformed event name \".concat(eventName));\n      }\n    });\n    this._protocol.setWorkerId(this._worker.getId());\n    // Gather loader configuration\n    let loaderConfiguration = null;\n    if (typeof globals.require !== 'undefined' && typeof globals.require.getConfig === 'function') {\n      // Get the configuration from the Monaco AMD Loader\n      loaderConfiguration = globals.require.getConfig();\n    } else if (typeof globals.requirejs !== 'undefined') {\n      // Get the configuration from requirejs\n      loaderConfiguration = globals.requirejs.s.contexts._.config;\n    }\n    const hostMethods = types.getAllMethodNames(host);\n    // Send initialize message\n    this._onModuleLoaded = this._protocol.sendMessage(INITIALIZE, [this._worker.getId(), JSON.parse(JSON.stringify(loaderConfiguration)), moduleId, hostMethods]);\n    // Create proxy to loaded code\n    const proxyMethodRequest = (method, args) => {\n      return this._request(method, args);\n    };\n    const proxyListen = (eventName, arg) => {\n      return this._protocol.listen(eventName, arg);\n    };\n    this._lazyProxy = new Promise((resolve, reject) => {\n      lazyProxyReject = reject;\n      this._onModuleLoaded.then(availableMethods => {\n        resolve(createProxyObject(availableMethods, proxyMethodRequest, proxyListen));\n      }, e => {\n        reject(e);\n        this._onError('Worker failed to load ' + moduleId, e);\n      });\n    });\n  }\n  getProxyObject() {\n    return this._lazyProxy;\n  }\n  _request(method, args) {\n    return new Promise((resolve, reject) => {\n      this._onModuleLoaded.then(() => {\n        this._protocol.sendMessage(method, args).then(resolve, reject);\n      }, reject);\n    });\n  }\n  _onError(message, error) {\n    console.error(message);\n    console.info(error);\n  }\n}\nfunction propertyIsEvent(name) {\n  // Assume a property is an event if it has a form of \"onSomething\"\n  return name[0] === 'o' && name[1] === 'n' && strings.isUpperAsciiLetter(name.charCodeAt(2));\n}\nfunction propertyIsDynamicEvent(name) {\n  // Assume a property is a dynamic event (a method that returns an event) if it has a form of \"onDynamicSomething\"\n  return /^onDynamic/.test(name) && strings.isUpperAsciiLetter(name.charCodeAt(9));\n}\nfunction createProxyObject(methodNames, invoke, proxyListen) {\n  const createProxyMethod = method => {\n    return function () {\n      const args = Array.prototype.slice.call(arguments, 0);\n      return invoke(method, args);\n    };\n  };\n  const createProxyDynamicEvent = eventName => {\n    return function (arg) {\n      return proxyListen(eventName, arg);\n    };\n  };\n  let result = {};\n  for (const methodName of methodNames) {\n    if (propertyIsDynamicEvent(methodName)) {\n      result[methodName] = createProxyDynamicEvent(methodName);\n      continue;\n    }\n    if (propertyIsEvent(methodName)) {\n      result[methodName] = proxyListen(methodName, undefined);\n      continue;\n    }\n    result[methodName] = createProxyMethod(methodName);\n  }\n  return result;\n}\n/**\n * Worker side\n */\nexport class SimpleWorkerServer {\n  constructor(postMessage, requestHandlerFactory) {\n    this._requestHandlerFactory = requestHandlerFactory;\n    this._requestHandler = null;\n    this._protocol = new SimpleWorkerProtocol({\n      sendMessage: (msg, transfer) => {\n        postMessage(msg, transfer);\n      },\n      handleMessage: (method, args) => this._handleMessage(method, args),\n      handleEvent: (eventName, arg) => this._handleEvent(eventName, arg)\n    });\n  }\n  onmessage(msg) {\n    this._protocol.handleMessage(msg);\n  }\n  _handleMessage(method, args) {\n    if (method === INITIALIZE) {\n      return this.initialize(args[0], args[1], args[2], args[3]);\n    }\n    if (!this._requestHandler || typeof this._requestHandler[method] !== 'function') {\n      return Promise.reject(new Error('Missing requestHandler or method: ' + method));\n    }\n    try {\n      return Promise.resolve(this._requestHandler[method].apply(this._requestHandler, args));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  }\n  _handleEvent(eventName, arg) {\n    if (!this._requestHandler) {\n      throw new Error(\"Missing requestHandler\");\n    }\n    if (propertyIsDynamicEvent(eventName)) {\n      const event = this._requestHandler[eventName].call(this._requestHandler, arg);\n      if (typeof event !== 'function') {\n        throw new Error(\"Missing dynamic event \".concat(eventName, \" on request handler.\"));\n      }\n      return event;\n    }\n    if (propertyIsEvent(eventName)) {\n      const event = this._requestHandler[eventName];\n      if (typeof event !== 'function') {\n        throw new Error(\"Missing event \".concat(eventName, \" on request handler.\"));\n      }\n      return event;\n    }\n    throw new Error(\"Malformed event name \".concat(eventName));\n  }\n  initialize(workerId, loaderConfig, moduleId, hostMethods) {\n    this._protocol.setWorkerId(workerId);\n    const proxyMethodRequest = (method, args) => {\n      return this._protocol.sendMessage(method, args);\n    };\n    const proxyListen = (eventName, arg) => {\n      return this._protocol.listen(eventName, arg);\n    };\n    const hostProxy = createProxyObject(hostMethods, proxyMethodRequest, proxyListen);\n    if (this._requestHandlerFactory) {\n      // static request handler\n      this._requestHandler = this._requestHandlerFactory(hostProxy);\n      return Promise.resolve(types.getAllMethodNames(this._requestHandler));\n    }\n    if (loaderConfig) {\n      // Remove 'baseUrl', handling it is beyond scope for now\n      if (typeof loaderConfig.baseUrl !== 'undefined') {\n        delete loaderConfig['baseUrl'];\n      }\n      if (typeof loaderConfig.paths !== 'undefined') {\n        if (typeof loaderConfig.paths.vs !== 'undefined') {\n          delete loaderConfig.paths['vs'];\n        }\n      }\n      if (typeof loaderConfig.trustedTypesPolicy !== undefined) {\n        // don't use, it has been destroyed during serialize\n        delete loaderConfig['trustedTypesPolicy'];\n      }\n      // Since this is in a web worker, enable catching errors\n      loaderConfig.catchError = true;\n      globals.require.config(loaderConfig);\n    }\n    return new Promise((resolve, reject) => {\n      // Use the global require to be sure to get the global config\n      // ESM-comment-begin\n      // \t\t\tconst req = (globals.require || require);\n      // ESM-comment-end\n      // ESM-uncomment-begin\n      const req = globals.require;\n      // ESM-uncomment-end\n      req([moduleId], module => {\n        this._requestHandler = module.create(hostProxy);\n        if (!this._requestHandler) {\n          reject(new Error(\"No RequestHandler!\"));\n          return;\n        }\n        resolve(types.getAllMethodNames(this._requestHandler));\n      }, reject);\n    });\n  }\n}\n/**\n * Called on the worker side\n */\nexport function create(postMessage) {\n  return new SimpleWorkerServer(postMessage, null);\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n * Represents information about a specific difference between two sequences.\n */\nexport class DiffChange {\n  /**\n   * Constructs a new DiffChange with the given sequence information\n   * and content.\n   */\n  constructor(originalStart, originalLength, modifiedStart, modifiedLength) {\n    //Debug.Assert(originalLength > 0 || modifiedLength > 0, \"originalLength and modifiedLength cannot both be <= 0\");\n    this.originalStart = originalStart;\n    this.originalLength = originalLength;\n    this.modifiedStart = modifiedStart;\n    this.modifiedLength = modifiedLength;\n  }\n  /**\n   * The end point (exclusive) of the change in the original sequence.\n   */\n  getOriginalEnd() {\n    return this.originalStart + this.originalLength;\n  }\n  /**\n   * The end point (exclusive) of the change in the modified sequence.\n   */\n  getModifiedEnd() {\n    return this.modifiedStart + this.modifiedLength;\n  }\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as strings from './strings.js';\n/**\n * Return a hash value for an object.\n */\nexport function hash(obj) {\n  return doHash(obj, 0);\n}\nexport function doHash(obj, hashVal) {\n  switch (typeof obj) {\n    case 'object':\n      if (obj === null) {\n        return numberHash(349, hashVal);\n      } else if (Array.isArray(obj)) {\n        return arrayHash(obj, hashVal);\n      }\n      return objectHash(obj, hashVal);\n    case 'string':\n      return stringHash(obj, hashVal);\n    case 'boolean':\n      return booleanHash(obj, hashVal);\n    case 'number':\n      return numberHash(obj, hashVal);\n    case 'undefined':\n      return numberHash(937, hashVal);\n    default:\n      return numberHash(617, hashVal);\n  }\n}\nexport function numberHash(val, initialHashVal) {\n  return (initialHashVal << 5) - initialHashVal + val | 0; // hashVal * 31 + ch, keep as int32\n}\nfunction booleanHash(b, initialHashVal) {\n  return numberHash(b ? 433 : 863, initialHashVal);\n}\nexport function stringHash(s, hashVal) {\n  hashVal = numberHash(149417, hashVal);\n  for (let i = 0, length = s.length; i < length; i++) {\n    hashVal = numberHash(s.charCodeAt(i), hashVal);\n  }\n  return hashVal;\n}\nfunction arrayHash(arr, initialHashVal) {\n  initialHashVal = numberHash(104579, initialHashVal);\n  return arr.reduce((hashVal, item) => doHash(item, hashVal), initialHashVal);\n}\nfunction objectHash(obj, initialHashVal) {\n  initialHashVal = numberHash(181387, initialHashVal);\n  return Object.keys(obj).sort().reduce((hashVal, key) => {\n    hashVal = stringHash(key, hashVal);\n    return doHash(obj[key], hashVal);\n  }, initialHashVal);\n}\nfunction leftRotate(value, bits) {\n  let totalBits = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 32;\n  // delta + bits = totalBits\n  const delta = totalBits - bits;\n  // All ones, expect `delta` zeros aligned to the right\n  const mask = ~((1 << delta) - 1);\n  // Join (value left-shifted `bits` bits) with (masked value right-shifted `delta` bits)\n  return (value << bits | (mask & value) >>> delta) >>> 0;\n}\nfunction fill(dest) {\n  let index = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  let count = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : dest.byteLength;\n  let value = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n  for (let i = 0; i < count; i++) {\n    dest[index + i] = value;\n  }\n}\nfunction leftPad(value, length) {\n  let char = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '0';\n  while (value.length < length) {\n    value = char + value;\n  }\n  return value;\n}\nexport function toHexString(bufferOrValue) {\n  let bitsize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 32;\n  if (bufferOrValue instanceof ArrayBuffer) {\n    return Array.from(new Uint8Array(bufferOrValue)).map(b => b.toString(16).padStart(2, '0')).join('');\n  }\n  return leftPad((bufferOrValue >>> 0).toString(16), bitsize / 4);\n}\n/**\n * A SHA1 implementation that works with strings and does not allocate.\n */\nexport class StringSHA1 {\n  constructor() {\n    this._h0 = 0x67452301;\n    this._h1 = 0xEFCDAB89;\n    this._h2 = 0x98BADCFE;\n    this._h3 = 0x10325476;\n    this._h4 = 0xC3D2E1F0;\n    this._buff = new Uint8Array(64 /* BLOCK_SIZE */ + 3 /* to fit any utf-8 */);\n    this._buffDV = new DataView(this._buff.buffer);\n    this._buffLen = 0;\n    this._totalLen = 0;\n    this._leftoverHighSurrogate = 0;\n    this._finished = false;\n  }\n  update(str) {\n    const strLen = str.length;\n    if (strLen === 0) {\n      return;\n    }\n    const buff = this._buff;\n    let buffLen = this._buffLen;\n    let leftoverHighSurrogate = this._leftoverHighSurrogate;\n    let charCode;\n    let offset;\n    if (leftoverHighSurrogate !== 0) {\n      charCode = leftoverHighSurrogate;\n      offset = -1;\n      leftoverHighSurrogate = 0;\n    } else {\n      charCode = str.charCodeAt(0);\n      offset = 0;\n    }\n    while (true) {\n      let codePoint = charCode;\n      if (strings.isHighSurrogate(charCode)) {\n        if (offset + 1 < strLen) {\n          const nextCharCode = str.charCodeAt(offset + 1);\n          if (strings.isLowSurrogate(nextCharCode)) {\n            offset++;\n            codePoint = strings.computeCodePoint(charCode, nextCharCode);\n          } else {\n            // illegal => unicode replacement character\n            codePoint = 65533 /* UNICODE_REPLACEMENT */;\n          }\n        } else {\n          // last character is a surrogate pair\n          leftoverHighSurrogate = charCode;\n          break;\n        }\n      } else if (strings.isLowSurrogate(charCode)) {\n        // illegal => unicode replacement character\n        codePoint = 65533 /* UNICODE_REPLACEMENT */;\n      }\n      buffLen = this._push(buff, buffLen, codePoint);\n      offset++;\n      if (offset < strLen) {\n        charCode = str.charCodeAt(offset);\n      } else {\n        break;\n      }\n    }\n    this._buffLen = buffLen;\n    this._leftoverHighSurrogate = leftoverHighSurrogate;\n  }\n  _push(buff, buffLen, codePoint) {\n    if (codePoint < 0x0080) {\n      buff[buffLen++] = codePoint;\n    } else if (codePoint < 0x0800) {\n      buff[buffLen++] = 0b11000000 | (codePoint & 0b00000000000000000000011111000000) >>> 6;\n      buff[buffLen++] = 0b10000000 | (codePoint & 0b00000000000000000000000000111111) >>> 0;\n    } else if (codePoint < 0x10000) {\n      buff[buffLen++] = 0b11100000 | (codePoint & 0b00000000000000001111000000000000) >>> 12;\n      buff[buffLen++] = 0b10000000 | (codePoint & 0b00000000000000000000111111000000) >>> 6;\n      buff[buffLen++] = 0b10000000 | (codePoint & 0b00000000000000000000000000111111) >>> 0;\n    } else {\n      buff[buffLen++] = 0b11110000 | (codePoint & 0b00000000000111000000000000000000) >>> 18;\n      buff[buffLen++] = 0b10000000 | (codePoint & 0b00000000000000111111000000000000) >>> 12;\n      buff[buffLen++] = 0b10000000 | (codePoint & 0b00000000000000000000111111000000) >>> 6;\n      buff[buffLen++] = 0b10000000 | (codePoint & 0b00000000000000000000000000111111) >>> 0;\n    }\n    if (buffLen >= 64 /* BLOCK_SIZE */) {\n      this._step();\n      buffLen -= 64 /* BLOCK_SIZE */;\n      this._totalLen += 64 /* BLOCK_SIZE */;\n      // take last 3 in case of UTF8 overflow\n      buff[0] = buff[64 /* BLOCK_SIZE */ + 0];\n      buff[1] = buff[64 /* BLOCK_SIZE */ + 1];\n      buff[2] = buff[64 /* BLOCK_SIZE */ + 2];\n    }\n    return buffLen;\n  }\n  digest() {\n    if (!this._finished) {\n      this._finished = true;\n      if (this._leftoverHighSurrogate) {\n        // illegal => unicode replacement character\n        this._leftoverHighSurrogate = 0;\n        this._buffLen = this._push(this._buff, this._buffLen, 65533 /* UNICODE_REPLACEMENT */);\n      }\n      this._totalLen += this._buffLen;\n      this._wrapUp();\n    }\n    return toHexString(this._h0) + toHexString(this._h1) + toHexString(this._h2) + toHexString(this._h3) + toHexString(this._h4);\n  }\n  _wrapUp() {\n    this._buff[this._buffLen++] = 0x80;\n    fill(this._buff, this._buffLen);\n    if (this._buffLen > 56) {\n      this._step();\n      fill(this._buff);\n    }\n    // this will fit because the mantissa can cover up to 52 bits\n    const ml = 8 * this._totalLen;\n    this._buffDV.setUint32(56, Math.floor(ml / 4294967296), false);\n    this._buffDV.setUint32(60, ml % 4294967296, false);\n    this._step();\n  }\n  _step() {\n    const bigBlock32 = StringSHA1._bigBlock32;\n    const data = this._buffDV;\n    for (let j = 0; j < 64 /* 16*4 */; j += 4) {\n      bigBlock32.setUint32(j, data.getUint32(j, false), false);\n    }\n    for (let j = 64; j < 320 /* 80*4 */; j += 4) {\n      bigBlock32.setUint32(j, leftRotate(bigBlock32.getUint32(j - 12, false) ^ bigBlock32.getUint32(j - 32, false) ^ bigBlock32.getUint32(j - 56, false) ^ bigBlock32.getUint32(j - 64, false), 1), false);\n    }\n    let a = this._h0;\n    let b = this._h1;\n    let c = this._h2;\n    let d = this._h3;\n    let e = this._h4;\n    let f, k;\n    let temp;\n    for (let j = 0; j < 80; j++) {\n      if (j < 20) {\n        f = b & c | ~b & d;\n        k = 0x5A827999;\n      } else if (j < 40) {\n        f = b ^ c ^ d;\n        k = 0x6ED9EBA1;\n      } else if (j < 60) {\n        f = b & c | b & d | c & d;\n        k = 0x8F1BBCDC;\n      } else {\n        f = b ^ c ^ d;\n        k = 0xCA62C1D6;\n      }\n      temp = leftRotate(a, 5) + f + e + k + bigBlock32.getUint32(j * 4, false) & 0xffffffff;\n      e = d;\n      d = c;\n      c = leftRotate(b, 30);\n      b = a;\n      a = temp;\n    }\n    this._h0 = this._h0 + a & 0xffffffff;\n    this._h1 = this._h1 + b & 0xffffffff;\n    this._h2 = this._h2 + c & 0xffffffff;\n    this._h3 = this._h3 + d & 0xffffffff;\n    this._h4 = this._h4 + e & 0xffffffff;\n  }\n}\nStringSHA1._bigBlock32 = new DataView(new ArrayBuffer(320)); // 80 * 4 = 320","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { DiffChange } from './diffChange.js';\nimport { stringHash } from '../hash.js';\nexport class StringDiffSequence {\n  constructor(source) {\n    this.source = source;\n  }\n  getElements() {\n    const source = this.source;\n    const characters = new Int32Array(source.length);\n    for (let i = 0, len = source.length; i < len; i++) {\n      characters[i] = source.charCodeAt(i);\n    }\n    return characters;\n  }\n}\nexport function stringDiff(original, modified, pretty) {\n  return new LcsDiff(new StringDiffSequence(original), new StringDiffSequence(modified)).ComputeDiff(pretty).changes;\n}\n//\n// The code below has been ported from a C# implementation in VS\n//\nexport class Debug {\n  static Assert(condition, message) {\n    if (!condition) {\n      throw new Error(message);\n    }\n  }\n}\nexport class MyArray {\n  /**\n   * Copies a range of elements from an Array starting at the specified source index and pastes\n   * them to another Array starting at the specified destination index. The length and the indexes\n   * are specified as 64-bit integers.\n   * sourceArray:\n   *\t\tThe Array that contains the data to copy.\n   * sourceIndex:\n   *\t\tA 64-bit integer that represents the index in the sourceArray at which copying begins.\n   * destinationArray:\n   *\t\tThe Array that receives the data.\n   * destinationIndex:\n   *\t\tA 64-bit integer that represents the index in the destinationArray at which storing begins.\n   * length:\n   *\t\tA 64-bit integer that represents the number of elements to copy.\n   */\n  static Copy(sourceArray, sourceIndex, destinationArray, destinationIndex, length) {\n    for (let i = 0; i < length; i++) {\n      destinationArray[destinationIndex + i] = sourceArray[sourceIndex + i];\n    }\n  }\n  static Copy2(sourceArray, sourceIndex, destinationArray, destinationIndex, length) {\n    for (let i = 0; i < length; i++) {\n      destinationArray[destinationIndex + i] = sourceArray[sourceIndex + i];\n    }\n  }\n}\n/**\n * A utility class which helps to create the set of DiffChanges from\n * a difference operation. This class accepts original DiffElements and\n * modified DiffElements that are involved in a particular change. The\n * MarkNextChange() method can be called to mark the separation between\n * distinct changes. At the end, the Changes property can be called to retrieve\n * the constructed changes.\n */\nclass DiffChangeHelper {\n  /**\n   * Constructs a new DiffChangeHelper for the given DiffSequences.\n   */\n  constructor() {\n    this.m_changes = [];\n    this.m_originalStart = 1073741824 /* MAX_SAFE_SMALL_INTEGER */;\n    this.m_modifiedStart = 1073741824 /* MAX_SAFE_SMALL_INTEGER */;\n    this.m_originalCount = 0;\n    this.m_modifiedCount = 0;\n  }\n  /**\n   * Marks the beginning of the next change in the set of differences.\n   */\n  MarkNextChange() {\n    // Only add to the list if there is something to add\n    if (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n      // Add the new change to our list\n      this.m_changes.push(new DiffChange(this.m_originalStart, this.m_originalCount, this.m_modifiedStart, this.m_modifiedCount));\n    }\n    // Reset for the next change\n    this.m_originalCount = 0;\n    this.m_modifiedCount = 0;\n    this.m_originalStart = 1073741824 /* MAX_SAFE_SMALL_INTEGER */;\n    this.m_modifiedStart = 1073741824 /* MAX_SAFE_SMALL_INTEGER */;\n  }\n  /**\n   * Adds the original element at the given position to the elements\n   * affected by the current change. The modified index gives context\n   * to the change position with respect to the original sequence.\n   * @param originalIndex The index of the original element to add.\n   * @param modifiedIndex The index of the modified element that provides corresponding position in the modified sequence.\n   */\n  AddOriginalElement(originalIndex, modifiedIndex) {\n    // The 'true' start index is the smallest of the ones we've seen\n    this.m_originalStart = Math.min(this.m_originalStart, originalIndex);\n    this.m_modifiedStart = Math.min(this.m_modifiedStart, modifiedIndex);\n    this.m_originalCount++;\n  }\n  /**\n   * Adds the modified element at the given position to the elements\n   * affected by the current change. The original index gives context\n   * to the change position with respect to the modified sequence.\n   * @param originalIndex The index of the original element that provides corresponding position in the original sequence.\n   * @param modifiedIndex The index of the modified element to add.\n   */\n  AddModifiedElement(originalIndex, modifiedIndex) {\n    // The 'true' start index is the smallest of the ones we've seen\n    this.m_originalStart = Math.min(this.m_originalStart, originalIndex);\n    this.m_modifiedStart = Math.min(this.m_modifiedStart, modifiedIndex);\n    this.m_modifiedCount++;\n  }\n  /**\n   * Retrieves all of the changes marked by the class.\n   */\n  getChanges() {\n    if (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n      // Finish up on whatever is left\n      this.MarkNextChange();\n    }\n    return this.m_changes;\n  }\n  /**\n   * Retrieves all of the changes marked by the class in the reverse order\n   */\n  getReverseChanges() {\n    if (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n      // Finish up on whatever is left\n      this.MarkNextChange();\n    }\n    this.m_changes.reverse();\n    return this.m_changes;\n  }\n}\n/**\n * An implementation of the difference algorithm described in\n * \"An O(ND) Difference Algorithm and its variations\" by Eugene W. Myers\n */\nexport class LcsDiff {\n  /**\n   * Constructs the DiffFinder\n   */\n  constructor(originalSequence, modifiedSequence) {\n    let continueProcessingPredicate = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    this.ContinueProcessingPredicate = continueProcessingPredicate;\n    this._originalSequence = originalSequence;\n    this._modifiedSequence = modifiedSequence;\n    const [originalStringElements, originalElementsOrHash, originalHasStrings] = LcsDiff._getElements(originalSequence);\n    const [modifiedStringElements, modifiedElementsOrHash, modifiedHasStrings] = LcsDiff._getElements(modifiedSequence);\n    this._hasStrings = originalHasStrings && modifiedHasStrings;\n    this._originalStringElements = originalStringElements;\n    this._originalElementsOrHash = originalElementsOrHash;\n    this._modifiedStringElements = modifiedStringElements;\n    this._modifiedElementsOrHash = modifiedElementsOrHash;\n    this.m_forwardHistory = [];\n    this.m_reverseHistory = [];\n  }\n  static _isStringArray(arr) {\n    return arr.length > 0 && typeof arr[0] === 'string';\n  }\n  static _getElements(sequence) {\n    const elements = sequence.getElements();\n    if (LcsDiff._isStringArray(elements)) {\n      const hashes = new Int32Array(elements.length);\n      for (let i = 0, len = elements.length; i < len; i++) {\n        hashes[i] = stringHash(elements[i], 0);\n      }\n      return [elements, hashes, true];\n    }\n    if (elements instanceof Int32Array) {\n      return [[], elements, false];\n    }\n    return [[], new Int32Array(elements), false];\n  }\n  ElementsAreEqual(originalIndex, newIndex) {\n    if (this._originalElementsOrHash[originalIndex] !== this._modifiedElementsOrHash[newIndex]) {\n      return false;\n    }\n    return this._hasStrings ? this._originalStringElements[originalIndex] === this._modifiedStringElements[newIndex] : true;\n  }\n  ElementsAreStrictEqual(originalIndex, newIndex) {\n    if (!this.ElementsAreEqual(originalIndex, newIndex)) {\n      return false;\n    }\n    const originalElement = LcsDiff._getStrictElement(this._originalSequence, originalIndex);\n    const modifiedElement = LcsDiff._getStrictElement(this._modifiedSequence, newIndex);\n    return originalElement === modifiedElement;\n  }\n  static _getStrictElement(sequence, index) {\n    if (typeof sequence.getStrictElement === 'function') {\n      return sequence.getStrictElement(index);\n    }\n    return null;\n  }\n  OriginalElementsAreEqual(index1, index2) {\n    if (this._originalElementsOrHash[index1] !== this._originalElementsOrHash[index2]) {\n      return false;\n    }\n    return this._hasStrings ? this._originalStringElements[index1] === this._originalStringElements[index2] : true;\n  }\n  ModifiedElementsAreEqual(index1, index2) {\n    if (this._modifiedElementsOrHash[index1] !== this._modifiedElementsOrHash[index2]) {\n      return false;\n    }\n    return this._hasStrings ? this._modifiedStringElements[index1] === this._modifiedStringElements[index2] : true;\n  }\n  ComputeDiff(pretty) {\n    return this._ComputeDiff(0, this._originalElementsOrHash.length - 1, 0, this._modifiedElementsOrHash.length - 1, pretty);\n  }\n  /**\n   * Computes the differences between the original and modified input\n   * sequences on the bounded range.\n   * @returns An array of the differences between the two input sequences.\n   */\n  _ComputeDiff(originalStart, originalEnd, modifiedStart, modifiedEnd, pretty) {\n    const quitEarlyArr = [false];\n    let changes = this.ComputeDiffRecursive(originalStart, originalEnd, modifiedStart, modifiedEnd, quitEarlyArr);\n    if (pretty) {\n      // We have to clean up the computed diff to be more intuitive\n      // but it turns out this cannot be done correctly until the entire set\n      // of diffs have been computed\n      changes = this.PrettifyChanges(changes);\n    }\n    return {\n      quitEarly: quitEarlyArr[0],\n      changes: changes\n    };\n  }\n  /**\n   * Private helper method which computes the differences on the bounded range\n   * recursively.\n   * @returns An array of the differences between the two input sequences.\n   */\n  ComputeDiffRecursive(originalStart, originalEnd, modifiedStart, modifiedEnd, quitEarlyArr) {\n    quitEarlyArr[0] = false;\n    // Find the start of the differences\n    while (originalStart <= originalEnd && modifiedStart <= modifiedEnd && this.ElementsAreEqual(originalStart, modifiedStart)) {\n      originalStart++;\n      modifiedStart++;\n    }\n    // Find the end of the differences\n    while (originalEnd >= originalStart && modifiedEnd >= modifiedStart && this.ElementsAreEqual(originalEnd, modifiedEnd)) {\n      originalEnd--;\n      modifiedEnd--;\n    }\n    // In the special case where we either have all insertions or all deletions or the sequences are identical\n    if (originalStart > originalEnd || modifiedStart > modifiedEnd) {\n      let changes;\n      if (modifiedStart <= modifiedEnd) {\n        Debug.Assert(originalStart === originalEnd + 1, 'originalStart should only be one more than originalEnd');\n        // All insertions\n        changes = [new DiffChange(originalStart, 0, modifiedStart, modifiedEnd - modifiedStart + 1)];\n      } else if (originalStart <= originalEnd) {\n        Debug.Assert(modifiedStart === modifiedEnd + 1, 'modifiedStart should only be one more than modifiedEnd');\n        // All deletions\n        changes = [new DiffChange(originalStart, originalEnd - originalStart + 1, modifiedStart, 0)];\n      } else {\n        Debug.Assert(originalStart === originalEnd + 1, 'originalStart should only be one more than originalEnd');\n        Debug.Assert(modifiedStart === modifiedEnd + 1, 'modifiedStart should only be one more than modifiedEnd');\n        // Identical sequences - No differences\n        changes = [];\n      }\n      return changes;\n    }\n    // This problem can be solved using the Divide-And-Conquer technique.\n    const midOriginalArr = [0];\n    const midModifiedArr = [0];\n    const result = this.ComputeRecursionPoint(originalStart, originalEnd, modifiedStart, modifiedEnd, midOriginalArr, midModifiedArr, quitEarlyArr);\n    const midOriginal = midOriginalArr[0];\n    const midModified = midModifiedArr[0];\n    if (result !== null) {\n      // Result is not-null when there was enough memory to compute the changes while\n      // searching for the recursion point\n      return result;\n    } else if (!quitEarlyArr[0]) {\n      // We can break the problem down recursively by finding the changes in the\n      // First Half:   (originalStart, modifiedStart) to (midOriginal, midModified)\n      // Second Half:  (midOriginal + 1, minModified + 1) to (originalEnd, modifiedEnd)\n      // NOTE: ComputeDiff() is inclusive, therefore the second range starts on the next point\n      const leftChanges = this.ComputeDiffRecursive(originalStart, midOriginal, modifiedStart, midModified, quitEarlyArr);\n      let rightChanges = [];\n      if (!quitEarlyArr[0]) {\n        rightChanges = this.ComputeDiffRecursive(midOriginal + 1, originalEnd, midModified + 1, modifiedEnd, quitEarlyArr);\n      } else {\n        // We didn't have time to finish the first half, so we don't have time to compute this half.\n        // Consider the entire rest of the sequence different.\n        rightChanges = [new DiffChange(midOriginal + 1, originalEnd - (midOriginal + 1) + 1, midModified + 1, modifiedEnd - (midModified + 1) + 1)];\n      }\n      return this.ConcatenateChanges(leftChanges, rightChanges);\n    }\n    // If we hit here, we quit early, and so can't return anything meaningful\n    return [new DiffChange(originalStart, originalEnd - originalStart + 1, modifiedStart, modifiedEnd - modifiedStart + 1)];\n  }\n  WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr) {\n    let forwardChanges = null;\n    let reverseChanges = null;\n    // First, walk backward through the forward diagonals history\n    let changeHelper = new DiffChangeHelper();\n    let diagonalMin = diagonalForwardStart;\n    let diagonalMax = diagonalForwardEnd;\n    let diagonalRelative = midOriginalArr[0] - midModifiedArr[0] - diagonalForwardOffset;\n    let lastOriginalIndex = -1073741824 /* MIN_SAFE_SMALL_INTEGER */;\n    let historyIndex = this.m_forwardHistory.length - 1;\n    do {\n      // Get the diagonal index from the relative diagonal number\n      const diagonal = diagonalRelative + diagonalForwardBase;\n      // Figure out where we came from\n      if (diagonal === diagonalMin || diagonal < diagonalMax && forwardPoints[diagonal - 1] < forwardPoints[diagonal + 1]) {\n        // Vertical line (the element is an insert)\n        originalIndex = forwardPoints[diagonal + 1];\n        modifiedIndex = originalIndex - diagonalRelative - diagonalForwardOffset;\n        if (originalIndex < lastOriginalIndex) {\n          changeHelper.MarkNextChange();\n        }\n        lastOriginalIndex = originalIndex;\n        changeHelper.AddModifiedElement(originalIndex + 1, modifiedIndex);\n        diagonalRelative = diagonal + 1 - diagonalForwardBase; //Setup for the next iteration\n      } else {\n        // Horizontal line (the element is a deletion)\n        originalIndex = forwardPoints[diagonal - 1] + 1;\n        modifiedIndex = originalIndex - diagonalRelative - diagonalForwardOffset;\n        if (originalIndex < lastOriginalIndex) {\n          changeHelper.MarkNextChange();\n        }\n        lastOriginalIndex = originalIndex - 1;\n        changeHelper.AddOriginalElement(originalIndex, modifiedIndex + 1);\n        diagonalRelative = diagonal - 1 - diagonalForwardBase; //Setup for the next iteration\n      }\n      if (historyIndex >= 0) {\n        forwardPoints = this.m_forwardHistory[historyIndex];\n        diagonalForwardBase = forwardPoints[0]; //We stored this in the first spot\n        diagonalMin = 1;\n        diagonalMax = forwardPoints.length - 1;\n      }\n    } while (--historyIndex >= -1);\n    // Ironically, we get the forward changes as the reverse of the\n    // order we added them since we technically added them backwards\n    forwardChanges = changeHelper.getReverseChanges();\n    if (quitEarlyArr[0]) {\n      // TODO: Calculate a partial from the reverse diagonals.\n      //       For now, just assume everything after the midOriginal/midModified point is a diff\n      let originalStartPoint = midOriginalArr[0] + 1;\n      let modifiedStartPoint = midModifiedArr[0] + 1;\n      if (forwardChanges !== null && forwardChanges.length > 0) {\n        const lastForwardChange = forwardChanges[forwardChanges.length - 1];\n        originalStartPoint = Math.max(originalStartPoint, lastForwardChange.getOriginalEnd());\n        modifiedStartPoint = Math.max(modifiedStartPoint, lastForwardChange.getModifiedEnd());\n      }\n      reverseChanges = [new DiffChange(originalStartPoint, originalEnd - originalStartPoint + 1, modifiedStartPoint, modifiedEnd - modifiedStartPoint + 1)];\n    } else {\n      // Now walk backward through the reverse diagonals history\n      changeHelper = new DiffChangeHelper();\n      diagonalMin = diagonalReverseStart;\n      diagonalMax = diagonalReverseEnd;\n      diagonalRelative = midOriginalArr[0] - midModifiedArr[0] - diagonalReverseOffset;\n      lastOriginalIndex = 1073741824 /* MAX_SAFE_SMALL_INTEGER */;\n      historyIndex = deltaIsEven ? this.m_reverseHistory.length - 1 : this.m_reverseHistory.length - 2;\n      do {\n        // Get the diagonal index from the relative diagonal number\n        const diagonal = diagonalRelative + diagonalReverseBase;\n        // Figure out where we came from\n        if (diagonal === diagonalMin || diagonal < diagonalMax && reversePoints[diagonal - 1] >= reversePoints[diagonal + 1]) {\n          // Horizontal line (the element is a deletion))\n          originalIndex = reversePoints[diagonal + 1] - 1;\n          modifiedIndex = originalIndex - diagonalRelative - diagonalReverseOffset;\n          if (originalIndex > lastOriginalIndex) {\n            changeHelper.MarkNextChange();\n          }\n          lastOriginalIndex = originalIndex + 1;\n          changeHelper.AddOriginalElement(originalIndex + 1, modifiedIndex + 1);\n          diagonalRelative = diagonal + 1 - diagonalReverseBase; //Setup for the next iteration\n        } else {\n          // Vertical line (the element is an insertion)\n          originalIndex = reversePoints[diagonal - 1];\n          modifiedIndex = originalIndex - diagonalRelative - diagonalReverseOffset;\n          if (originalIndex > lastOriginalIndex) {\n            changeHelper.MarkNextChange();\n          }\n          lastOriginalIndex = originalIndex;\n          changeHelper.AddModifiedElement(originalIndex + 1, modifiedIndex + 1);\n          diagonalRelative = diagonal - 1 - diagonalReverseBase; //Setup for the next iteration\n        }\n        if (historyIndex >= 0) {\n          reversePoints = this.m_reverseHistory[historyIndex];\n          diagonalReverseBase = reversePoints[0]; //We stored this in the first spot\n          diagonalMin = 1;\n          diagonalMax = reversePoints.length - 1;\n        }\n      } while (--historyIndex >= -1);\n      // There are cases where the reverse history will find diffs that\n      // are correct, but not intuitive, so we need shift them.\n      reverseChanges = changeHelper.getChanges();\n    }\n    return this.ConcatenateChanges(forwardChanges, reverseChanges);\n  }\n  /**\n   * Given the range to compute the diff on, this method finds the point:\n   * (midOriginal, midModified)\n   * that exists in the middle of the LCS of the two sequences and\n   * is the point at which the LCS problem may be broken down recursively.\n   * This method will try to keep the LCS trace in memory. If the LCS recursion\n   * point is calculated and the full trace is available in memory, then this method\n   * will return the change list.\n   * @param originalStart The start bound of the original sequence range\n   * @param originalEnd The end bound of the original sequence range\n   * @param modifiedStart The start bound of the modified sequence range\n   * @param modifiedEnd The end bound of the modified sequence range\n   * @param midOriginal The middle point of the original sequence range\n   * @param midModified The middle point of the modified sequence range\n   * @returns The diff changes, if available, otherwise null\n   */\n  ComputeRecursionPoint(originalStart, originalEnd, modifiedStart, modifiedEnd, midOriginalArr, midModifiedArr, quitEarlyArr) {\n    let originalIndex = 0,\n      modifiedIndex = 0;\n    let diagonalForwardStart = 0,\n      diagonalForwardEnd = 0;\n    let diagonalReverseStart = 0,\n      diagonalReverseEnd = 0;\n    // To traverse the edit graph and produce the proper LCS, our actual\n    // start position is just outside the given boundary\n    originalStart--;\n    modifiedStart--;\n    // We set these up to make the compiler happy, but they will\n    // be replaced before we return with the actual recursion point\n    midOriginalArr[0] = 0;\n    midModifiedArr[0] = 0;\n    // Clear out the history\n    this.m_forwardHistory = [];\n    this.m_reverseHistory = [];\n    // Each cell in the two arrays corresponds to a diagonal in the edit graph.\n    // The integer value in the cell represents the originalIndex of the furthest\n    // reaching point found so far that ends in that diagonal.\n    // The modifiedIndex can be computed mathematically from the originalIndex and the diagonal number.\n    const maxDifferences = originalEnd - originalStart + (modifiedEnd - modifiedStart);\n    const numDiagonals = maxDifferences + 1;\n    const forwardPoints = new Int32Array(numDiagonals);\n    const reversePoints = new Int32Array(numDiagonals);\n    // diagonalForwardBase: Index into forwardPoints of the diagonal which passes through (originalStart, modifiedStart)\n    // diagonalReverseBase: Index into reversePoints of the diagonal which passes through (originalEnd, modifiedEnd)\n    const diagonalForwardBase = modifiedEnd - modifiedStart;\n    const diagonalReverseBase = originalEnd - originalStart;\n    // diagonalForwardOffset: Geometric offset which allows modifiedIndex to be computed from originalIndex and the\n    //    diagonal number (relative to diagonalForwardBase)\n    // diagonalReverseOffset: Geometric offset which allows modifiedIndex to be computed from originalIndex and the\n    //    diagonal number (relative to diagonalReverseBase)\n    const diagonalForwardOffset = originalStart - modifiedStart;\n    const diagonalReverseOffset = originalEnd - modifiedEnd;\n    // delta: The difference between the end diagonal and the start diagonal. This is used to relate diagonal numbers\n    //   relative to the start diagonal with diagonal numbers relative to the end diagonal.\n    // The Even/Oddn-ness of this delta is important for determining when we should check for overlap\n    const delta = diagonalReverseBase - diagonalForwardBase;\n    const deltaIsEven = delta % 2 === 0;\n    // Here we set up the start and end points as the furthest points found so far\n    // in both the forward and reverse directions, respectively\n    forwardPoints[diagonalForwardBase] = originalStart;\n    reversePoints[diagonalReverseBase] = originalEnd;\n    // Remember if we quit early, and thus need to do a best-effort result instead of a real result.\n    quitEarlyArr[0] = false;\n    // A couple of points:\n    // --With this method, we iterate on the number of differences between the two sequences.\n    //   The more differences there actually are, the longer this will take.\n    // --Also, as the number of differences increases, we have to search on diagonals further\n    //   away from the reference diagonal (which is diagonalForwardBase for forward, diagonalReverseBase for reverse).\n    // --We extend on even diagonals (relative to the reference diagonal) only when numDifferences\n    //   is even and odd diagonals only when numDifferences is odd.\n    for (let numDifferences = 1; numDifferences <= maxDifferences / 2 + 1; numDifferences++) {\n      let furthestOriginalIndex = 0;\n      let furthestModifiedIndex = 0;\n      // Run the algorithm in the forward direction\n      diagonalForwardStart = this.ClipDiagonalBound(diagonalForwardBase - numDifferences, numDifferences, diagonalForwardBase, numDiagonals);\n      diagonalForwardEnd = this.ClipDiagonalBound(diagonalForwardBase + numDifferences, numDifferences, diagonalForwardBase, numDiagonals);\n      for (let diagonal = diagonalForwardStart; diagonal <= diagonalForwardEnd; diagonal += 2) {\n        // STEP 1: We extend the furthest reaching point in the present diagonal\n        // by looking at the diagonals above and below and picking the one whose point\n        // is further away from the start point (originalStart, modifiedStart)\n        if (diagonal === diagonalForwardStart || diagonal < diagonalForwardEnd && forwardPoints[diagonal - 1] < forwardPoints[diagonal + 1]) {\n          originalIndex = forwardPoints[diagonal + 1];\n        } else {\n          originalIndex = forwardPoints[diagonal - 1] + 1;\n        }\n        modifiedIndex = originalIndex - (diagonal - diagonalForwardBase) - diagonalForwardOffset;\n        // Save the current originalIndex so we can test for false overlap in step 3\n        const tempOriginalIndex = originalIndex;\n        // STEP 2: We can continue to extend the furthest reaching point in the present diagonal\n        // so long as the elements are equal.\n        while (originalIndex < originalEnd && modifiedIndex < modifiedEnd && this.ElementsAreEqual(originalIndex + 1, modifiedIndex + 1)) {\n          originalIndex++;\n          modifiedIndex++;\n        }\n        forwardPoints[diagonal] = originalIndex;\n        if (originalIndex + modifiedIndex > furthestOriginalIndex + furthestModifiedIndex) {\n          furthestOriginalIndex = originalIndex;\n          furthestModifiedIndex = modifiedIndex;\n        }\n        // STEP 3: If delta is odd (overlap first happens on forward when delta is odd)\n        // and diagonal is in the range of reverse diagonals computed for numDifferences-1\n        // (the previous iteration; we haven't computed reverse diagonals for numDifferences yet)\n        // then check for overlap.\n        if (!deltaIsEven && Math.abs(diagonal - diagonalReverseBase) <= numDifferences - 1) {\n          if (originalIndex >= reversePoints[diagonal]) {\n            midOriginalArr[0] = originalIndex;\n            midModifiedArr[0] = modifiedIndex;\n            if (tempOriginalIndex <= reversePoints[diagonal] && 1447 /* MaxDifferencesHistory */ > 0 && numDifferences <= 1447 /* MaxDifferencesHistory */ + 1) {\n              // BINGO! We overlapped, and we have the full trace in memory!\n              return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n            } else {\n              // Either false overlap, or we didn't have enough memory for the full trace\n              // Just return the recursion point\n              return null;\n            }\n          }\n        }\n      }\n      // Check to see if we should be quitting early, before moving on to the next iteration.\n      const matchLengthOfLongest = (furthestOriginalIndex - originalStart + (furthestModifiedIndex - modifiedStart) - numDifferences) / 2;\n      if (this.ContinueProcessingPredicate !== null && !this.ContinueProcessingPredicate(furthestOriginalIndex, matchLengthOfLongest)) {\n        // We can't finish, so skip ahead to generating a result from what we have.\n        quitEarlyArr[0] = true;\n        // Use the furthest distance we got in the forward direction.\n        midOriginalArr[0] = furthestOriginalIndex;\n        midModifiedArr[0] = furthestModifiedIndex;\n        if (matchLengthOfLongest > 0 && 1447 /* MaxDifferencesHistory */ > 0 && numDifferences <= 1447 /* MaxDifferencesHistory */ + 1) {\n          // Enough of the history is in memory to walk it backwards\n          return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n        } else {\n          // We didn't actually remember enough of the history.\n          //Since we are quitting the diff early, we need to shift back the originalStart and modified start\n          //back into the boundary limits since we decremented their value above beyond the boundary limit.\n          originalStart++;\n          modifiedStart++;\n          return [new DiffChange(originalStart, originalEnd - originalStart + 1, modifiedStart, modifiedEnd - modifiedStart + 1)];\n        }\n      }\n      // Run the algorithm in the reverse direction\n      diagonalReverseStart = this.ClipDiagonalBound(diagonalReverseBase - numDifferences, numDifferences, diagonalReverseBase, numDiagonals);\n      diagonalReverseEnd = this.ClipDiagonalBound(diagonalReverseBase + numDifferences, numDifferences, diagonalReverseBase, numDiagonals);\n      for (let diagonal = diagonalReverseStart; diagonal <= diagonalReverseEnd; diagonal += 2) {\n        // STEP 1: We extend the furthest reaching point in the present diagonal\n        // by looking at the diagonals above and below and picking the one whose point\n        // is further away from the start point (originalEnd, modifiedEnd)\n        if (diagonal === diagonalReverseStart || diagonal < diagonalReverseEnd && reversePoints[diagonal - 1] >= reversePoints[diagonal + 1]) {\n          originalIndex = reversePoints[diagonal + 1] - 1;\n        } else {\n          originalIndex = reversePoints[diagonal - 1];\n        }\n        modifiedIndex = originalIndex - (diagonal - diagonalReverseBase) - diagonalReverseOffset;\n        // Save the current originalIndex so we can test for false overlap\n        const tempOriginalIndex = originalIndex;\n        // STEP 2: We can continue to extend the furthest reaching point in the present diagonal\n        // as long as the elements are equal.\n        while (originalIndex > originalStart && modifiedIndex > modifiedStart && this.ElementsAreEqual(originalIndex, modifiedIndex)) {\n          originalIndex--;\n          modifiedIndex--;\n        }\n        reversePoints[diagonal] = originalIndex;\n        // STEP 4: If delta is even (overlap first happens on reverse when delta is even)\n        // and diagonal is in the range of forward diagonals computed for numDifferences\n        // then check for overlap.\n        if (deltaIsEven && Math.abs(diagonal - diagonalForwardBase) <= numDifferences) {\n          if (originalIndex <= forwardPoints[diagonal]) {\n            midOriginalArr[0] = originalIndex;\n            midModifiedArr[0] = modifiedIndex;\n            if (tempOriginalIndex >= forwardPoints[diagonal] && 1447 /* MaxDifferencesHistory */ > 0 && numDifferences <= 1447 /* MaxDifferencesHistory */ + 1) {\n              // BINGO! We overlapped, and we have the full trace in memory!\n              return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n            } else {\n              // Either false overlap, or we didn't have enough memory for the full trace\n              // Just return the recursion point\n              return null;\n            }\n          }\n        }\n      }\n      // Save current vectors to history before the next iteration\n      if (numDifferences <= 1447 /* MaxDifferencesHistory */) {\n        // We are allocating space for one extra int, which we fill with\n        // the index of the diagonal base index\n        let temp = new Int32Array(diagonalForwardEnd - diagonalForwardStart + 2);\n        temp[0] = diagonalForwardBase - diagonalForwardStart + 1;\n        MyArray.Copy2(forwardPoints, diagonalForwardStart, temp, 1, diagonalForwardEnd - diagonalForwardStart + 1);\n        this.m_forwardHistory.push(temp);\n        temp = new Int32Array(diagonalReverseEnd - diagonalReverseStart + 2);\n        temp[0] = diagonalReverseBase - diagonalReverseStart + 1;\n        MyArray.Copy2(reversePoints, diagonalReverseStart, temp, 1, diagonalReverseEnd - diagonalReverseStart + 1);\n        this.m_reverseHistory.push(temp);\n      }\n    }\n    // If we got here, then we have the full trace in history. We just have to convert it to a change list\n    // NOTE: This part is a bit messy\n    return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n  }\n  /**\n   * Shifts the given changes to provide a more intuitive diff.\n   * While the first element in a diff matches the first element after the diff,\n   * we shift the diff down.\n   *\n   * @param changes The list of changes to shift\n   * @returns The shifted changes\n   */\n  PrettifyChanges(changes) {\n    // Shift all the changes down first\n    for (let i = 0; i < changes.length; i++) {\n      const change = changes[i];\n      const originalStop = i < changes.length - 1 ? changes[i + 1].originalStart : this._originalElementsOrHash.length;\n      const modifiedStop = i < changes.length - 1 ? changes[i + 1].modifiedStart : this._modifiedElementsOrHash.length;\n      const checkOriginal = change.originalLength > 0;\n      const checkModified = change.modifiedLength > 0;\n      while (change.originalStart + change.originalLength < originalStop && change.modifiedStart + change.modifiedLength < modifiedStop && (!checkOriginal || this.OriginalElementsAreEqual(change.originalStart, change.originalStart + change.originalLength)) && (!checkModified || this.ModifiedElementsAreEqual(change.modifiedStart, change.modifiedStart + change.modifiedLength))) {\n        const startStrictEqual = this.ElementsAreStrictEqual(change.originalStart, change.modifiedStart);\n        const endStrictEqual = this.ElementsAreStrictEqual(change.originalStart + change.originalLength, change.modifiedStart + change.modifiedLength);\n        if (endStrictEqual && !startStrictEqual) {\n          // moving the change down would create an equal change, but the elements are not strict equal\n          break;\n        }\n        change.originalStart++;\n        change.modifiedStart++;\n      }\n      let mergedChangeArr = [null];\n      if (i < changes.length - 1 && this.ChangesOverlap(changes[i], changes[i + 1], mergedChangeArr)) {\n        changes[i] = mergedChangeArr[0];\n        changes.splice(i + 1, 1);\n        i--;\n        continue;\n      }\n    }\n    // Shift changes back up until we hit empty or whitespace-only lines\n    for (let i = changes.length - 1; i >= 0; i--) {\n      const change = changes[i];\n      let originalStop = 0;\n      let modifiedStop = 0;\n      if (i > 0) {\n        const prevChange = changes[i - 1];\n        originalStop = prevChange.originalStart + prevChange.originalLength;\n        modifiedStop = prevChange.modifiedStart + prevChange.modifiedLength;\n      }\n      const checkOriginal = change.originalLength > 0;\n      const checkModified = change.modifiedLength > 0;\n      let bestDelta = 0;\n      let bestScore = this._boundaryScore(change.originalStart, change.originalLength, change.modifiedStart, change.modifiedLength);\n      for (let delta = 1;; delta++) {\n        const originalStart = change.originalStart - delta;\n        const modifiedStart = change.modifiedStart - delta;\n        if (originalStart < originalStop || modifiedStart < modifiedStop) {\n          break;\n        }\n        if (checkOriginal && !this.OriginalElementsAreEqual(originalStart, originalStart + change.originalLength)) {\n          break;\n        }\n        if (checkModified && !this.ModifiedElementsAreEqual(modifiedStart, modifiedStart + change.modifiedLength)) {\n          break;\n        }\n        const touchingPreviousChange = originalStart === originalStop && modifiedStart === modifiedStop;\n        const score = (touchingPreviousChange ? 5 : 0) + this._boundaryScore(originalStart, change.originalLength, modifiedStart, change.modifiedLength);\n        if (score > bestScore) {\n          bestScore = score;\n          bestDelta = delta;\n        }\n      }\n      change.originalStart -= bestDelta;\n      change.modifiedStart -= bestDelta;\n      const mergedChangeArr = [null];\n      if (i > 0 && this.ChangesOverlap(changes[i - 1], changes[i], mergedChangeArr)) {\n        changes[i - 1] = mergedChangeArr[0];\n        changes.splice(i, 1);\n        i++;\n        continue;\n      }\n    }\n    // There could be multiple longest common substrings.\n    // Give preference to the ones containing longer lines\n    if (this._hasStrings) {\n      for (let i = 1, len = changes.length; i < len; i++) {\n        const aChange = changes[i - 1];\n        const bChange = changes[i];\n        const matchedLength = bChange.originalStart - aChange.originalStart - aChange.originalLength;\n        const aOriginalStart = aChange.originalStart;\n        const bOriginalEnd = bChange.originalStart + bChange.originalLength;\n        const abOriginalLength = bOriginalEnd - aOriginalStart;\n        const aModifiedStart = aChange.modifiedStart;\n        const bModifiedEnd = bChange.modifiedStart + bChange.modifiedLength;\n        const abModifiedLength = bModifiedEnd - aModifiedStart;\n        // Avoid wasting a lot of time with these searches\n        if (matchedLength < 5 && abOriginalLength < 20 && abModifiedLength < 20) {\n          const t = this._findBetterContiguousSequence(aOriginalStart, abOriginalLength, aModifiedStart, abModifiedLength, matchedLength);\n          if (t) {\n            const [originalMatchStart, modifiedMatchStart] = t;\n            if (originalMatchStart !== aChange.originalStart + aChange.originalLength || modifiedMatchStart !== aChange.modifiedStart + aChange.modifiedLength) {\n              // switch to another sequence that has a better score\n              aChange.originalLength = originalMatchStart - aChange.originalStart;\n              aChange.modifiedLength = modifiedMatchStart - aChange.modifiedStart;\n              bChange.originalStart = originalMatchStart + matchedLength;\n              bChange.modifiedStart = modifiedMatchStart + matchedLength;\n              bChange.originalLength = bOriginalEnd - bChange.originalStart;\n              bChange.modifiedLength = bModifiedEnd - bChange.modifiedStart;\n            }\n          }\n        }\n      }\n    }\n    return changes;\n  }\n  _findBetterContiguousSequence(originalStart, originalLength, modifiedStart, modifiedLength, desiredLength) {\n    if (originalLength < desiredLength || modifiedLength < desiredLength) {\n      return null;\n    }\n    const originalMax = originalStart + originalLength - desiredLength + 1;\n    const modifiedMax = modifiedStart + modifiedLength - desiredLength + 1;\n    let bestScore = 0;\n    let bestOriginalStart = 0;\n    let bestModifiedStart = 0;\n    for (let i = originalStart; i < originalMax; i++) {\n      for (let j = modifiedStart; j < modifiedMax; j++) {\n        const score = this._contiguousSequenceScore(i, j, desiredLength);\n        if (score > 0 && score > bestScore) {\n          bestScore = score;\n          bestOriginalStart = i;\n          bestModifiedStart = j;\n        }\n      }\n    }\n    if (bestScore > 0) {\n      return [bestOriginalStart, bestModifiedStart];\n    }\n    return null;\n  }\n  _contiguousSequenceScore(originalStart, modifiedStart, length) {\n    let score = 0;\n    for (let l = 0; l < length; l++) {\n      if (!this.ElementsAreEqual(originalStart + l, modifiedStart + l)) {\n        return 0;\n      }\n      score += this._originalStringElements[originalStart + l].length;\n    }\n    return score;\n  }\n  _OriginalIsBoundary(index) {\n    if (index <= 0 || index >= this._originalElementsOrHash.length - 1) {\n      return true;\n    }\n    return this._hasStrings && /^\\s*$/.test(this._originalStringElements[index]);\n  }\n  _OriginalRegionIsBoundary(originalStart, originalLength) {\n    if (this._OriginalIsBoundary(originalStart) || this._OriginalIsBoundary(originalStart - 1)) {\n      return true;\n    }\n    if (originalLength > 0) {\n      const originalEnd = originalStart + originalLength;\n      if (this._OriginalIsBoundary(originalEnd - 1) || this._OriginalIsBoundary(originalEnd)) {\n        return true;\n      }\n    }\n    return false;\n  }\n  _ModifiedIsBoundary(index) {\n    if (index <= 0 || index >= this._modifiedElementsOrHash.length - 1) {\n      return true;\n    }\n    return this._hasStrings && /^\\s*$/.test(this._modifiedStringElements[index]);\n  }\n  _ModifiedRegionIsBoundary(modifiedStart, modifiedLength) {\n    if (this._ModifiedIsBoundary(modifiedStart) || this._ModifiedIsBoundary(modifiedStart - 1)) {\n      return true;\n    }\n    if (modifiedLength > 0) {\n      const modifiedEnd = modifiedStart + modifiedLength;\n      if (this._ModifiedIsBoundary(modifiedEnd - 1) || this._ModifiedIsBoundary(modifiedEnd)) {\n        return true;\n      }\n    }\n    return false;\n  }\n  _boundaryScore(originalStart, originalLength, modifiedStart, modifiedLength) {\n    const originalScore = this._OriginalRegionIsBoundary(originalStart, originalLength) ? 1 : 0;\n    const modifiedScore = this._ModifiedRegionIsBoundary(modifiedStart, modifiedLength) ? 1 : 0;\n    return originalScore + modifiedScore;\n  }\n  /**\n   * Concatenates the two input DiffChange lists and returns the resulting\n   * list.\n   * @param The left changes\n   * @param The right changes\n   * @returns The concatenated list\n   */\n  ConcatenateChanges(left, right) {\n    let mergedChangeArr = [];\n    if (left.length === 0 || right.length === 0) {\n      return right.length > 0 ? right : left;\n    } else if (this.ChangesOverlap(left[left.length - 1], right[0], mergedChangeArr)) {\n      // Since we break the problem down recursively, it is possible that we\n      // might recurse in the middle of a change thereby splitting it into\n      // two changes. Here in the combining stage, we detect and fuse those\n      // changes back together\n      const result = new Array(left.length + right.length - 1);\n      MyArray.Copy(left, 0, result, 0, left.length - 1);\n      result[left.length - 1] = mergedChangeArr[0];\n      MyArray.Copy(right, 1, result, left.length, right.length - 1);\n      return result;\n    } else {\n      const result = new Array(left.length + right.length);\n      MyArray.Copy(left, 0, result, 0, left.length);\n      MyArray.Copy(right, 0, result, left.length, right.length);\n      return result;\n    }\n  }\n  /**\n   * Returns true if the two changes overlap and can be merged into a single\n   * change\n   * @param left The left change\n   * @param right The right change\n   * @param mergedChange The merged change if the two overlap, null otherwise\n   * @returns True if the two changes overlap\n   */\n  ChangesOverlap(left, right, mergedChangeArr) {\n    Debug.Assert(left.originalStart <= right.originalStart, 'Left change is not less than or equal to right change');\n    Debug.Assert(left.modifiedStart <= right.modifiedStart, 'Left change is not less than or equal to right change');\n    if (left.originalStart + left.originalLength >= right.originalStart || left.modifiedStart + left.modifiedLength >= right.modifiedStart) {\n      const originalStart = left.originalStart;\n      let originalLength = left.originalLength;\n      const modifiedStart = left.modifiedStart;\n      let modifiedLength = left.modifiedLength;\n      if (left.originalStart + left.originalLength >= right.originalStart) {\n        originalLength = right.originalStart + right.originalLength - left.originalStart;\n      }\n      if (left.modifiedStart + left.modifiedLength >= right.modifiedStart) {\n        modifiedLength = right.modifiedStart + right.modifiedLength - left.modifiedStart;\n      }\n      mergedChangeArr[0] = new DiffChange(originalStart, originalLength, modifiedStart, modifiedLength);\n      return true;\n    } else {\n      mergedChangeArr[0] = null;\n      return false;\n    }\n  }\n  /**\n   * Helper method used to clip a diagonal index to the range of valid\n   * diagonals. This also decides whether or not the diagonal index,\n   * if it exceeds the boundary, should be clipped to the boundary or clipped\n   * one inside the boundary depending on the Even/Odd status of the boundary\n   * and numDifferences.\n   * @param diagonal The index of the diagonal to clip.\n   * @param numDifferences The current number of differences being iterated upon.\n   * @param diagonalBaseIndex The base reference diagonal.\n   * @param numDiagonals The total number of diagonals.\n   * @returns The clipped diagonal index.\n   */\n  ClipDiagonalBound(diagonal, numDifferences, diagonalBaseIndex, numDiagonals) {\n    if (diagonal >= 0 && diagonal < numDiagonals) {\n      // Nothing to clip, its in range\n      return diagonal;\n    }\n    // diagonalsBelow: The number of diagonals below the reference diagonal\n    // diagonalsAbove: The number of diagonals above the reference diagonal\n    const diagonalsBelow = diagonalBaseIndex;\n    const diagonalsAbove = numDiagonals - diagonalBaseIndex - 1;\n    const diffEven = numDifferences % 2 === 0;\n    if (diagonal < 0) {\n      const lowerBoundEven = diagonalsBelow % 2 === 0;\n      return diffEven === lowerBoundEven ? 0 : 1;\n    } else {\n      const upperBoundEven = diagonalsAbove % 2 === 0;\n      return diffEven === upperBoundEven ? numDiagonals - 1 : numDiagonals - 2;\n    }\n  }\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// NOTE: VSCode's copy of nodejs path library to be usable in common (non-node) namespace\n// Copied from: https://github.com/nodejs/node/blob/v14.16.0/lib/path.js\n/**\n * Copyright Joyent, Inc. and other Node contributors.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to permit\n * persons to whom the Software is furnished to do so, subject to the\n * following conditions:\n *\n * The above copyright notice and this permission notice shall be included\n * in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n * NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n * USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\nimport * as process from './process.js';\nconst CHAR_UPPERCASE_A = 65; /* A */\nconst CHAR_LOWERCASE_A = 97; /* a */\nconst CHAR_UPPERCASE_Z = 90; /* Z */\nconst CHAR_LOWERCASE_Z = 122; /* z */\nconst CHAR_DOT = 46; /* . */\nconst CHAR_FORWARD_SLASH = 47; /* / */\nconst CHAR_BACKWARD_SLASH = 92; /* \\ */\nconst CHAR_COLON = 58; /* : */\nconst CHAR_QUESTION_MARK = 63; /* ? */\nclass ErrorInvalidArgType extends Error {\n  constructor(name, expected, actual) {\n    // determiner: 'must be' or 'must not be'\n    let determiner;\n    if (typeof expected === 'string' && expected.indexOf('not ') === 0) {\n      determiner = 'must not be';\n      expected = expected.replace(/^not /, '');\n    } else {\n      determiner = 'must be';\n    }\n    const type = name.indexOf('.') !== -1 ? 'property' : 'argument';\n    let msg = \"The \\\"\".concat(name, \"\\\" \").concat(type, \" \").concat(determiner, \" of type \").concat(expected);\n    msg += \". Received type \".concat(typeof actual);\n    super(msg);\n    this.code = 'ERR_INVALID_ARG_TYPE';\n  }\n}\nfunction validateString(value, name) {\n  if (typeof value !== 'string') {\n    throw new ErrorInvalidArgType(name, 'string', value);\n  }\n}\nfunction isPathSeparator(code) {\n  return code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\n}\nfunction isPosixPathSeparator(code) {\n  return code === CHAR_FORWARD_SLASH;\n}\nfunction isWindowsDeviceRoot(code) {\n  return code >= CHAR_UPPERCASE_A && code <= CHAR_UPPERCASE_Z || code >= CHAR_LOWERCASE_A && code <= CHAR_LOWERCASE_Z;\n}\n// Resolves . and .. elements in a path with directory names\nfunction normalizeString(path, allowAboveRoot, separator, isPathSeparator) {\n  let res = '';\n  let lastSegmentLength = 0;\n  let lastSlash = -1;\n  let dots = 0;\n  let code = 0;\n  for (let i = 0; i <= path.length; ++i) {\n    if (i < path.length) {\n      code = path.charCodeAt(i);\n    } else if (isPathSeparator(code)) {\n      break;\n    } else {\n      code = CHAR_FORWARD_SLASH;\n    }\n    if (isPathSeparator(code)) {\n      if (lastSlash === i - 1 || dots === 1) {\n        // NOOP\n      } else if (dots === 2) {\n        if (res.length < 2 || lastSegmentLength !== 2 || res.charCodeAt(res.length - 1) !== CHAR_DOT || res.charCodeAt(res.length - 2) !== CHAR_DOT) {\n          if (res.length > 2) {\n            const lastSlashIndex = res.lastIndexOf(separator);\n            if (lastSlashIndex === -1) {\n              res = '';\n              lastSegmentLength = 0;\n            } else {\n              res = res.slice(0, lastSlashIndex);\n              lastSegmentLength = res.length - 1 - res.lastIndexOf(separator);\n            }\n            lastSlash = i;\n            dots = 0;\n            continue;\n          } else if (res.length !== 0) {\n            res = '';\n            lastSegmentLength = 0;\n            lastSlash = i;\n            dots = 0;\n            continue;\n          }\n        }\n        if (allowAboveRoot) {\n          res += res.length > 0 ? \"\".concat(separator, \"..\") : '..';\n          lastSegmentLength = 2;\n        }\n      } else {\n        if (res.length > 0) {\n          res += \"\".concat(separator).concat(path.slice(lastSlash + 1, i));\n        } else {\n          res = path.slice(lastSlash + 1, i);\n        }\n        lastSegmentLength = i - lastSlash - 1;\n      }\n      lastSlash = i;\n      dots = 0;\n    } else if (code === CHAR_DOT && dots !== -1) {\n      ++dots;\n    } else {\n      dots = -1;\n    }\n  }\n  return res;\n}\nfunction _format(sep, pathObject) {\n  if (pathObject === null || typeof pathObject !== 'object') {\n    throw new ErrorInvalidArgType('pathObject', 'Object', pathObject);\n  }\n  const dir = pathObject.dir || pathObject.root;\n  const base = pathObject.base || \"\".concat(pathObject.name || '').concat(pathObject.ext || '');\n  if (!dir) {\n    return base;\n  }\n  return dir === pathObject.root ? \"\".concat(dir).concat(base) : \"\".concat(dir).concat(sep).concat(base);\n}\nexport const win32 = {\n  // path.resolve([from ...], to)\n  resolve() {\n    let resolvedDevice = '';\n    let resolvedTail = '';\n    let resolvedAbsolute = false;\n    for (let i = arguments.length - 1; i >= -1; i--) {\n      let path;\n      if (i >= 0) {\n        path = i < 0 || arguments.length <= i ? undefined : arguments[i];\n        validateString(path, 'path');\n        // Skip empty entries\n        if (path.length === 0) {\n          continue;\n        }\n      } else if (resolvedDevice.length === 0) {\n        path = process.cwd();\n      } else {\n        // Windows has the concept of drive-specific current working\n        // directories. If we've resolved a drive letter but not yet an\n        // absolute path, get cwd for that drive, or the process cwd if\n        // the drive cwd is not available. We're sure the device is not\n        // a UNC path at this points, because UNC paths are always absolute.\n        path = process.env[\"=\".concat(resolvedDevice)] || process.cwd();\n        // Verify that a cwd was found and that it actually points\n        // to our drive. If not, default to the drive's root.\n        if (path === undefined || path.slice(0, 2).toLowerCase() !== resolvedDevice.toLowerCase() && path.charCodeAt(2) === CHAR_BACKWARD_SLASH) {\n          path = \"\".concat(resolvedDevice, \"\\\\\");\n        }\n      }\n      const len = path.length;\n      let rootEnd = 0;\n      let device = '';\n      let isAbsolute = false;\n      const code = path.charCodeAt(0);\n      // Try to match a root\n      if (len === 1) {\n        if (isPathSeparator(code)) {\n          // `path` contains just a path separator\n          rootEnd = 1;\n          isAbsolute = true;\n        }\n      } else if (isPathSeparator(code)) {\n        // Possible UNC root\n        // If we started with a separator, we know we at least have an\n        // absolute path of some kind (UNC or otherwise)\n        isAbsolute = true;\n        if (isPathSeparator(path.charCodeAt(1))) {\n          // Matched double path separator at beginning\n          let j = 2;\n          let last = j;\n          // Match 1 or more non-path separators\n          while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n            j++;\n          }\n          if (j < len && j !== last) {\n            const firstPart = path.slice(last, j);\n            // Matched!\n            last = j;\n            // Match 1 or more path separators\n            while (j < len && isPathSeparator(path.charCodeAt(j))) {\n              j++;\n            }\n            if (j < len && j !== last) {\n              // Matched!\n              last = j;\n              // Match 1 or more non-path separators\n              while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                j++;\n              }\n              if (j === len || j !== last) {\n                // We matched a UNC root\n                device = \"\\\\\\\\\".concat(firstPart, \"\\\\\").concat(path.slice(last, j));\n                rootEnd = j;\n              }\n            }\n          }\n        } else {\n          rootEnd = 1;\n        }\n      } else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n        // Possible device root\n        device = path.slice(0, 2);\n        rootEnd = 2;\n        if (len > 2 && isPathSeparator(path.charCodeAt(2))) {\n          // Treat separator following drive name as an absolute path\n          // indicator\n          isAbsolute = true;\n          rootEnd = 3;\n        }\n      }\n      if (device.length > 0) {\n        if (resolvedDevice.length > 0) {\n          if (device.toLowerCase() !== resolvedDevice.toLowerCase()) {\n            // This path points to another device so it is not applicable\n            continue;\n          }\n        } else {\n          resolvedDevice = device;\n        }\n      }\n      if (resolvedAbsolute) {\n        if (resolvedDevice.length > 0) {\n          break;\n        }\n      } else {\n        resolvedTail = \"\".concat(path.slice(rootEnd), \"\\\\\").concat(resolvedTail);\n        resolvedAbsolute = isAbsolute;\n        if (isAbsolute && resolvedDevice.length > 0) {\n          break;\n        }\n      }\n    }\n    // At this point the path should be resolved to a full absolute path,\n    // but handle relative paths to be safe (might happen when process.cwd()\n    // fails)\n    // Normalize the tail path\n    resolvedTail = normalizeString(resolvedTail, !resolvedAbsolute, '\\\\', isPathSeparator);\n    return resolvedAbsolute ? \"\".concat(resolvedDevice, \"\\\\\").concat(resolvedTail) : \"\".concat(resolvedDevice).concat(resolvedTail) || '.';\n  },\n  normalize(path) {\n    validateString(path, 'path');\n    const len = path.length;\n    if (len === 0) {\n      return '.';\n    }\n    let rootEnd = 0;\n    let device;\n    let isAbsolute = false;\n    const code = path.charCodeAt(0);\n    // Try to match a root\n    if (len === 1) {\n      // `path` contains just a single char, exit early to avoid\n      // unnecessary work\n      return isPosixPathSeparator(code) ? '\\\\' : path;\n    }\n    if (isPathSeparator(code)) {\n      // Possible UNC root\n      // If we started with a separator, we know we at least have an absolute\n      // path of some kind (UNC or otherwise)\n      isAbsolute = true;\n      if (isPathSeparator(path.charCodeAt(1))) {\n        // Matched double path separator at beginning\n        let j = 2;\n        let last = j;\n        // Match 1 or more non-path separators\n        while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n          j++;\n        }\n        if (j < len && j !== last) {\n          const firstPart = path.slice(last, j);\n          // Matched!\n          last = j;\n          // Match 1 or more path separators\n          while (j < len && isPathSeparator(path.charCodeAt(j))) {\n            j++;\n          }\n          if (j < len && j !== last) {\n            // Matched!\n            last = j;\n            // Match 1 or more non-path separators\n            while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n              j++;\n            }\n            if (j === len) {\n              // We matched a UNC root only\n              // Return the normalized version of the UNC root since there\n              // is nothing left to process\n              return \"\\\\\\\\\".concat(firstPart, \"\\\\\").concat(path.slice(last), \"\\\\\");\n            }\n            if (j !== last) {\n              // We matched a UNC root with leftovers\n              device = \"\\\\\\\\\".concat(firstPart, \"\\\\\").concat(path.slice(last, j));\n              rootEnd = j;\n            }\n          }\n        }\n      } else {\n        rootEnd = 1;\n      }\n    } else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n      // Possible device root\n      device = path.slice(0, 2);\n      rootEnd = 2;\n      if (len > 2 && isPathSeparator(path.charCodeAt(2))) {\n        // Treat separator following drive name as an absolute path\n        // indicator\n        isAbsolute = true;\n        rootEnd = 3;\n      }\n    }\n    let tail = rootEnd < len ? normalizeString(path.slice(rootEnd), !isAbsolute, '\\\\', isPathSeparator) : '';\n    if (tail.length === 0 && !isAbsolute) {\n      tail = '.';\n    }\n    if (tail.length > 0 && isPathSeparator(path.charCodeAt(len - 1))) {\n      tail += '\\\\';\n    }\n    if (device === undefined) {\n      return isAbsolute ? \"\\\\\".concat(tail) : tail;\n    }\n    return isAbsolute ? \"\".concat(device, \"\\\\\").concat(tail) : \"\".concat(device).concat(tail);\n  },\n  isAbsolute(path) {\n    validateString(path, 'path');\n    const len = path.length;\n    if (len === 0) {\n      return false;\n    }\n    const code = path.charCodeAt(0);\n    return isPathSeparator(code) ||\n    // Possible device root\n    len > 2 && isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON && isPathSeparator(path.charCodeAt(2));\n  },\n  join() {\n    if (arguments.length === 0) {\n      return '.';\n    }\n    let joined;\n    let firstPart;\n    for (let i = 0; i < arguments.length; ++i) {\n      const arg = i < 0 || arguments.length <= i ? undefined : arguments[i];\n      validateString(arg, 'path');\n      if (arg.length > 0) {\n        if (joined === undefined) {\n          joined = firstPart = arg;\n        } else {\n          joined += \"\\\\\".concat(arg);\n        }\n      }\n    }\n    if (joined === undefined) {\n      return '.';\n    }\n    // Make sure that the joined path doesn't start with two slashes, because\n    // normalize() will mistake it for a UNC path then.\n    //\n    // This step is skipped when it is very clear that the user actually\n    // intended to point at a UNC path. This is assumed when the first\n    // non-empty string arguments starts with exactly two slashes followed by\n    // at least one more non-slash character.\n    //\n    // Note that for normalize() to treat a path as a UNC path it needs to\n    // have at least 2 components, so we don't filter for that here.\n    // This means that the user can use join to construct UNC paths from\n    // a server name and a share name; for example:\n    //   path.join('//server', 'share') -> '\\\\\\\\server\\\\share\\\\')\n    let needsReplace = true;\n    let slashCount = 0;\n    if (typeof firstPart === 'string' && isPathSeparator(firstPart.charCodeAt(0))) {\n      ++slashCount;\n      const firstLen = firstPart.length;\n      if (firstLen > 1 && isPathSeparator(firstPart.charCodeAt(1))) {\n        ++slashCount;\n        if (firstLen > 2) {\n          if (isPathSeparator(firstPart.charCodeAt(2))) {\n            ++slashCount;\n          } else {\n            // We matched a UNC path in the first part\n            needsReplace = false;\n          }\n        }\n      }\n    }\n    if (needsReplace) {\n      // Find any more consecutive slashes we need to replace\n      while (slashCount < joined.length && isPathSeparator(joined.charCodeAt(slashCount))) {\n        slashCount++;\n      }\n      // Replace the slashes if needed\n      if (slashCount >= 2) {\n        joined = \"\\\\\".concat(joined.slice(slashCount));\n      }\n    }\n    return win32.normalize(joined);\n  },\n  // It will solve the relative path from `from` to `to`, for instance:\n  //  from = 'C:\\\\orandea\\\\test\\\\aaa'\n  //  to = 'C:\\\\orandea\\\\impl\\\\bbb'\n  // The output of the function should be: '..\\\\..\\\\impl\\\\bbb'\n  relative(from, to) {\n    validateString(from, 'from');\n    validateString(to, 'to');\n    if (from === to) {\n      return '';\n    }\n    const fromOrig = win32.resolve(from);\n    const toOrig = win32.resolve(to);\n    if (fromOrig === toOrig) {\n      return '';\n    }\n    from = fromOrig.toLowerCase();\n    to = toOrig.toLowerCase();\n    if (from === to) {\n      return '';\n    }\n    // Trim any leading backslashes\n    let fromStart = 0;\n    while (fromStart < from.length && from.charCodeAt(fromStart) === CHAR_BACKWARD_SLASH) {\n      fromStart++;\n    }\n    // Trim trailing backslashes (applicable to UNC paths only)\n    let fromEnd = from.length;\n    while (fromEnd - 1 > fromStart && from.charCodeAt(fromEnd - 1) === CHAR_BACKWARD_SLASH) {\n      fromEnd--;\n    }\n    const fromLen = fromEnd - fromStart;\n    // Trim any leading backslashes\n    let toStart = 0;\n    while (toStart < to.length && to.charCodeAt(toStart) === CHAR_BACKWARD_SLASH) {\n      toStart++;\n    }\n    // Trim trailing backslashes (applicable to UNC paths only)\n    let toEnd = to.length;\n    while (toEnd - 1 > toStart && to.charCodeAt(toEnd - 1) === CHAR_BACKWARD_SLASH) {\n      toEnd--;\n    }\n    const toLen = toEnd - toStart;\n    // Compare paths to find the longest common path from root\n    const length = fromLen < toLen ? fromLen : toLen;\n    let lastCommonSep = -1;\n    let i = 0;\n    for (; i < length; i++) {\n      const fromCode = from.charCodeAt(fromStart + i);\n      if (fromCode !== to.charCodeAt(toStart + i)) {\n        break;\n      } else if (fromCode === CHAR_BACKWARD_SLASH) {\n        lastCommonSep = i;\n      }\n    }\n    // We found a mismatch before the first common path separator was seen, so\n    // return the original `to`.\n    if (i !== length) {\n      if (lastCommonSep === -1) {\n        return toOrig;\n      }\n    } else {\n      if (toLen > length) {\n        if (to.charCodeAt(toStart + i) === CHAR_BACKWARD_SLASH) {\n          // We get here if `from` is the exact base path for `to`.\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo\\\\bar\\\\baz'\n          return toOrig.slice(toStart + i + 1);\n        }\n        if (i === 2) {\n          // We get here if `from` is the device root.\n          // For example: from='C:\\\\'; to='C:\\\\foo'\n          return toOrig.slice(toStart + i);\n        }\n      }\n      if (fromLen > length) {\n        if (from.charCodeAt(fromStart + i) === CHAR_BACKWARD_SLASH) {\n          // We get here if `to` is the exact base path for `from`.\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo'\n          lastCommonSep = i;\n        } else if (i === 2) {\n          // We get here if `to` is the device root.\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\'\n          lastCommonSep = 3;\n        }\n      }\n      if (lastCommonSep === -1) {\n        lastCommonSep = 0;\n      }\n    }\n    let out = '';\n    // Generate the relative path based on the path difference between `to` and\n    // `from`\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n      if (i === fromEnd || from.charCodeAt(i) === CHAR_BACKWARD_SLASH) {\n        out += out.length === 0 ? '..' : '\\\\..';\n      }\n    }\n    toStart += lastCommonSep;\n    // Lastly, append the rest of the destination (`to`) path that comes after\n    // the common path parts\n    if (out.length > 0) {\n      return \"\".concat(out).concat(toOrig.slice(toStart, toEnd));\n    }\n    if (toOrig.charCodeAt(toStart) === CHAR_BACKWARD_SLASH) {\n      ++toStart;\n    }\n    return toOrig.slice(toStart, toEnd);\n  },\n  toNamespacedPath(path) {\n    // Note: this will *probably* throw somewhere.\n    if (typeof path !== 'string') {\n      return path;\n    }\n    if (path.length === 0) {\n      return '';\n    }\n    const resolvedPath = win32.resolve(path);\n    if (resolvedPath.length <= 2) {\n      return path;\n    }\n    if (resolvedPath.charCodeAt(0) === CHAR_BACKWARD_SLASH) {\n      // Possible UNC root\n      if (resolvedPath.charCodeAt(1) === CHAR_BACKWARD_SLASH) {\n        const code = resolvedPath.charCodeAt(2);\n        if (code !== CHAR_QUESTION_MARK && code !== CHAR_DOT) {\n          // Matched non-long UNC root, convert the path to a long UNC path\n          return \"\\\\\\\\?\\\\UNC\\\\\".concat(resolvedPath.slice(2));\n        }\n      }\n    } else if (isWindowsDeviceRoot(resolvedPath.charCodeAt(0)) && resolvedPath.charCodeAt(1) === CHAR_COLON && resolvedPath.charCodeAt(2) === CHAR_BACKWARD_SLASH) {\n      // Matched device root, convert the path to a long UNC path\n      return \"\\\\\\\\?\\\\\".concat(resolvedPath);\n    }\n    return path;\n  },\n  dirname(path) {\n    validateString(path, 'path');\n    const len = path.length;\n    if (len === 0) {\n      return '.';\n    }\n    let rootEnd = -1;\n    let offset = 0;\n    const code = path.charCodeAt(0);\n    if (len === 1) {\n      // `path` contains just a path separator, exit early to avoid\n      // unnecessary work or a dot.\n      return isPathSeparator(code) ? path : '.';\n    }\n    // Try to match a root\n    if (isPathSeparator(code)) {\n      // Possible UNC root\n      rootEnd = offset = 1;\n      if (isPathSeparator(path.charCodeAt(1))) {\n        // Matched double path separator at beginning\n        let j = 2;\n        let last = j;\n        // Match 1 or more non-path separators\n        while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n          j++;\n        }\n        if (j < len && j !== last) {\n          // Matched!\n          last = j;\n          // Match 1 or more path separators\n          while (j < len && isPathSeparator(path.charCodeAt(j))) {\n            j++;\n          }\n          if (j < len && j !== last) {\n            // Matched!\n            last = j;\n            // Match 1 or more non-path separators\n            while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n              j++;\n            }\n            if (j === len) {\n              // We matched a UNC root only\n              return path;\n            }\n            if (j !== last) {\n              // We matched a UNC root with leftovers\n              // Offset by 1 to include the separator after the UNC root to\n              // treat it as a \"normal root\" on top of a (UNC) root\n              rootEnd = offset = j + 1;\n            }\n          }\n        }\n      }\n      // Possible device root\n    } else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n      rootEnd = len > 2 && isPathSeparator(path.charCodeAt(2)) ? 3 : 2;\n      offset = rootEnd;\n    }\n    let end = -1;\n    let matchedSlash = true;\n    for (let i = len - 1; i >= offset; --i) {\n      if (isPathSeparator(path.charCodeAt(i))) {\n        if (!matchedSlash) {\n          end = i;\n          break;\n        }\n      } else {\n        // We saw the first non-path separator\n        matchedSlash = false;\n      }\n    }\n    if (end === -1) {\n      if (rootEnd === -1) {\n        return '.';\n      }\n      end = rootEnd;\n    }\n    return path.slice(0, end);\n  },\n  basename(path, ext) {\n    if (ext !== undefined) {\n      validateString(ext, 'ext');\n    }\n    validateString(path, 'path');\n    let start = 0;\n    let end = -1;\n    let matchedSlash = true;\n    let i;\n    // Check for a drive letter prefix so as not to mistake the following\n    // path separator as an extra separator at the end of the path that can be\n    // disregarded\n    if (path.length >= 2 && isWindowsDeviceRoot(path.charCodeAt(0)) && path.charCodeAt(1) === CHAR_COLON) {\n      start = 2;\n    }\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n      if (ext === path) {\n        return '';\n      }\n      let extIdx = ext.length - 1;\n      let firstNonSlashEnd = -1;\n      for (i = path.length - 1; i >= start; --i) {\n        const code = path.charCodeAt(i);\n        if (isPathSeparator(code)) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            start = i + 1;\n            break;\n          }\n        } else {\n          if (firstNonSlashEnd === -1) {\n            // We saw the first non-path separator, remember this index in case\n            // we need it if the extension ends up not matching\n            matchedSlash = false;\n            firstNonSlashEnd = i + 1;\n          }\n          if (extIdx >= 0) {\n            // Try to match the explicit extension\n            if (code === ext.charCodeAt(extIdx)) {\n              if (--extIdx === -1) {\n                // We matched the extension, so mark this as the end of our path\n                // component\n                end = i;\n              }\n            } else {\n              // Extension does not match, so our result is the entire path\n              // component\n              extIdx = -1;\n              end = firstNonSlashEnd;\n            }\n          }\n        }\n      }\n      if (start === end) {\n        end = firstNonSlashEnd;\n      } else if (end === -1) {\n        end = path.length;\n      }\n      return path.slice(start, end);\n    }\n    for (i = path.length - 1; i >= start; --i) {\n      if (isPathSeparator(path.charCodeAt(i))) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          start = i + 1;\n          break;\n        }\n      } else if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component\n        matchedSlash = false;\n        end = i + 1;\n      }\n    }\n    if (end === -1) {\n      return '';\n    }\n    return path.slice(start, end);\n  },\n  extname(path) {\n    validateString(path, 'path');\n    let start = 0;\n    let startDot = -1;\n    let startPart = 0;\n    let end = -1;\n    let matchedSlash = true;\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    let preDotState = 0;\n    // Check for a drive letter prefix so as not to mistake the following\n    // path separator as an extra separator at the end of the path that can be\n    // disregarded\n    if (path.length >= 2 && path.charCodeAt(1) === CHAR_COLON && isWindowsDeviceRoot(path.charCodeAt(0))) {\n      start = startPart = 2;\n    }\n    for (let i = path.length - 1; i >= start; --i) {\n      const code = path.charCodeAt(i);\n      if (isPathSeparator(code)) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === CHAR_DOT) {\n        // If this is our first dot, mark it as the start of our extension\n        if (startDot === -1) {\n          startDot = i;\n        } else if (preDotState !== 1) {\n          preDotState = 1;\n        }\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n    if (startDot === -1 || end === -1 ||\n    // We saw a non-dot character immediately before the dot\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly '..'\n    preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      return '';\n    }\n    return path.slice(startDot, end);\n  },\n  format: _format.bind(null, '\\\\'),\n  parse(path) {\n    validateString(path, 'path');\n    const ret = {\n      root: '',\n      dir: '',\n      base: '',\n      ext: '',\n      name: ''\n    };\n    if (path.length === 0) {\n      return ret;\n    }\n    const len = path.length;\n    let rootEnd = 0;\n    let code = path.charCodeAt(0);\n    if (len === 1) {\n      if (isPathSeparator(code)) {\n        // `path` contains just a path separator, exit early to avoid\n        // unnecessary work\n        ret.root = ret.dir = path;\n        return ret;\n      }\n      ret.base = ret.name = path;\n      return ret;\n    }\n    // Try to match a root\n    if (isPathSeparator(code)) {\n      // Possible UNC root\n      rootEnd = 1;\n      if (isPathSeparator(path.charCodeAt(1))) {\n        // Matched double path separator at beginning\n        let j = 2;\n        let last = j;\n        // Match 1 or more non-path separators\n        while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n          j++;\n        }\n        if (j < len && j !== last) {\n          // Matched!\n          last = j;\n          // Match 1 or more path separators\n          while (j < len && isPathSeparator(path.charCodeAt(j))) {\n            j++;\n          }\n          if (j < len && j !== last) {\n            // Matched!\n            last = j;\n            // Match 1 or more non-path separators\n            while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n              j++;\n            }\n            if (j === len) {\n              // We matched a UNC root only\n              rootEnd = j;\n            } else if (j !== last) {\n              // We matched a UNC root with leftovers\n              rootEnd = j + 1;\n            }\n          }\n        }\n      }\n    } else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n      // Possible device root\n      if (len <= 2) {\n        // `path` contains just a drive root, exit early to avoid\n        // unnecessary work\n        ret.root = ret.dir = path;\n        return ret;\n      }\n      rootEnd = 2;\n      if (isPathSeparator(path.charCodeAt(2))) {\n        if (len === 3) {\n          // `path` contains just a drive root, exit early to avoid\n          // unnecessary work\n          ret.root = ret.dir = path;\n          return ret;\n        }\n        rootEnd = 3;\n      }\n    }\n    if (rootEnd > 0) {\n      ret.root = path.slice(0, rootEnd);\n    }\n    let startDot = -1;\n    let startPart = rootEnd;\n    let end = -1;\n    let matchedSlash = true;\n    let i = path.length - 1;\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    let preDotState = 0;\n    // Get non-dir info\n    for (; i >= rootEnd; --i) {\n      code = path.charCodeAt(i);\n      if (isPathSeparator(code)) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === CHAR_DOT) {\n        // If this is our first dot, mark it as the start of our extension\n        if (startDot === -1) {\n          startDot = i;\n        } else if (preDotState !== 1) {\n          preDotState = 1;\n        }\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n    if (end !== -1) {\n      if (startDot === -1 ||\n      // We saw a non-dot character immediately before the dot\n      preDotState === 0 ||\n      // The (right-most) trimmed path component is exactly '..'\n      preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n        ret.base = ret.name = path.slice(startPart, end);\n      } else {\n        ret.name = path.slice(startPart, startDot);\n        ret.base = path.slice(startPart, end);\n        ret.ext = path.slice(startDot, end);\n      }\n    }\n    // If the directory is the root, use the entire root as the `dir` including\n    // the trailing slash if any (`C:\\abc` -> `C:\\`). Otherwise, strip out the\n    // trailing slash (`C:\\abc\\def` -> `C:\\abc`).\n    if (startPart > 0 && startPart !== rootEnd) {\n      ret.dir = path.slice(0, startPart - 1);\n    } else {\n      ret.dir = ret.root;\n    }\n    return ret;\n  },\n  sep: '\\\\',\n  delimiter: ';',\n  win32: null,\n  posix: null\n};\nexport const posix = {\n  // path.resolve([from ...], to)\n  resolve() {\n    let resolvedPath = '';\n    let resolvedAbsolute = false;\n    for (let i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n      const path = i >= 0 ? i < 0 || arguments.length <= i ? undefined : arguments[i] : process.cwd();\n      validateString(path, 'path');\n      // Skip empty entries\n      if (path.length === 0) {\n        continue;\n      }\n      resolvedPath = \"\".concat(path, \"/\").concat(resolvedPath);\n      resolvedAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n    }\n    // At this point the path should be resolved to a full absolute path, but\n    // handle relative paths to be safe (might happen when process.cwd() fails)\n    // Normalize the path\n    resolvedPath = normalizeString(resolvedPath, !resolvedAbsolute, '/', isPosixPathSeparator);\n    if (resolvedAbsolute) {\n      return \"/\".concat(resolvedPath);\n    }\n    return resolvedPath.length > 0 ? resolvedPath : '.';\n  },\n  normalize(path) {\n    validateString(path, 'path');\n    if (path.length === 0) {\n      return '.';\n    }\n    const isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n    const trailingSeparator = path.charCodeAt(path.length - 1) === CHAR_FORWARD_SLASH;\n    // Normalize the path\n    path = normalizeString(path, !isAbsolute, '/', isPosixPathSeparator);\n    if (path.length === 0) {\n      if (isAbsolute) {\n        return '/';\n      }\n      return trailingSeparator ? './' : '.';\n    }\n    if (trailingSeparator) {\n      path += '/';\n    }\n    return isAbsolute ? \"/\".concat(path) : path;\n  },\n  isAbsolute(path) {\n    validateString(path, 'path');\n    return path.length > 0 && path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n  },\n  join() {\n    if (arguments.length === 0) {\n      return '.';\n    }\n    let joined;\n    for (let i = 0; i < arguments.length; ++i) {\n      const arg = i < 0 || arguments.length <= i ? undefined : arguments[i];\n      validateString(arg, 'path');\n      if (arg.length > 0) {\n        if (joined === undefined) {\n          joined = arg;\n        } else {\n          joined += \"/\".concat(arg);\n        }\n      }\n    }\n    if (joined === undefined) {\n      return '.';\n    }\n    return posix.normalize(joined);\n  },\n  relative(from, to) {\n    validateString(from, 'from');\n    validateString(to, 'to');\n    if (from === to) {\n      return '';\n    }\n    // Trim leading forward slashes.\n    from = posix.resolve(from);\n    to = posix.resolve(to);\n    if (from === to) {\n      return '';\n    }\n    const fromStart = 1;\n    const fromEnd = from.length;\n    const fromLen = fromEnd - fromStart;\n    const toStart = 1;\n    const toLen = to.length - toStart;\n    // Compare paths to find the longest common path from root\n    const length = fromLen < toLen ? fromLen : toLen;\n    let lastCommonSep = -1;\n    let i = 0;\n    for (; i < length; i++) {\n      const fromCode = from.charCodeAt(fromStart + i);\n      if (fromCode !== to.charCodeAt(toStart + i)) {\n        break;\n      } else if (fromCode === CHAR_FORWARD_SLASH) {\n        lastCommonSep = i;\n      }\n    }\n    if (i === length) {\n      if (toLen > length) {\n        if (to.charCodeAt(toStart + i) === CHAR_FORWARD_SLASH) {\n          // We get here if `from` is the exact base path for `to`.\n          // For example: from='/foo/bar'; to='/foo/bar/baz'\n          return to.slice(toStart + i + 1);\n        }\n        if (i === 0) {\n          // We get here if `from` is the root\n          // For example: from='/'; to='/foo'\n          return to.slice(toStart + i);\n        }\n      } else if (fromLen > length) {\n        if (from.charCodeAt(fromStart + i) === CHAR_FORWARD_SLASH) {\n          // We get here if `to` is the exact base path for `from`.\n          // For example: from='/foo/bar/baz'; to='/foo/bar'\n          lastCommonSep = i;\n        } else if (i === 0) {\n          // We get here if `to` is the root.\n          // For example: from='/foo/bar'; to='/'\n          lastCommonSep = 0;\n        }\n      }\n    }\n    let out = '';\n    // Generate the relative path based on the path difference between `to`\n    // and `from`.\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n      if (i === fromEnd || from.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n        out += out.length === 0 ? '..' : '/..';\n      }\n    }\n    // Lastly, append the rest of the destination (`to`) path that comes after\n    // the common path parts.\n    return \"\".concat(out).concat(to.slice(toStart + lastCommonSep));\n  },\n  toNamespacedPath(path) {\n    // Non-op on posix systems\n    return path;\n  },\n  dirname(path) {\n    validateString(path, 'path');\n    if (path.length === 0) {\n      return '.';\n    }\n    const hasRoot = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n    let end = -1;\n    let matchedSlash = true;\n    for (let i = path.length - 1; i >= 1; --i) {\n      if (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n        if (!matchedSlash) {\n          end = i;\n          break;\n        }\n      } else {\n        // We saw the first non-path separator\n        matchedSlash = false;\n      }\n    }\n    if (end === -1) {\n      return hasRoot ? '/' : '.';\n    }\n    if (hasRoot && end === 1) {\n      return '//';\n    }\n    return path.slice(0, end);\n  },\n  basename(path, ext) {\n    if (ext !== undefined) {\n      validateString(ext, 'ext');\n    }\n    validateString(path, 'path');\n    let start = 0;\n    let end = -1;\n    let matchedSlash = true;\n    let i;\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n      if (ext === path) {\n        return '';\n      }\n      let extIdx = ext.length - 1;\n      let firstNonSlashEnd = -1;\n      for (i = path.length - 1; i >= 0; --i) {\n        const code = path.charCodeAt(i);\n        if (code === CHAR_FORWARD_SLASH) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            start = i + 1;\n            break;\n          }\n        } else {\n          if (firstNonSlashEnd === -1) {\n            // We saw the first non-path separator, remember this index in case\n            // we need it if the extension ends up not matching\n            matchedSlash = false;\n            firstNonSlashEnd = i + 1;\n          }\n          if (extIdx >= 0) {\n            // Try to match the explicit extension\n            if (code === ext.charCodeAt(extIdx)) {\n              if (--extIdx === -1) {\n                // We matched the extension, so mark this as the end of our path\n                // component\n                end = i;\n              }\n            } else {\n              // Extension does not match, so our result is the entire path\n              // component\n              extIdx = -1;\n              end = firstNonSlashEnd;\n            }\n          }\n        }\n      }\n      if (start === end) {\n        end = firstNonSlashEnd;\n      } else if (end === -1) {\n        end = path.length;\n      }\n      return path.slice(start, end);\n    }\n    for (i = path.length - 1; i >= 0; --i) {\n      if (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          start = i + 1;\n          break;\n        }\n      } else if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component\n        matchedSlash = false;\n        end = i + 1;\n      }\n    }\n    if (end === -1) {\n      return '';\n    }\n    return path.slice(start, end);\n  },\n  extname(path) {\n    validateString(path, 'path');\n    let startDot = -1;\n    let startPart = 0;\n    let end = -1;\n    let matchedSlash = true;\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    let preDotState = 0;\n    for (let i = path.length - 1; i >= 0; --i) {\n      const code = path.charCodeAt(i);\n      if (code === CHAR_FORWARD_SLASH) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === CHAR_DOT) {\n        // If this is our first dot, mark it as the start of our extension\n        if (startDot === -1) {\n          startDot = i;\n        } else if (preDotState !== 1) {\n          preDotState = 1;\n        }\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n    if (startDot === -1 || end === -1 ||\n    // We saw a non-dot character immediately before the dot\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly '..'\n    preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      return '';\n    }\n    return path.slice(startDot, end);\n  },\n  format: _format.bind(null, '/'),\n  parse(path) {\n    validateString(path, 'path');\n    const ret = {\n      root: '',\n      dir: '',\n      base: '',\n      ext: '',\n      name: ''\n    };\n    if (path.length === 0) {\n      return ret;\n    }\n    const isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n    let start;\n    if (isAbsolute) {\n      ret.root = '/';\n      start = 1;\n    } else {\n      start = 0;\n    }\n    let startDot = -1;\n    let startPart = 0;\n    let end = -1;\n    let matchedSlash = true;\n    let i = path.length - 1;\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    let preDotState = 0;\n    // Get non-dir info\n    for (; i >= start; --i) {\n      const code = path.charCodeAt(i);\n      if (code === CHAR_FORWARD_SLASH) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === CHAR_DOT) {\n        // If this is our first dot, mark it as the start of our extension\n        if (startDot === -1) {\n          startDot = i;\n        } else if (preDotState !== 1) {\n          preDotState = 1;\n        }\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n    if (end !== -1) {\n      const start = startPart === 0 && isAbsolute ? 1 : startPart;\n      if (startDot === -1 ||\n      // We saw a non-dot character immediately before the dot\n      preDotState === 0 ||\n      // The (right-most) trimmed path component is exactly '..'\n      preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n        ret.base = ret.name = path.slice(start, end);\n      } else {\n        ret.name = path.slice(start, startDot);\n        ret.base = path.slice(start, end);\n        ret.ext = path.slice(startDot, end);\n      }\n    }\n    if (startPart > 0) {\n      ret.dir = path.slice(0, startPart - 1);\n    } else if (isAbsolute) {\n      ret.dir = '/';\n    }\n    return ret;\n  },\n  sep: '/',\n  delimiter: ':',\n  win32: null,\n  posix: null\n};\nposix.win32 = win32.win32 = win32;\nposix.posix = win32.posix = posix;\nexport const normalize = process.platform === 'win32' ? win32.normalize : posix.normalize;\nexport const resolve = process.platform === 'win32' ? win32.resolve : posix.resolve;\nexport const relative = process.platform === 'win32' ? win32.relative : posix.relative;\nexport const dirname = process.platform === 'win32' ? win32.dirname : posix.dirname;\nexport const basename = process.platform === 'win32' ? win32.basename : posix.basename;\nexport const extname = process.platform === 'win32' ? win32.extname : posix.extname;\nexport const sep = process.platform === 'win32' ? win32.sep : posix.sep;","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as paths from './path.js';\nimport { isWindows } from './platform.js';\nconst _schemePattern = /^\\w[\\w\\d+.-]*$/;\nconst _singleSlashStart = /^\\//;\nconst _doubleSlashStart = /^\\/\\//;\nfunction _validateUri(ret, _strict) {\n  // scheme, must be set\n  if (!ret.scheme && _strict) {\n    throw new Error(\"[UriError]: Scheme is missing: {scheme: \\\"\\\", authority: \\\"\".concat(ret.authority, \"\\\", path: \\\"\").concat(ret.path, \"\\\", query: \\\"\").concat(ret.query, \"\\\", fragment: \\\"\").concat(ret.fragment, \"\\\"}\"));\n  }\n  // scheme, https://tools.ietf.org/html/rfc3986#section-3.1\n  // ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\n  if (ret.scheme && !_schemePattern.test(ret.scheme)) {\n    throw new Error('[UriError]: Scheme contains illegal characters.');\n  }\n  // path, http://tools.ietf.org/html/rfc3986#section-3.3\n  // If a URI contains an authority component, then the path component\n  // must either be empty or begin with a slash (\"/\") character.  If a URI\n  // does not contain an authority component, then the path cannot begin\n  // with two slash characters (\"//\").\n  if (ret.path) {\n    if (ret.authority) {\n      if (!_singleSlashStart.test(ret.path)) {\n        throw new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character');\n      }\n    } else {\n      if (_doubleSlashStart.test(ret.path)) {\n        throw new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")');\n      }\n    }\n  }\n}\n// for a while we allowed uris *without* schemes and this is the migration\n// for them, e.g. an uri without scheme and without strict-mode warns and falls\n// back to the file-scheme. that should cause the least carnage and still be a\n// clear warning\nfunction _schemeFix(scheme, _strict) {\n  if (!scheme && !_strict) {\n    return 'file';\n  }\n  return scheme;\n}\n// implements a bit of https://tools.ietf.org/html/rfc3986#section-5\nfunction _referenceResolution(scheme, path) {\n  // the slash-character is our 'default base' as we don't\n  // support constructing URIs relative to other URIs. This\n  // also means that we alter and potentially break paths.\n  // see https://tools.ietf.org/html/rfc3986#section-5.1.4\n  switch (scheme) {\n    case 'https':\n    case 'http':\n    case 'file':\n      if (!path) {\n        path = _slash;\n      } else if (path[0] !== _slash) {\n        path = _slash + path;\n      }\n      break;\n  }\n  return path;\n}\nconst _empty = '';\nconst _slash = '/';\nconst _regexp = /^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\n/**\n * Uniform Resource Identifier (URI) http://tools.ietf.org/html/rfc3986.\n * This class is a simple parser which creates the basic component parts\n * (http://tools.ietf.org/html/rfc3986#section-3) with minimal validation\n * and encoding.\n *\n * ```txt\n *       foo://example.com:8042/over/there?name=ferret#nose\n *       \\_/   \\______________/\\_________/ \\_________/ \\__/\n *        |           |            |            |        |\n *     scheme     authority       path        query   fragment\n *        |   _____________________|__\n *       / \\ /                        \\\n *       urn:example:animal:ferret:nose\n * ```\n */\nexport class URI {\n  /**\n   * @internal\n   */\n  constructor(schemeOrData, authority, path, query, fragment) {\n    let _strict = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;\n    if (typeof schemeOrData === 'object') {\n      this.scheme = schemeOrData.scheme || _empty;\n      this.authority = schemeOrData.authority || _empty;\n      this.path = schemeOrData.path || _empty;\n      this.query = schemeOrData.query || _empty;\n      this.fragment = schemeOrData.fragment || _empty;\n      // no validation because it's this URI\n      // that creates uri components.\n      // _validateUri(this);\n    } else {\n      this.scheme = _schemeFix(schemeOrData, _strict);\n      this.authority = authority || _empty;\n      this.path = _referenceResolution(this.scheme, path || _empty);\n      this.query = query || _empty;\n      this.fragment = fragment || _empty;\n      _validateUri(this, _strict);\n    }\n  }\n  static isUri(thing) {\n    if (thing instanceof URI) {\n      return true;\n    }\n    if (!thing) {\n      return false;\n    }\n    return typeof thing.authority === 'string' && typeof thing.fragment === 'string' && typeof thing.path === 'string' && typeof thing.query === 'string' && typeof thing.scheme === 'string' && typeof thing.fsPath === 'string' && typeof thing.with === 'function' && typeof thing.toString === 'function';\n  }\n  // ---- filesystem path -----------------------\n  /**\n   * Returns a string representing the corresponding file system path of this URI.\n   * Will handle UNC paths, normalizes windows drive letters to lower-case, and uses the\n   * platform specific path separator.\n   *\n   * * Will *not* validate the path for invalid characters and semantics.\n   * * Will *not* look at the scheme of this URI.\n   * * The result shall *not* be used for display purposes but for accessing a file on disk.\n   *\n   *\n   * The *difference* to `URI#path` is the use of the platform specific separator and the handling\n   * of UNC paths. See the below sample of a file-uri with an authority (UNC path).\n   *\n   * ```ts\n      const u = URI.parse('file://server/c$/folder/file.txt')\n      u.authority === 'server'\n      u.path === '/shares/c$/file.txt'\n      u.fsPath === '\\\\server\\c$\\folder\\file.txt'\n  ```\n   *\n   * Using `URI#path` to read a file (using fs-apis) would not be enough because parts of the path,\n   * namely the server name, would be missing. Therefore `URI#fsPath` exists - it's sugar to ease working\n   * with URIs that represent files on disk (`file` scheme).\n   */\n  get fsPath() {\n    // if (this.scheme !== 'file') {\n    // \tconsole.warn(`[UriError] calling fsPath with scheme ${this.scheme}`);\n    // }\n    return uriToFsPath(this, false);\n  }\n  // ---- modify to new -------------------------\n  with(change) {\n    if (!change) {\n      return this;\n    }\n    let {\n      scheme,\n      authority,\n      path,\n      query,\n      fragment\n    } = change;\n    if (scheme === undefined) {\n      scheme = this.scheme;\n    } else if (scheme === null) {\n      scheme = _empty;\n    }\n    if (authority === undefined) {\n      authority = this.authority;\n    } else if (authority === null) {\n      authority = _empty;\n    }\n    if (path === undefined) {\n      path = this.path;\n    } else if (path === null) {\n      path = _empty;\n    }\n    if (query === undefined) {\n      query = this.query;\n    } else if (query === null) {\n      query = _empty;\n    }\n    if (fragment === undefined) {\n      fragment = this.fragment;\n    } else if (fragment === null) {\n      fragment = _empty;\n    }\n    if (scheme === this.scheme && authority === this.authority && path === this.path && query === this.query && fragment === this.fragment) {\n      return this;\n    }\n    return new Uri(scheme, authority, path, query, fragment);\n  }\n  // ---- parse & validate ------------------------\n  /**\n   * Creates a new URI from a string, e.g. `http://www.msft.com/some/path`,\n   * `file:///usr/home`, or `scheme:with/path`.\n   *\n   * @param value A string which represents an URI (see `URI#toString`).\n   */\n  static parse(value) {\n    let _strict = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    const match = _regexp.exec(value);\n    if (!match) {\n      return new Uri(_empty, _empty, _empty, _empty, _empty);\n    }\n    return new Uri(match[2] || _empty, percentDecode(match[4] || _empty), percentDecode(match[5] || _empty), percentDecode(match[7] || _empty), percentDecode(match[9] || _empty), _strict);\n  }\n  /**\n   * Creates a new URI from a file system path, e.g. `c:\\my\\files`,\n   * `/usr/home`, or `\\\\server\\share\\some\\path`.\n   *\n   * The *difference* between `URI#parse` and `URI#file` is that the latter treats the argument\n   * as path, not as stringified-uri. E.g. `URI.file(path)` is **not the same as**\n   * `URI.parse('file://' + path)` because the path might contain characters that are\n   * interpreted (# and ?). See the following sample:\n   * ```ts\n  const good = URI.file('/coding/c#/project1');\n  good.scheme === 'file';\n  good.path === '/coding/c#/project1';\n  good.fragment === '';\n  const bad = URI.parse('file://' + '/coding/c#/project1');\n  bad.scheme === 'file';\n  bad.path === '/coding/c'; // path is now broken\n  bad.fragment === '/project1';\n  ```\n   *\n   * @param path A file system path (see `URI#fsPath`)\n   */\n  static file(path) {\n    let authority = _empty;\n    // normalize to fwd-slashes on windows,\n    // on other systems bwd-slashes are valid\n    // filename character, eg /f\\oo/ba\\r.txt\n    if (isWindows) {\n      path = path.replace(/\\\\/g, _slash);\n    }\n    // check for authority as used in UNC shares\n    // or use the path as given\n    if (path[0] === _slash && path[1] === _slash) {\n      const idx = path.indexOf(_slash, 2);\n      if (idx === -1) {\n        authority = path.substring(2);\n        path = _slash;\n      } else {\n        authority = path.substring(2, idx);\n        path = path.substring(idx) || _slash;\n      }\n    }\n    return new Uri('file', authority, path, _empty, _empty);\n  }\n  static from(components) {\n    const result = new Uri(components.scheme, components.authority, components.path, components.query, components.fragment);\n    _validateUri(result, true);\n    return result;\n  }\n  /**\n   * Join a URI path with path fragments and normalizes the resulting path.\n   *\n   * @param uri The input URI.\n   * @param pathFragment The path fragment to add to the URI path.\n   * @returns The resulting URI.\n   */\n  static joinPath(uri) {\n    if (!uri.path) {\n      throw new Error(\"[UriError]: cannot call joinPath on URI without path\");\n    }\n    let newPath;\n    for (var _len = arguments.length, pathFragment = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      pathFragment[_key - 1] = arguments[_key];\n    }\n    if (isWindows && uri.scheme === 'file') {\n      newPath = URI.file(paths.win32.join(uriToFsPath(uri, true), ...pathFragment)).path;\n    } else {\n      newPath = paths.posix.join(uri.path, ...pathFragment);\n    }\n    return uri.with({\n      path: newPath\n    });\n  }\n  // ---- printing/externalize ---------------------------\n  /**\n   * Creates a string representation for this URI. It's guaranteed that calling\n   * `URI.parse` with the result of this function creates an URI which is equal\n   * to this URI.\n   *\n   * * The result shall *not* be used for display purposes but for externalization or transport.\n   * * The result will be encoded using the percentage encoding and encoding happens mostly\n   * ignore the scheme-specific encoding rules.\n   *\n   * @param skipEncoding Do not encode the result, default is `false`\n   */\n  toString() {\n    let skipEncoding = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    return _asFormatted(this, skipEncoding);\n  }\n  toJSON() {\n    return this;\n  }\n  static revive(data) {\n    if (!data) {\n      return data;\n    } else if (data instanceof URI) {\n      return data;\n    } else {\n      const result = new Uri(data);\n      result._formatted = data.external;\n      result._fsPath = data._sep === _pathSepMarker ? data.fsPath : null;\n      return result;\n    }\n  }\n}\nconst _pathSepMarker = isWindows ? 1 : undefined;\n// This class exists so that URI is compatible with vscode.Uri (API).\nclass Uri extends URI {\n  constructor() {\n    super(...arguments);\n    this._formatted = null;\n    this._fsPath = null;\n  }\n  get fsPath() {\n    if (!this._fsPath) {\n      this._fsPath = uriToFsPath(this, false);\n    }\n    return this._fsPath;\n  }\n  toString() {\n    let skipEncoding = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    if (!skipEncoding) {\n      if (!this._formatted) {\n        this._formatted = _asFormatted(this, false);\n      }\n      return this._formatted;\n    } else {\n      // we don't cache that\n      return _asFormatted(this, true);\n    }\n  }\n  toJSON() {\n    const res = {\n      $mid: 1 /* Uri */\n    };\n    // cached state\n    if (this._fsPath) {\n      res.fsPath = this._fsPath;\n      res._sep = _pathSepMarker;\n    }\n    if (this._formatted) {\n      res.external = this._formatted;\n    }\n    // uri components\n    if (this.path) {\n      res.path = this.path;\n    }\n    if (this.scheme) {\n      res.scheme = this.scheme;\n    }\n    if (this.authority) {\n      res.authority = this.authority;\n    }\n    if (this.query) {\n      res.query = this.query;\n    }\n    if (this.fragment) {\n      res.fragment = this.fragment;\n    }\n    return res;\n  }\n}\n// reserved characters: https://tools.ietf.org/html/rfc3986#section-2.2\nconst encodeTable = {\n  [58 /* Colon */]: '%3A',\n  [47 /* Slash */]: '%2F',\n  [63 /* QuestionMark */]: '%3F',\n  [35 /* Hash */]: '%23',\n  [91 /* OpenSquareBracket */]: '%5B',\n  [93 /* CloseSquareBracket */]: '%5D',\n  [64 /* AtSign */]: '%40',\n  [33 /* ExclamationMark */]: '%21',\n  [36 /* DollarSign */]: '%24',\n  [38 /* Ampersand */]: '%26',\n  [39 /* SingleQuote */]: '%27',\n  [40 /* OpenParen */]: '%28',\n  [41 /* CloseParen */]: '%29',\n  [42 /* Asterisk */]: '%2A',\n  [43 /* Plus */]: '%2B',\n  [44 /* Comma */]: '%2C',\n  [59 /* Semicolon */]: '%3B',\n  [61 /* Equals */]: '%3D',\n  [32 /* Space */]: '%20'\n};\nfunction encodeURIComponentFast(uriComponent, allowSlash) {\n  let res = undefined;\n  let nativeEncodePos = -1;\n  for (let pos = 0; pos < uriComponent.length; pos++) {\n    const code = uriComponent.charCodeAt(pos);\n    // unreserved characters: https://tools.ietf.org/html/rfc3986#section-2.3\n    if (code >= 97 /* a */ && code <= 122 /* z */ || code >= 65 /* A */ && code <= 90 /* Z */ || code >= 48 /* Digit0 */ && code <= 57 /* Digit9 */ || code === 45 /* Dash */ || code === 46 /* Period */ || code === 95 /* Underline */ || code === 126 /* Tilde */ || allowSlash && code === 47 /* Slash */) {\n      // check if we are delaying native encode\n      if (nativeEncodePos !== -1) {\n        res += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n        nativeEncodePos = -1;\n      }\n      // check if we write into a new string (by default we try to return the param)\n      if (res !== undefined) {\n        res += uriComponent.charAt(pos);\n      }\n    } else {\n      // encoding needed, we need to allocate a new string\n      if (res === undefined) {\n        res = uriComponent.substr(0, pos);\n      }\n      // check with default table first\n      const escaped = encodeTable[code];\n      if (escaped !== undefined) {\n        // check if we are delaying native encode\n        if (nativeEncodePos !== -1) {\n          res += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n          nativeEncodePos = -1;\n        }\n        // append escaped variant to result\n        res += escaped;\n      } else if (nativeEncodePos === -1) {\n        // use native encode only when needed\n        nativeEncodePos = pos;\n      }\n    }\n  }\n  if (nativeEncodePos !== -1) {\n    res += encodeURIComponent(uriComponent.substring(nativeEncodePos));\n  }\n  return res !== undefined ? res : uriComponent;\n}\nfunction encodeURIComponentMinimal(path) {\n  let res = undefined;\n  for (let pos = 0; pos < path.length; pos++) {\n    const code = path.charCodeAt(pos);\n    if (code === 35 /* Hash */ || code === 63 /* QuestionMark */) {\n      if (res === undefined) {\n        res = path.substr(0, pos);\n      }\n      res += encodeTable[code];\n    } else {\n      if (res !== undefined) {\n        res += path[pos];\n      }\n    }\n  }\n  return res !== undefined ? res : path;\n}\n/**\n * Compute `fsPath` for the given uri\n */\nexport function uriToFsPath(uri, keepDriveLetterCasing) {\n  let value;\n  if (uri.authority && uri.path.length > 1 && uri.scheme === 'file') {\n    // unc path: file://shares/c$/far/boo\n    value = \"//\".concat(uri.authority).concat(uri.path);\n  } else if (uri.path.charCodeAt(0) === 47 /* Slash */ && (uri.path.charCodeAt(1) >= 65 /* A */ && uri.path.charCodeAt(1) <= 90 /* Z */ || uri.path.charCodeAt(1) >= 97 /* a */ && uri.path.charCodeAt(1) <= 122 /* z */) && uri.path.charCodeAt(2) === 58 /* Colon */) {\n    if (!keepDriveLetterCasing) {\n      // windows drive letter: file:///c:/far/boo\n      value = uri.path[1].toLowerCase() + uri.path.substr(2);\n    } else {\n      value = uri.path.substr(1);\n    }\n  } else {\n    // other path\n    value = uri.path;\n  }\n  if (isWindows) {\n    value = value.replace(/\\//g, '\\\\');\n  }\n  return value;\n}\n/**\n * Create the external version of a uri\n */\nfunction _asFormatted(uri, skipEncoding) {\n  const encoder = !skipEncoding ? encodeURIComponentFast : encodeURIComponentMinimal;\n  let res = '';\n  let {\n    scheme,\n    authority,\n    path,\n    query,\n    fragment\n  } = uri;\n  if (scheme) {\n    res += scheme;\n    res += ':';\n  }\n  if (authority || scheme === 'file') {\n    res += _slash;\n    res += _slash;\n  }\n  if (authority) {\n    let idx = authority.indexOf('@');\n    if (idx !== -1) {\n      // <user>@<auth>\n      const userinfo = authority.substr(0, idx);\n      authority = authority.substr(idx + 1);\n      idx = userinfo.indexOf(':');\n      if (idx === -1) {\n        res += encoder(userinfo, false);\n      } else {\n        // <user>:<pass>@<auth>\n        res += encoder(userinfo.substr(0, idx), false);\n        res += ':';\n        res += encoder(userinfo.substr(idx + 1), false);\n      }\n      res += '@';\n    }\n    authority = authority.toLowerCase();\n    idx = authority.indexOf(':');\n    if (idx === -1) {\n      res += encoder(authority, false);\n    } else {\n      // <auth>:<port>\n      res += encoder(authority.substr(0, idx), false);\n      res += authority.substr(idx);\n    }\n  }\n  if (path) {\n    // lower-case windows drive letters in /C:/fff or C:/fff\n    if (path.length >= 3 && path.charCodeAt(0) === 47 /* Slash */ && path.charCodeAt(2) === 58 /* Colon */) {\n      const code = path.charCodeAt(1);\n      if (code >= 65 /* A */ && code <= 90 /* Z */) {\n        path = \"/\".concat(String.fromCharCode(code + 32), \":\").concat(path.substr(3)); // \"/c:\".length === 3\n      }\n    } else if (path.length >= 2 && path.charCodeAt(1) === 58 /* Colon */) {\n      const code = path.charCodeAt(0);\n      if (code >= 65 /* A */ && code <= 90 /* Z */) {\n        path = \"\".concat(String.fromCharCode(code + 32), \":\").concat(path.substr(2)); // \"/c:\".length === 3\n      }\n    }\n    // encode the rest of the path\n    res += encoder(path, true);\n  }\n  if (query) {\n    res += '?';\n    res += encoder(query, false);\n  }\n  if (fragment) {\n    res += '#';\n    res += !skipEncoding ? encodeURIComponentFast(fragment, false) : fragment;\n  }\n  return res;\n}\n// --- decode\nfunction decodeURIComponentGraceful(str) {\n  try {\n    return decodeURIComponent(str);\n  } catch (_a) {\n    if (str.length > 3) {\n      return str.substr(0, 3) + decodeURIComponentGraceful(str.substr(3));\n    } else {\n      return str;\n    }\n  }\n}\nconst _rEncodedAsHex = /(%[0-9A-Za-z][0-9A-Za-z])+/g;\nfunction percentDecode(str) {\n  if (!str.match(_rEncodedAsHex)) {\n    return str;\n  }\n  return str.replace(_rEncodedAsHex, match => decodeURIComponentGraceful(match));\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n * A position in the editor.\n */\nexport class Position {\n  constructor(lineNumber, column) {\n    this.lineNumber = lineNumber;\n    this.column = column;\n  }\n  /**\n   * Create a new position from this position.\n   *\n   * @param newLineNumber new line number\n   * @param newColumn new column\n   */\n  with() {\n    let newLineNumber = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.lineNumber;\n    let newColumn = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.column;\n    if (newLineNumber === this.lineNumber && newColumn === this.column) {\n      return this;\n    } else {\n      return new Position(newLineNumber, newColumn);\n    }\n  }\n  /**\n   * Derive a new position from this position.\n   *\n   * @param deltaLineNumber line number delta\n   * @param deltaColumn column delta\n   */\n  delta() {\n    let deltaLineNumber = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    let deltaColumn = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    return this.with(this.lineNumber + deltaLineNumber, this.column + deltaColumn);\n  }\n  /**\n   * Test if this position equals other position\n   */\n  equals(other) {\n    return Position.equals(this, other);\n  }\n  /**\n   * Test if position `a` equals position `b`\n   */\n  static equals(a, b) {\n    if (!a && !b) {\n      return true;\n    }\n    return !!a && !!b && a.lineNumber === b.lineNumber && a.column === b.column;\n  }\n  /**\n   * Test if this position is before other position.\n   * If the two positions are equal, the result will be false.\n   */\n  isBefore(other) {\n    return Position.isBefore(this, other);\n  }\n  /**\n   * Test if position `a` is before position `b`.\n   * If the two positions are equal, the result will be false.\n   */\n  static isBefore(a, b) {\n    if (a.lineNumber < b.lineNumber) {\n      return true;\n    }\n    if (b.lineNumber < a.lineNumber) {\n      return false;\n    }\n    return a.column < b.column;\n  }\n  /**\n   * Test if this position is before other position.\n   * If the two positions are equal, the result will be true.\n   */\n  isBeforeOrEqual(other) {\n    return Position.isBeforeOrEqual(this, other);\n  }\n  /**\n   * Test if position `a` is before position `b`.\n   * If the two positions are equal, the result will be true.\n   */\n  static isBeforeOrEqual(a, b) {\n    if (a.lineNumber < b.lineNumber) {\n      return true;\n    }\n    if (b.lineNumber < a.lineNumber) {\n      return false;\n    }\n    return a.column <= b.column;\n  }\n  /**\n   * A function that compares positions, useful for sorting\n   */\n  static compare(a, b) {\n    let aLineNumber = a.lineNumber | 0;\n    let bLineNumber = b.lineNumber | 0;\n    if (aLineNumber === bLineNumber) {\n      let aColumn = a.column | 0;\n      let bColumn = b.column | 0;\n      return aColumn - bColumn;\n    }\n    return aLineNumber - bLineNumber;\n  }\n  /**\n   * Clone this position.\n   */\n  clone() {\n    return new Position(this.lineNumber, this.column);\n  }\n  /**\n   * Convert to a human-readable representation.\n   */\n  toString() {\n    return '(' + this.lineNumber + ',' + this.column + ')';\n  }\n  // ---\n  /**\n   * Create a `Position` from an `IPosition`.\n   */\n  static lift(pos) {\n    return new Position(pos.lineNumber, pos.column);\n  }\n  /**\n   * Test if `obj` is an `IPosition`.\n   */\n  static isIPosition(obj) {\n    return obj && typeof obj.lineNumber === 'number' && typeof obj.column === 'number';\n  }\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Position } from './position.js';\n/**\n * A range in the editor. (startLineNumber,startColumn) is <= (endLineNumber,endColumn)\n */\nexport class Range {\n  constructor(startLineNumber, startColumn, endLineNumber, endColumn) {\n    if (startLineNumber > endLineNumber || startLineNumber === endLineNumber && startColumn > endColumn) {\n      this.startLineNumber = endLineNumber;\n      this.startColumn = endColumn;\n      this.endLineNumber = startLineNumber;\n      this.endColumn = startColumn;\n    } else {\n      this.startLineNumber = startLineNumber;\n      this.startColumn = startColumn;\n      this.endLineNumber = endLineNumber;\n      this.endColumn = endColumn;\n    }\n  }\n  /**\n   * Test if this range is empty.\n   */\n  isEmpty() {\n    return Range.isEmpty(this);\n  }\n  /**\n   * Test if `range` is empty.\n   */\n  static isEmpty(range) {\n    return range.startLineNumber === range.endLineNumber && range.startColumn === range.endColumn;\n  }\n  /**\n   * Test if position is in this range. If the position is at the edges, will return true.\n   */\n  containsPosition(position) {\n    return Range.containsPosition(this, position);\n  }\n  /**\n   * Test if `position` is in `range`. If the position is at the edges, will return true.\n   */\n  static containsPosition(range, position) {\n    if (position.lineNumber < range.startLineNumber || position.lineNumber > range.endLineNumber) {\n      return false;\n    }\n    if (position.lineNumber === range.startLineNumber && position.column < range.startColumn) {\n      return false;\n    }\n    if (position.lineNumber === range.endLineNumber && position.column > range.endColumn) {\n      return false;\n    }\n    return true;\n  }\n  /**\n   * Test if range is in this range. If the range is equal to this range, will return true.\n   */\n  containsRange(range) {\n    return Range.containsRange(this, range);\n  }\n  /**\n   * Test if `otherRange` is in `range`. If the ranges are equal, will return true.\n   */\n  static containsRange(range, otherRange) {\n    if (otherRange.startLineNumber < range.startLineNumber || otherRange.endLineNumber < range.startLineNumber) {\n      return false;\n    }\n    if (otherRange.startLineNumber > range.endLineNumber || otherRange.endLineNumber > range.endLineNumber) {\n      return false;\n    }\n    if (otherRange.startLineNumber === range.startLineNumber && otherRange.startColumn < range.startColumn) {\n      return false;\n    }\n    if (otherRange.endLineNumber === range.endLineNumber && otherRange.endColumn > range.endColumn) {\n      return false;\n    }\n    return true;\n  }\n  /**\n   * Test if `range` is strictly in this range. `range` must start after and end before this range for the result to be true.\n   */\n  strictContainsRange(range) {\n    return Range.strictContainsRange(this, range);\n  }\n  /**\n   * Test if `otherRange` is strictly in `range` (must start after, and end before). If the ranges are equal, will return false.\n   */\n  static strictContainsRange(range, otherRange) {\n    if (otherRange.startLineNumber < range.startLineNumber || otherRange.endLineNumber < range.startLineNumber) {\n      return false;\n    }\n    if (otherRange.startLineNumber > range.endLineNumber || otherRange.endLineNumber > range.endLineNumber) {\n      return false;\n    }\n    if (otherRange.startLineNumber === range.startLineNumber && otherRange.startColumn <= range.startColumn) {\n      return false;\n    }\n    if (otherRange.endLineNumber === range.endLineNumber && otherRange.endColumn >= range.endColumn) {\n      return false;\n    }\n    return true;\n  }\n  /**\n   * A reunion of the two ranges.\n   * The smallest position will be used as the start point, and the largest one as the end point.\n   */\n  plusRange(range) {\n    return Range.plusRange(this, range);\n  }\n  /**\n   * A reunion of the two ranges.\n   * The smallest position will be used as the start point, and the largest one as the end point.\n   */\n  static plusRange(a, b) {\n    let startLineNumber;\n    let startColumn;\n    let endLineNumber;\n    let endColumn;\n    if (b.startLineNumber < a.startLineNumber) {\n      startLineNumber = b.startLineNumber;\n      startColumn = b.startColumn;\n    } else if (b.startLineNumber === a.startLineNumber) {\n      startLineNumber = b.startLineNumber;\n      startColumn = Math.min(b.startColumn, a.startColumn);\n    } else {\n      startLineNumber = a.startLineNumber;\n      startColumn = a.startColumn;\n    }\n    if (b.endLineNumber > a.endLineNumber) {\n      endLineNumber = b.endLineNumber;\n      endColumn = b.endColumn;\n    } else if (b.endLineNumber === a.endLineNumber) {\n      endLineNumber = b.endLineNumber;\n      endColumn = Math.max(b.endColumn, a.endColumn);\n    } else {\n      endLineNumber = a.endLineNumber;\n      endColumn = a.endColumn;\n    }\n    return new Range(startLineNumber, startColumn, endLineNumber, endColumn);\n  }\n  /**\n   * A intersection of the two ranges.\n   */\n  intersectRanges(range) {\n    return Range.intersectRanges(this, range);\n  }\n  /**\n   * A intersection of the two ranges.\n   */\n  static intersectRanges(a, b) {\n    let resultStartLineNumber = a.startLineNumber;\n    let resultStartColumn = a.startColumn;\n    let resultEndLineNumber = a.endLineNumber;\n    let resultEndColumn = a.endColumn;\n    let otherStartLineNumber = b.startLineNumber;\n    let otherStartColumn = b.startColumn;\n    let otherEndLineNumber = b.endLineNumber;\n    let otherEndColumn = b.endColumn;\n    if (resultStartLineNumber < otherStartLineNumber) {\n      resultStartLineNumber = otherStartLineNumber;\n      resultStartColumn = otherStartColumn;\n    } else if (resultStartLineNumber === otherStartLineNumber) {\n      resultStartColumn = Math.max(resultStartColumn, otherStartColumn);\n    }\n    if (resultEndLineNumber > otherEndLineNumber) {\n      resultEndLineNumber = otherEndLineNumber;\n      resultEndColumn = otherEndColumn;\n    } else if (resultEndLineNumber === otherEndLineNumber) {\n      resultEndColumn = Math.min(resultEndColumn, otherEndColumn);\n    }\n    // Check if selection is now empty\n    if (resultStartLineNumber > resultEndLineNumber) {\n      return null;\n    }\n    if (resultStartLineNumber === resultEndLineNumber && resultStartColumn > resultEndColumn) {\n      return null;\n    }\n    return new Range(resultStartLineNumber, resultStartColumn, resultEndLineNumber, resultEndColumn);\n  }\n  /**\n   * Test if this range equals other.\n   */\n  equalsRange(other) {\n    return Range.equalsRange(this, other);\n  }\n  /**\n   * Test if range `a` equals `b`.\n   */\n  static equalsRange(a, b) {\n    return !!a && !!b && a.startLineNumber === b.startLineNumber && a.startColumn === b.startColumn && a.endLineNumber === b.endLineNumber && a.endColumn === b.endColumn;\n  }\n  /**\n   * Return the end position (which will be after or equal to the start position)\n   */\n  getEndPosition() {\n    return Range.getEndPosition(this);\n  }\n  /**\n   * Return the end position (which will be after or equal to the start position)\n   */\n  static getEndPosition(range) {\n    return new Position(range.endLineNumber, range.endColumn);\n  }\n  /**\n   * Return the start position (which will be before or equal to the end position)\n   */\n  getStartPosition() {\n    return Range.getStartPosition(this);\n  }\n  /**\n   * Return the start position (which will be before or equal to the end position)\n   */\n  static getStartPosition(range) {\n    return new Position(range.startLineNumber, range.startColumn);\n  }\n  /**\n   * Transform to a user presentable string representation.\n   */\n  toString() {\n    return '[' + this.startLineNumber + ',' + this.startColumn + ' -> ' + this.endLineNumber + ',' + this.endColumn + ']';\n  }\n  /**\n   * Create a new range using this range's start position, and using endLineNumber and endColumn as the end position.\n   */\n  setEndPosition(endLineNumber, endColumn) {\n    return new Range(this.startLineNumber, this.startColumn, endLineNumber, endColumn);\n  }\n  /**\n   * Create a new range using this range's end position, and using startLineNumber and startColumn as the start position.\n   */\n  setStartPosition(startLineNumber, startColumn) {\n    return new Range(startLineNumber, startColumn, this.endLineNumber, this.endColumn);\n  }\n  /**\n   * Create a new empty range using this range's start position.\n   */\n  collapseToStart() {\n    return Range.collapseToStart(this);\n  }\n  /**\n   * Create a new empty range using this range's start position.\n   */\n  static collapseToStart(range) {\n    return new Range(range.startLineNumber, range.startColumn, range.startLineNumber, range.startColumn);\n  }\n  // ---\n  static fromPositions(start) {\n    let end = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : start;\n    return new Range(start.lineNumber, start.column, end.lineNumber, end.column);\n  }\n  static lift(range) {\n    if (!range) {\n      return null;\n    }\n    return new Range(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn);\n  }\n  /**\n   * Test if `obj` is an `IRange`.\n   */\n  static isIRange(obj) {\n    return obj && typeof obj.startLineNumber === 'number' && typeof obj.startColumn === 'number' && typeof obj.endLineNumber === 'number' && typeof obj.endColumn === 'number';\n  }\n  /**\n   * Test if the two ranges are touching in any way.\n   */\n  static areIntersectingOrTouching(a, b) {\n    // Check if `a` is before `b`\n    if (a.endLineNumber < b.startLineNumber || a.endLineNumber === b.startLineNumber && a.endColumn < b.startColumn) {\n      return false;\n    }\n    // Check if `b` is before `a`\n    if (b.endLineNumber < a.startLineNumber || b.endLineNumber === a.startLineNumber && b.endColumn < a.startColumn) {\n      return false;\n    }\n    // These ranges must intersect\n    return true;\n  }\n  /**\n   * Test if the two ranges are intersecting. If the ranges are touching it returns true.\n   */\n  static areIntersecting(a, b) {\n    // Check if `a` is before `b`\n    if (a.endLineNumber < b.startLineNumber || a.endLineNumber === b.startLineNumber && a.endColumn <= b.startColumn) {\n      return false;\n    }\n    // Check if `b` is before `a`\n    if (b.endLineNumber < a.startLineNumber || b.endLineNumber === a.startLineNumber && b.endColumn <= a.startColumn) {\n      return false;\n    }\n    // These ranges must intersect\n    return true;\n  }\n  /**\n   * A function that compares ranges, useful for sorting ranges\n   * It will first compare ranges on the startPosition and then on the endPosition\n   */\n  static compareRangesUsingStarts(a, b) {\n    if (a && b) {\n      const aStartLineNumber = a.startLineNumber | 0;\n      const bStartLineNumber = b.startLineNumber | 0;\n      if (aStartLineNumber === bStartLineNumber) {\n        const aStartColumn = a.startColumn | 0;\n        const bStartColumn = b.startColumn | 0;\n        if (aStartColumn === bStartColumn) {\n          const aEndLineNumber = a.endLineNumber | 0;\n          const bEndLineNumber = b.endLineNumber | 0;\n          if (aEndLineNumber === bEndLineNumber) {\n            const aEndColumn = a.endColumn | 0;\n            const bEndColumn = b.endColumn | 0;\n            return aEndColumn - bEndColumn;\n          }\n          return aEndLineNumber - bEndLineNumber;\n        }\n        return aStartColumn - bStartColumn;\n      }\n      return aStartLineNumber - bStartLineNumber;\n    }\n    const aExists = a ? 1 : 0;\n    const bExists = b ? 1 : 0;\n    return aExists - bExists;\n  }\n  /**\n   * A function that compares ranges, useful for sorting ranges\n   * It will first compare ranges on the endPosition and then on the startPosition\n   */\n  static compareRangesUsingEnds(a, b) {\n    if (a.endLineNumber === b.endLineNumber) {\n      if (a.endColumn === b.endColumn) {\n        if (a.startLineNumber === b.startLineNumber) {\n          return a.startColumn - b.startColumn;\n        }\n        return a.startLineNumber - b.startLineNumber;\n      }\n      return a.endColumn - b.endColumn;\n    }\n    return a.endLineNumber - b.endLineNumber;\n  }\n  /**\n   * Test if the range spans multiple lines.\n   */\n  static spansMultipleLines(range) {\n    return range.endLineNumber > range.startLineNumber;\n  }\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { LcsDiff } from '../../../base/common/diff/diff.js';\nimport * as strings from '../../../base/common/strings.js';\nconst MINIMUM_MATCHING_CHARACTER_LENGTH = 3;\nfunction computeDiff(originalSequence, modifiedSequence, continueProcessingPredicate, pretty) {\n  const diffAlgo = new LcsDiff(originalSequence, modifiedSequence, continueProcessingPredicate);\n  return diffAlgo.ComputeDiff(pretty);\n}\nclass LineSequence {\n  constructor(lines) {\n    const startColumns = [];\n    const endColumns = [];\n    for (let i = 0, length = lines.length; i < length; i++) {\n      startColumns[i] = getFirstNonBlankColumn(lines[i], 1);\n      endColumns[i] = getLastNonBlankColumn(lines[i], 1);\n    }\n    this.lines = lines;\n    this._startColumns = startColumns;\n    this._endColumns = endColumns;\n  }\n  getElements() {\n    const elements = [];\n    for (let i = 0, len = this.lines.length; i < len; i++) {\n      elements[i] = this.lines[i].substring(this._startColumns[i] - 1, this._endColumns[i] - 1);\n    }\n    return elements;\n  }\n  getStrictElement(index) {\n    return this.lines[index];\n  }\n  getStartLineNumber(i) {\n    return i + 1;\n  }\n  getEndLineNumber(i) {\n    return i + 1;\n  }\n  createCharSequence(shouldIgnoreTrimWhitespace, startIndex, endIndex) {\n    const charCodes = [];\n    const lineNumbers = [];\n    const columns = [];\n    let len = 0;\n    for (let index = startIndex; index <= endIndex; index++) {\n      const lineContent = this.lines[index];\n      const startColumn = shouldIgnoreTrimWhitespace ? this._startColumns[index] : 1;\n      const endColumn = shouldIgnoreTrimWhitespace ? this._endColumns[index] : lineContent.length + 1;\n      for (let col = startColumn; col < endColumn; col++) {\n        charCodes[len] = lineContent.charCodeAt(col - 1);\n        lineNumbers[len] = index + 1;\n        columns[len] = col;\n        len++;\n      }\n    }\n    return new CharSequence(charCodes, lineNumbers, columns);\n  }\n}\nclass CharSequence {\n  constructor(charCodes, lineNumbers, columns) {\n    this._charCodes = charCodes;\n    this._lineNumbers = lineNumbers;\n    this._columns = columns;\n  }\n  getElements() {\n    return this._charCodes;\n  }\n  getStartLineNumber(i) {\n    return this._lineNumbers[i];\n  }\n  getStartColumn(i) {\n    return this._columns[i];\n  }\n  getEndLineNumber(i) {\n    return this._lineNumbers[i];\n  }\n  getEndColumn(i) {\n    return this._columns[i] + 1;\n  }\n}\nclass CharChange {\n  constructor(originalStartLineNumber, originalStartColumn, originalEndLineNumber, originalEndColumn, modifiedStartLineNumber, modifiedStartColumn, modifiedEndLineNumber, modifiedEndColumn) {\n    this.originalStartLineNumber = originalStartLineNumber;\n    this.originalStartColumn = originalStartColumn;\n    this.originalEndLineNumber = originalEndLineNumber;\n    this.originalEndColumn = originalEndColumn;\n    this.modifiedStartLineNumber = modifiedStartLineNumber;\n    this.modifiedStartColumn = modifiedStartColumn;\n    this.modifiedEndLineNumber = modifiedEndLineNumber;\n    this.modifiedEndColumn = modifiedEndColumn;\n  }\n  static createFromDiffChange(diffChange, originalCharSequence, modifiedCharSequence) {\n    let originalStartLineNumber;\n    let originalStartColumn;\n    let originalEndLineNumber;\n    let originalEndColumn;\n    let modifiedStartLineNumber;\n    let modifiedStartColumn;\n    let modifiedEndLineNumber;\n    let modifiedEndColumn;\n    if (diffChange.originalLength === 0) {\n      originalStartLineNumber = 0;\n      originalStartColumn = 0;\n      originalEndLineNumber = 0;\n      originalEndColumn = 0;\n    } else {\n      originalStartLineNumber = originalCharSequence.getStartLineNumber(diffChange.originalStart);\n      originalStartColumn = originalCharSequence.getStartColumn(diffChange.originalStart);\n      originalEndLineNumber = originalCharSequence.getEndLineNumber(diffChange.originalStart + diffChange.originalLength - 1);\n      originalEndColumn = originalCharSequence.getEndColumn(diffChange.originalStart + diffChange.originalLength - 1);\n    }\n    if (diffChange.modifiedLength === 0) {\n      modifiedStartLineNumber = 0;\n      modifiedStartColumn = 0;\n      modifiedEndLineNumber = 0;\n      modifiedEndColumn = 0;\n    } else {\n      modifiedStartLineNumber = modifiedCharSequence.getStartLineNumber(diffChange.modifiedStart);\n      modifiedStartColumn = modifiedCharSequence.getStartColumn(diffChange.modifiedStart);\n      modifiedEndLineNumber = modifiedCharSequence.getEndLineNumber(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n      modifiedEndColumn = modifiedCharSequence.getEndColumn(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n    }\n    return new CharChange(originalStartLineNumber, originalStartColumn, originalEndLineNumber, originalEndColumn, modifiedStartLineNumber, modifiedStartColumn, modifiedEndLineNumber, modifiedEndColumn);\n  }\n}\nfunction postProcessCharChanges(rawChanges) {\n  if (rawChanges.length <= 1) {\n    return rawChanges;\n  }\n  const result = [rawChanges[0]];\n  let prevChange = result[0];\n  for (let i = 1, len = rawChanges.length; i < len; i++) {\n    const currChange = rawChanges[i];\n    const originalMatchingLength = currChange.originalStart - (prevChange.originalStart + prevChange.originalLength);\n    const modifiedMatchingLength = currChange.modifiedStart - (prevChange.modifiedStart + prevChange.modifiedLength);\n    // Both of the above should be equal, but the continueProcessingPredicate may prevent this from being true\n    const matchingLength = Math.min(originalMatchingLength, modifiedMatchingLength);\n    if (matchingLength < MINIMUM_MATCHING_CHARACTER_LENGTH) {\n      // Merge the current change into the previous one\n      prevChange.originalLength = currChange.originalStart + currChange.originalLength - prevChange.originalStart;\n      prevChange.modifiedLength = currChange.modifiedStart + currChange.modifiedLength - prevChange.modifiedStart;\n    } else {\n      // Add the current change\n      result.push(currChange);\n      prevChange = currChange;\n    }\n  }\n  return result;\n}\nclass LineChange {\n  constructor(originalStartLineNumber, originalEndLineNumber, modifiedStartLineNumber, modifiedEndLineNumber, charChanges) {\n    this.originalStartLineNumber = originalStartLineNumber;\n    this.originalEndLineNumber = originalEndLineNumber;\n    this.modifiedStartLineNumber = modifiedStartLineNumber;\n    this.modifiedEndLineNumber = modifiedEndLineNumber;\n    this.charChanges = charChanges;\n  }\n  static createFromDiffResult(shouldIgnoreTrimWhitespace, diffChange, originalLineSequence, modifiedLineSequence, continueCharDiff, shouldComputeCharChanges, shouldPostProcessCharChanges) {\n    let originalStartLineNumber;\n    let originalEndLineNumber;\n    let modifiedStartLineNumber;\n    let modifiedEndLineNumber;\n    let charChanges = undefined;\n    if (diffChange.originalLength === 0) {\n      originalStartLineNumber = originalLineSequence.getStartLineNumber(diffChange.originalStart) - 1;\n      originalEndLineNumber = 0;\n    } else {\n      originalStartLineNumber = originalLineSequence.getStartLineNumber(diffChange.originalStart);\n      originalEndLineNumber = originalLineSequence.getEndLineNumber(diffChange.originalStart + diffChange.originalLength - 1);\n    }\n    if (diffChange.modifiedLength === 0) {\n      modifiedStartLineNumber = modifiedLineSequence.getStartLineNumber(diffChange.modifiedStart) - 1;\n      modifiedEndLineNumber = 0;\n    } else {\n      modifiedStartLineNumber = modifiedLineSequence.getStartLineNumber(diffChange.modifiedStart);\n      modifiedEndLineNumber = modifiedLineSequence.getEndLineNumber(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n    }\n    if (shouldComputeCharChanges && diffChange.originalLength > 0 && diffChange.originalLength < 20 && diffChange.modifiedLength > 0 && diffChange.modifiedLength < 20 && continueCharDiff()) {\n      // Compute character changes for diff chunks of at most 20 lines...\n      const originalCharSequence = originalLineSequence.createCharSequence(shouldIgnoreTrimWhitespace, diffChange.originalStart, diffChange.originalStart + diffChange.originalLength - 1);\n      const modifiedCharSequence = modifiedLineSequence.createCharSequence(shouldIgnoreTrimWhitespace, diffChange.modifiedStart, diffChange.modifiedStart + diffChange.modifiedLength - 1);\n      let rawChanges = computeDiff(originalCharSequence, modifiedCharSequence, continueCharDiff, true).changes;\n      if (shouldPostProcessCharChanges) {\n        rawChanges = postProcessCharChanges(rawChanges);\n      }\n      charChanges = [];\n      for (let i = 0, length = rawChanges.length; i < length; i++) {\n        charChanges.push(CharChange.createFromDiffChange(rawChanges[i], originalCharSequence, modifiedCharSequence));\n      }\n    }\n    return new LineChange(originalStartLineNumber, originalEndLineNumber, modifiedStartLineNumber, modifiedEndLineNumber, charChanges);\n  }\n}\nexport class DiffComputer {\n  constructor(originalLines, modifiedLines, opts) {\n    this.shouldComputeCharChanges = opts.shouldComputeCharChanges;\n    this.shouldPostProcessCharChanges = opts.shouldPostProcessCharChanges;\n    this.shouldIgnoreTrimWhitespace = opts.shouldIgnoreTrimWhitespace;\n    this.shouldMakePrettyDiff = opts.shouldMakePrettyDiff;\n    this.originalLines = originalLines;\n    this.modifiedLines = modifiedLines;\n    this.original = new LineSequence(originalLines);\n    this.modified = new LineSequence(modifiedLines);\n    this.continueLineDiff = createContinueProcessingPredicate(opts.maxComputationTime);\n    this.continueCharDiff = createContinueProcessingPredicate(opts.maxComputationTime === 0 ? 0 : Math.min(opts.maxComputationTime, 5000)); // never run after 5s for character changes...\n  }\n  computeDiff() {\n    if (this.original.lines.length === 1 && this.original.lines[0].length === 0) {\n      // empty original => fast path\n      if (this.modified.lines.length === 1 && this.modified.lines[0].length === 0) {\n        return {\n          quitEarly: false,\n          changes: []\n        };\n      }\n      return {\n        quitEarly: false,\n        changes: [{\n          originalStartLineNumber: 1,\n          originalEndLineNumber: 1,\n          modifiedStartLineNumber: 1,\n          modifiedEndLineNumber: this.modified.lines.length,\n          charChanges: [{\n            modifiedEndColumn: 0,\n            modifiedEndLineNumber: 0,\n            modifiedStartColumn: 0,\n            modifiedStartLineNumber: 0,\n            originalEndColumn: 0,\n            originalEndLineNumber: 0,\n            originalStartColumn: 0,\n            originalStartLineNumber: 0\n          }]\n        }]\n      };\n    }\n    if (this.modified.lines.length === 1 && this.modified.lines[0].length === 0) {\n      // empty modified => fast path\n      return {\n        quitEarly: false,\n        changes: [{\n          originalStartLineNumber: 1,\n          originalEndLineNumber: this.original.lines.length,\n          modifiedStartLineNumber: 1,\n          modifiedEndLineNumber: 1,\n          charChanges: [{\n            modifiedEndColumn: 0,\n            modifiedEndLineNumber: 0,\n            modifiedStartColumn: 0,\n            modifiedStartLineNumber: 0,\n            originalEndColumn: 0,\n            originalEndLineNumber: 0,\n            originalStartColumn: 0,\n            originalStartLineNumber: 0\n          }]\n        }]\n      };\n    }\n    const diffResult = computeDiff(this.original, this.modified, this.continueLineDiff, this.shouldMakePrettyDiff);\n    const rawChanges = diffResult.changes;\n    const quitEarly = diffResult.quitEarly;\n    // The diff is always computed with ignoring trim whitespace\n    // This ensures we get the prettiest diff\n    if (this.shouldIgnoreTrimWhitespace) {\n      const lineChanges = [];\n      for (let i = 0, length = rawChanges.length; i < length; i++) {\n        lineChanges.push(LineChange.createFromDiffResult(this.shouldIgnoreTrimWhitespace, rawChanges[i], this.original, this.modified, this.continueCharDiff, this.shouldComputeCharChanges, this.shouldPostProcessCharChanges));\n      }\n      return {\n        quitEarly: quitEarly,\n        changes: lineChanges\n      };\n    }\n    // Need to post-process and introduce changes where the trim whitespace is different\n    // Note that we are looping starting at -1 to also cover the lines before the first change\n    const result = [];\n    let originalLineIndex = 0;\n    let modifiedLineIndex = 0;\n    for (let i = -1 /* !!!! */, len = rawChanges.length; i < len; i++) {\n      const nextChange = i + 1 < len ? rawChanges[i + 1] : null;\n      const originalStop = nextChange ? nextChange.originalStart : this.originalLines.length;\n      const modifiedStop = nextChange ? nextChange.modifiedStart : this.modifiedLines.length;\n      while (originalLineIndex < originalStop && modifiedLineIndex < modifiedStop) {\n        const originalLine = this.originalLines[originalLineIndex];\n        const modifiedLine = this.modifiedLines[modifiedLineIndex];\n        if (originalLine !== modifiedLine) {\n          // These lines differ only in trim whitespace\n          // Check the leading whitespace\n          {\n            let originalStartColumn = getFirstNonBlankColumn(originalLine, 1);\n            let modifiedStartColumn = getFirstNonBlankColumn(modifiedLine, 1);\n            while (originalStartColumn > 1 && modifiedStartColumn > 1) {\n              const originalChar = originalLine.charCodeAt(originalStartColumn - 2);\n              const modifiedChar = modifiedLine.charCodeAt(modifiedStartColumn - 2);\n              if (originalChar !== modifiedChar) {\n                break;\n              }\n              originalStartColumn--;\n              modifiedStartColumn--;\n            }\n            if (originalStartColumn > 1 || modifiedStartColumn > 1) {\n              this._pushTrimWhitespaceCharChange(result, originalLineIndex + 1, 1, originalStartColumn, modifiedLineIndex + 1, 1, modifiedStartColumn);\n            }\n          }\n          // Check the trailing whitespace\n          {\n            let originalEndColumn = getLastNonBlankColumn(originalLine, 1);\n            let modifiedEndColumn = getLastNonBlankColumn(modifiedLine, 1);\n            const originalMaxColumn = originalLine.length + 1;\n            const modifiedMaxColumn = modifiedLine.length + 1;\n            while (originalEndColumn < originalMaxColumn && modifiedEndColumn < modifiedMaxColumn) {\n              const originalChar = originalLine.charCodeAt(originalEndColumn - 1);\n              const modifiedChar = originalLine.charCodeAt(modifiedEndColumn - 1);\n              if (originalChar !== modifiedChar) {\n                break;\n              }\n              originalEndColumn++;\n              modifiedEndColumn++;\n            }\n            if (originalEndColumn < originalMaxColumn || modifiedEndColumn < modifiedMaxColumn) {\n              this._pushTrimWhitespaceCharChange(result, originalLineIndex + 1, originalEndColumn, originalMaxColumn, modifiedLineIndex + 1, modifiedEndColumn, modifiedMaxColumn);\n            }\n          }\n        }\n        originalLineIndex++;\n        modifiedLineIndex++;\n      }\n      if (nextChange) {\n        // Emit the actual change\n        result.push(LineChange.createFromDiffResult(this.shouldIgnoreTrimWhitespace, nextChange, this.original, this.modified, this.continueCharDiff, this.shouldComputeCharChanges, this.shouldPostProcessCharChanges));\n        originalLineIndex += nextChange.originalLength;\n        modifiedLineIndex += nextChange.modifiedLength;\n      }\n    }\n    return {\n      quitEarly: quitEarly,\n      changes: result\n    };\n  }\n  _pushTrimWhitespaceCharChange(result, originalLineNumber, originalStartColumn, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedEndColumn) {\n    if (this._mergeTrimWhitespaceCharChange(result, originalLineNumber, originalStartColumn, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedEndColumn)) {\n      // Merged into previous\n      return;\n    }\n    let charChanges = undefined;\n    if (this.shouldComputeCharChanges) {\n      charChanges = [new CharChange(originalLineNumber, originalStartColumn, originalLineNumber, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedLineNumber, modifiedEndColumn)];\n    }\n    result.push(new LineChange(originalLineNumber, originalLineNumber, modifiedLineNumber, modifiedLineNumber, charChanges));\n  }\n  _mergeTrimWhitespaceCharChange(result, originalLineNumber, originalStartColumn, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedEndColumn) {\n    const len = result.length;\n    if (len === 0) {\n      return false;\n    }\n    const prevChange = result[len - 1];\n    if (prevChange.originalEndLineNumber === 0 || prevChange.modifiedEndLineNumber === 0) {\n      // Don't merge with inserts/deletes\n      return false;\n    }\n    if (prevChange.originalEndLineNumber + 1 === originalLineNumber && prevChange.modifiedEndLineNumber + 1 === modifiedLineNumber) {\n      prevChange.originalEndLineNumber = originalLineNumber;\n      prevChange.modifiedEndLineNumber = modifiedLineNumber;\n      if (this.shouldComputeCharChanges && prevChange.charChanges) {\n        prevChange.charChanges.push(new CharChange(originalLineNumber, originalStartColumn, originalLineNumber, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedLineNumber, modifiedEndColumn));\n      }\n      return true;\n    }\n    return false;\n  }\n}\nfunction getFirstNonBlankColumn(txt, defaultValue) {\n  const r = strings.firstNonWhitespaceIndex(txt);\n  if (r === -1) {\n    return defaultValue;\n  }\n  return r + 1;\n}\nfunction getLastNonBlankColumn(txt, defaultValue) {\n  const r = strings.lastNonWhitespaceIndex(txt);\n  if (r === -1) {\n    return defaultValue;\n  }\n  return r + 2;\n}\nfunction createContinueProcessingPredicate(maximumRuntime) {\n  if (maximumRuntime === 0) {\n    return () => true;\n  }\n  const startTime = Date.now();\n  return () => {\n    return Date.now() - startTime < maximumRuntime;\n  };\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport function toUint8(v) {\n  if (v < 0) {\n    return 0;\n  }\n  if (v > 255 /* MAX_UINT_8 */) {\n    return 255 /* MAX_UINT_8 */;\n  }\n  return v | 0;\n}\nexport function toUint32(v) {\n  if (v < 0) {\n    return 0;\n  }\n  if (v > 4294967295 /* MAX_UINT_32 */) {\n    return 4294967295 /* MAX_UINT_32 */;\n  }\n  return v | 0;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { toUint32 } from '../../../base/common/uint.js';\nexport class PrefixSumIndexOfResult {\n  constructor(index, remainder) {\n    this._prefixSumIndexOfResultBrand = undefined;\n    this.index = index;\n    this.remainder = remainder;\n  }\n}\nexport class PrefixSumComputer {\n  constructor(values) {\n    this.values = values;\n    this.prefixSum = new Uint32Array(values.length);\n    this.prefixSumValidIndex = new Int32Array(1);\n    this.prefixSumValidIndex[0] = -1;\n  }\n  insertValues(insertIndex, insertValues) {\n    insertIndex = toUint32(insertIndex);\n    const oldValues = this.values;\n    const oldPrefixSum = this.prefixSum;\n    const insertValuesLen = insertValues.length;\n    if (insertValuesLen === 0) {\n      return false;\n    }\n    this.values = new Uint32Array(oldValues.length + insertValuesLen);\n    this.values.set(oldValues.subarray(0, insertIndex), 0);\n    this.values.set(oldValues.subarray(insertIndex), insertIndex + insertValuesLen);\n    this.values.set(insertValues, insertIndex);\n    if (insertIndex - 1 < this.prefixSumValidIndex[0]) {\n      this.prefixSumValidIndex[0] = insertIndex - 1;\n    }\n    this.prefixSum = new Uint32Array(this.values.length);\n    if (this.prefixSumValidIndex[0] >= 0) {\n      this.prefixSum.set(oldPrefixSum.subarray(0, this.prefixSumValidIndex[0] + 1));\n    }\n    return true;\n  }\n  changeValue(index, value) {\n    index = toUint32(index);\n    value = toUint32(value);\n    if (this.values[index] === value) {\n      return false;\n    }\n    this.values[index] = value;\n    if (index - 1 < this.prefixSumValidIndex[0]) {\n      this.prefixSumValidIndex[0] = index - 1;\n    }\n    return true;\n  }\n  removeValues(startIndex, count) {\n    startIndex = toUint32(startIndex);\n    count = toUint32(count);\n    const oldValues = this.values;\n    const oldPrefixSum = this.prefixSum;\n    if (startIndex >= oldValues.length) {\n      return false;\n    }\n    let maxCount = oldValues.length - startIndex;\n    if (count >= maxCount) {\n      count = maxCount;\n    }\n    if (count === 0) {\n      return false;\n    }\n    this.values = new Uint32Array(oldValues.length - count);\n    this.values.set(oldValues.subarray(0, startIndex), 0);\n    this.values.set(oldValues.subarray(startIndex + count), startIndex);\n    this.prefixSum = new Uint32Array(this.values.length);\n    if (startIndex - 1 < this.prefixSumValidIndex[0]) {\n      this.prefixSumValidIndex[0] = startIndex - 1;\n    }\n    if (this.prefixSumValidIndex[0] >= 0) {\n      this.prefixSum.set(oldPrefixSum.subarray(0, this.prefixSumValidIndex[0] + 1));\n    }\n    return true;\n  }\n  getTotalSum() {\n    if (this.values.length === 0) {\n      return 0;\n    }\n    return this._getPrefixSum(this.values.length - 1);\n  }\n  getPrefixSum(index) {\n    if (index < 0) {\n      return 0;\n    }\n    index = toUint32(index);\n    return this._getPrefixSum(index);\n  }\n  _getPrefixSum(index) {\n    if (index <= this.prefixSumValidIndex[0]) {\n      return this.prefixSum[index];\n    }\n    let startIndex = this.prefixSumValidIndex[0] + 1;\n    if (startIndex === 0) {\n      this.prefixSum[0] = this.values[0];\n      startIndex++;\n    }\n    if (index >= this.values.length) {\n      index = this.values.length - 1;\n    }\n    for (let i = startIndex; i <= index; i++) {\n      this.prefixSum[i] = this.prefixSum[i - 1] + this.values[i];\n    }\n    this.prefixSumValidIndex[0] = Math.max(this.prefixSumValidIndex[0], index);\n    return this.prefixSum[index];\n  }\n  getIndexOf(sum) {\n    sum = Math.floor(sum); //@perf\n    // Compute all sums (to get a fully valid prefixSum)\n    this.getTotalSum();\n    let low = 0;\n    let high = this.values.length - 1;\n    let mid = 0;\n    let midStop = 0;\n    let midStart = 0;\n    while (low <= high) {\n      mid = low + (high - low) / 2 | 0;\n      midStop = this.prefixSum[mid];\n      midStart = midStop - this.values[mid];\n      if (sum < midStart) {\n        high = mid - 1;\n      } else if (sum >= midStop) {\n        low = mid + 1;\n      } else {\n        break;\n      }\n    }\n    return new PrefixSumIndexOfResult(mid, sum - midStart);\n  }\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport const USUAL_WORD_SEPARATORS = '`~!@#$%^&*()-=+[{]}\\\\|;:\\'\",.<>/?';\n/**\n * Create a word definition regular expression based on default word separators.\n * Optionally provide allowed separators that should be included in words.\n *\n * The default would look like this:\n * /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#\\$\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g\n */\nfunction createWordRegExp() {\n  let allowInWords = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  let source = '(-?\\\\d*\\\\.\\\\d\\\\w*)|([^';\n  for (const sep of USUAL_WORD_SEPARATORS) {\n    if (allowInWords.indexOf(sep) >= 0) {\n      continue;\n    }\n    source += '\\\\' + sep;\n  }\n  source += '\\\\s]+)';\n  return new RegExp(source, 'g');\n}\n// catches numbers (including floating numbers) in the first group, and alphanum in the second\nexport const DEFAULT_WORD_REGEXP = createWordRegExp();\nexport function ensureValidWordDefinition(wordDefinition) {\n  let result = DEFAULT_WORD_REGEXP;\n  if (wordDefinition && wordDefinition instanceof RegExp) {\n    if (!wordDefinition.global) {\n      let flags = 'g';\n      if (wordDefinition.ignoreCase) {\n        flags += 'i';\n      }\n      if (wordDefinition.multiline) {\n        flags += 'm';\n      }\n      if (wordDefinition.unicode) {\n        flags += 'u';\n      }\n      result = new RegExp(wordDefinition.source, flags);\n    } else {\n      result = wordDefinition;\n    }\n  }\n  result.lastIndex = 0;\n  return result;\n}\nconst _defaultConfig = {\n  maxLen: 1000,\n  windowSize: 15,\n  timeBudget: 150\n};\nexport function getWordAtText(column, wordDefinition, text, textOffset) {\n  let config = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : _defaultConfig;\n  if (text.length > config.maxLen) {\n    // don't throw strings that long at the regexp\n    // but use a sub-string in which a word must occur\n    let start = column - config.maxLen / 2;\n    if (start < 0) {\n      start = 0;\n    } else {\n      textOffset += start;\n    }\n    text = text.substring(start, column + config.maxLen / 2);\n    return getWordAtText(column, wordDefinition, text, textOffset, config);\n  }\n  const t1 = Date.now();\n  const pos = column - 1 - textOffset;\n  let prevRegexIndex = -1;\n  let match = null;\n  for (let i = 1;; i++) {\n    // check time budget\n    if (Date.now() - t1 >= config.timeBudget) {\n      break;\n    }\n    // reset the index at which the regexp should start matching, also know where it\n    // should stop so that subsequent search don't repeat previous searches\n    const regexIndex = pos - config.windowSize * i;\n    wordDefinition.lastIndex = Math.max(0, regexIndex);\n    const thisMatch = _findRegexMatchEnclosingPosition(wordDefinition, text, pos, prevRegexIndex);\n    if (!thisMatch && match) {\n      // stop: we have something\n      break;\n    }\n    match = thisMatch;\n    // stop: searched at start\n    if (regexIndex <= 0) {\n      break;\n    }\n    prevRegexIndex = regexIndex;\n  }\n  if (match) {\n    let result = {\n      word: match[0],\n      startColumn: textOffset + 1 + match.index,\n      endColumn: textOffset + 1 + match.index + match[0].length\n    };\n    wordDefinition.lastIndex = 0;\n    return result;\n  }\n  return null;\n}\nfunction _findRegexMatchEnclosingPosition(wordDefinition, text, pos, stopPos) {\n  let match;\n  while (match = wordDefinition.exec(text)) {\n    const matchIndex = match.index || 0;\n    if (matchIndex <= pos && wordDefinition.lastIndex >= pos) {\n      return match;\n    } else if (stopPos > 0 && matchIndex > stopPos) {\n      return null;\n    }\n  }\n  return null;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { toUint8 } from '../../../base/common/uint.js';\n/**\n * A fast character classifier that uses a compact array for ASCII values.\n */\nexport class CharacterClassifier {\n  constructor(_defaultValue) {\n    let defaultValue = toUint8(_defaultValue);\n    this._defaultValue = defaultValue;\n    this._asciiMap = CharacterClassifier._createAsciiMap(defaultValue);\n    this._map = new Map();\n  }\n  static _createAsciiMap(defaultValue) {\n    let asciiMap = new Uint8Array(256);\n    for (let i = 0; i < 256; i++) {\n      asciiMap[i] = defaultValue;\n    }\n    return asciiMap;\n  }\n  set(charCode, _value) {\n    let value = toUint8(_value);\n    if (charCode >= 0 && charCode < 256) {\n      this._asciiMap[charCode] = value;\n    } else {\n      this._map.set(charCode, value);\n    }\n  }\n  get(charCode) {\n    if (charCode >= 0 && charCode < 256) {\n      return this._asciiMap[charCode];\n    } else {\n      return this._map.get(charCode) || this._defaultValue;\n    }\n  }\n}\nexport class CharacterSet {\n  constructor() {\n    this._actual = new CharacterClassifier(0 /* False */);\n  }\n  add(charCode) {\n    this._actual.set(charCode, 1 /* True */);\n  }\n  has(charCode) {\n    return this._actual.get(charCode) === 1 /* True */;\n  }\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { CharacterClassifier } from '../core/characterClassifier.js';\nexport class Uint8Matrix {\n  constructor(rows, cols, defaultValue) {\n    const data = new Uint8Array(rows * cols);\n    for (let i = 0, len = rows * cols; i < len; i++) {\n      data[i] = defaultValue;\n    }\n    this._data = data;\n    this.rows = rows;\n    this.cols = cols;\n  }\n  get(row, col) {\n    return this._data[row * this.cols + col];\n  }\n  set(row, col, value) {\n    this._data[row * this.cols + col] = value;\n  }\n}\nexport class StateMachine {\n  constructor(edges) {\n    let maxCharCode = 0;\n    let maxState = 0 /* Invalid */;\n    for (let i = 0, len = edges.length; i < len; i++) {\n      let [from, chCode, to] = edges[i];\n      if (chCode > maxCharCode) {\n        maxCharCode = chCode;\n      }\n      if (from > maxState) {\n        maxState = from;\n      }\n      if (to > maxState) {\n        maxState = to;\n      }\n    }\n    maxCharCode++;\n    maxState++;\n    let states = new Uint8Matrix(maxState, maxCharCode, 0 /* Invalid */);\n    for (let i = 0, len = edges.length; i < len; i++) {\n      let [from, chCode, to] = edges[i];\n      states.set(from, chCode, to);\n    }\n    this._states = states;\n    this._maxCharCode = maxCharCode;\n  }\n  nextState(currentState, chCode) {\n    if (chCode < 0 || chCode >= this._maxCharCode) {\n      return 0 /* Invalid */;\n    }\n    return this._states.get(currentState, chCode);\n  }\n}\n// State machine for http:// or https:// or file://\nlet _stateMachine = null;\nfunction getStateMachine() {\n  if (_stateMachine === null) {\n    _stateMachine = new StateMachine([[1 /* Start */, 104 /* h */, 2 /* H */], [1 /* Start */, 72 /* H */, 2 /* H */], [1 /* Start */, 102 /* f */, 6 /* F */], [1 /* Start */, 70 /* F */, 6 /* F */], [2 /* H */, 116 /* t */, 3 /* HT */], [2 /* H */, 84 /* T */, 3 /* HT */], [3 /* HT */, 116 /* t */, 4 /* HTT */], [3 /* HT */, 84 /* T */, 4 /* HTT */], [4 /* HTT */, 112 /* p */, 5 /* HTTP */], [4 /* HTT */, 80 /* P */, 5 /* HTTP */], [5 /* HTTP */, 115 /* s */, 9 /* BeforeColon */], [5 /* HTTP */, 83 /* S */, 9 /* BeforeColon */], [5 /* HTTP */, 58 /* Colon */, 10 /* AfterColon */], [6 /* F */, 105 /* i */, 7 /* FI */], [6 /* F */, 73 /* I */, 7 /* FI */], [7 /* FI */, 108 /* l */, 8 /* FIL */], [7 /* FI */, 76 /* L */, 8 /* FIL */], [8 /* FIL */, 101 /* e */, 9 /* BeforeColon */], [8 /* FIL */, 69 /* E */, 9 /* BeforeColon */], [9 /* BeforeColon */, 58 /* Colon */, 10 /* AfterColon */], [10 /* AfterColon */, 47 /* Slash */, 11 /* AlmostThere */], [11 /* AlmostThere */, 47 /* Slash */, 12 /* End */]]);\n  }\n  return _stateMachine;\n}\nlet _classifier = null;\nfunction getClassifier() {\n  if (_classifier === null) {\n    _classifier = new CharacterClassifier(0 /* None */);\n    const FORCE_TERMINATION_CHARACTERS = ' \\t<>\\'\\\"、。｡､，．：；‘〈「『〔（［｛｢｣｝］）〕』」〉’｀～…';\n    for (let i = 0; i < FORCE_TERMINATION_CHARACTERS.length; i++) {\n      _classifier.set(FORCE_TERMINATION_CHARACTERS.charCodeAt(i), 1 /* ForceTermination */);\n    }\n    const CANNOT_END_WITH_CHARACTERS = '.,;';\n    for (let i = 0; i < CANNOT_END_WITH_CHARACTERS.length; i++) {\n      _classifier.set(CANNOT_END_WITH_CHARACTERS.charCodeAt(i), 2 /* CannotEndIn */);\n    }\n  }\n  return _classifier;\n}\nexport class LinkComputer {\n  static _createLink(classifier, line, lineNumber, linkBeginIndex, linkEndIndex) {\n    // Do not allow to end link in certain characters...\n    let lastIncludedCharIndex = linkEndIndex - 1;\n    do {\n      const chCode = line.charCodeAt(lastIncludedCharIndex);\n      const chClass = classifier.get(chCode);\n      if (chClass !== 2 /* CannotEndIn */) {\n        break;\n      }\n      lastIncludedCharIndex--;\n    } while (lastIncludedCharIndex > linkBeginIndex);\n    // Handle links enclosed in parens, square brackets and curlys.\n    if (linkBeginIndex > 0) {\n      const charCodeBeforeLink = line.charCodeAt(linkBeginIndex - 1);\n      const lastCharCodeInLink = line.charCodeAt(lastIncludedCharIndex);\n      if (charCodeBeforeLink === 40 /* OpenParen */ && lastCharCodeInLink === 41 /* CloseParen */ || charCodeBeforeLink === 91 /* OpenSquareBracket */ && lastCharCodeInLink === 93 /* CloseSquareBracket */ || charCodeBeforeLink === 123 /* OpenCurlyBrace */ && lastCharCodeInLink === 125 /* CloseCurlyBrace */) {\n        // Do not end in ) if ( is before the link start\n        // Do not end in ] if [ is before the link start\n        // Do not end in } if { is before the link start\n        lastIncludedCharIndex--;\n      }\n    }\n    return {\n      range: {\n        startLineNumber: lineNumber,\n        startColumn: linkBeginIndex + 1,\n        endLineNumber: lineNumber,\n        endColumn: lastIncludedCharIndex + 2\n      },\n      url: line.substring(linkBeginIndex, lastIncludedCharIndex + 1)\n    };\n  }\n  static computeLinks(model) {\n    let stateMachine = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : getStateMachine();\n    const classifier = getClassifier();\n    let result = [];\n    for (let i = 1, lineCount = model.getLineCount(); i <= lineCount; i++) {\n      const line = model.getLineContent(i);\n      const len = line.length;\n      let j = 0;\n      let linkBeginIndex = 0;\n      let linkBeginChCode = 0;\n      let state = 1 /* Start */;\n      let hasOpenParens = false;\n      let hasOpenSquareBracket = false;\n      let inSquareBrackets = false;\n      let hasOpenCurlyBracket = false;\n      while (j < len) {\n        let resetStateMachine = false;\n        const chCode = line.charCodeAt(j);\n        if (state === 13 /* Accept */) {\n          let chClass;\n          switch (chCode) {\n            case 40 /* OpenParen */:\n              hasOpenParens = true;\n              chClass = 0 /* None */;\n              break;\n            case 41 /* CloseParen */:\n              chClass = hasOpenParens ? 0 /* None */ : 1 /* ForceTermination */;\n              break;\n            case 91 /* OpenSquareBracket */:\n              inSquareBrackets = true;\n              hasOpenSquareBracket = true;\n              chClass = 0 /* None */;\n              break;\n            case 93 /* CloseSquareBracket */:\n              inSquareBrackets = false;\n              chClass = hasOpenSquareBracket ? 0 /* None */ : 1 /* ForceTermination */;\n              break;\n            case 123 /* OpenCurlyBrace */:\n              hasOpenCurlyBracket = true;\n              chClass = 0 /* None */;\n              break;\n            case 125 /* CloseCurlyBrace */:\n              chClass = hasOpenCurlyBracket ? 0 /* None */ : 1 /* ForceTermination */;\n              break;\n            /* The following three rules make it that ' or \" or ` are allowed inside links if the link began with a different one */\n            case 39 /* SingleQuote */:\n              chClass = linkBeginChCode === 34 /* DoubleQuote */ || linkBeginChCode === 96 /* BackTick */ ? 0 /* None */ : 1 /* ForceTermination */;\n              break;\n            case 34 /* DoubleQuote */:\n              chClass = linkBeginChCode === 39 /* SingleQuote */ || linkBeginChCode === 96 /* BackTick */ ? 0 /* None */ : 1 /* ForceTermination */;\n              break;\n            case 96 /* BackTick */:\n              chClass = linkBeginChCode === 39 /* SingleQuote */ || linkBeginChCode === 34 /* DoubleQuote */ ? 0 /* None */ : 1 /* ForceTermination */;\n              break;\n            case 42 /* Asterisk */:\n              // `*` terminates a link if the link began with `*`\n              chClass = linkBeginChCode === 42 /* Asterisk */ ? 1 /* ForceTermination */ : 0 /* None */;\n              break;\n            case 124 /* Pipe */:\n              // `|` terminates a link if the link began with `|`\n              chClass = linkBeginChCode === 124 /* Pipe */ ? 1 /* ForceTermination */ : 0 /* None */;\n              break;\n            case 32 /* Space */:\n              // ` ` allow space in between [ and ]\n              chClass = inSquareBrackets ? 0 /* None */ : 1 /* ForceTermination */;\n              break;\n            default:\n              chClass = classifier.get(chCode);\n          }\n          // Check if character terminates link\n          if (chClass === 1 /* ForceTermination */) {\n            result.push(LinkComputer._createLink(classifier, line, i, linkBeginIndex, j));\n            resetStateMachine = true;\n          }\n        } else if (state === 12 /* End */) {\n          let chClass;\n          if (chCode === 91 /* OpenSquareBracket */) {\n            // Allow for the authority part to contain ipv6 addresses which contain [ and ]\n            hasOpenSquareBracket = true;\n            chClass = 0 /* None */;\n          } else {\n            chClass = classifier.get(chCode);\n          }\n          // Check if character terminates link\n          if (chClass === 1 /* ForceTermination */) {\n            resetStateMachine = true;\n          } else {\n            state = 13 /* Accept */;\n          }\n        } else {\n          state = stateMachine.nextState(state, chCode);\n          if (state === 0 /* Invalid */) {\n            resetStateMachine = true;\n          }\n        }\n        if (resetStateMachine) {\n          state = 1 /* Start */;\n          hasOpenParens = false;\n          hasOpenSquareBracket = false;\n          hasOpenCurlyBracket = false;\n          // Record where the link started\n          linkBeginIndex = j + 1;\n          linkBeginChCode = chCode;\n        }\n        j++;\n      }\n      if (state === 13 /* Accept */) {\n        result.push(LinkComputer._createLink(classifier, line, i, linkBeginIndex, len));\n      }\n    }\n    return result;\n  }\n}\n/**\n * Returns an array of all links contains in the provided\n * document. *Note* that this operation is computational\n * expensive and should not run in the UI thread.\n */\nexport function computeLinks(model) {\n  if (!model || typeof model.getLineCount !== 'function' || typeof model.getLineContent !== 'function') {\n    // Unknown caller!\n    return [];\n  }\n  return LinkComputer.computeLinks(model);\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class BasicInplaceReplace {\n  constructor() {\n    this._defaultValueSet = [['true', 'false'], ['True', 'False'], ['Private', 'Public', 'Friend', 'ReadOnly', 'Partial', 'Protected', 'WriteOnly'], ['public', 'protected', 'private']];\n  }\n  navigateValueSet(range1, text1, range2, text2, up) {\n    if (range1 && text1) {\n      let result = this.doNavigateValueSet(text1, up);\n      if (result) {\n        return {\n          range: range1,\n          value: result\n        };\n      }\n    }\n    if (range2 && text2) {\n      let result = this.doNavigateValueSet(text2, up);\n      if (result) {\n        return {\n          range: range2,\n          value: result\n        };\n      }\n    }\n    return null;\n  }\n  doNavigateValueSet(text, up) {\n    let numberResult = this.numberReplace(text, up);\n    if (numberResult !== null) {\n      return numberResult;\n    }\n    return this.textReplace(text, up);\n  }\n  numberReplace(value, up) {\n    let precision = Math.pow(10, value.length - (value.lastIndexOf('.') + 1));\n    let n1 = Number(value);\n    let n2 = parseFloat(value);\n    if (!isNaN(n1) && !isNaN(n2) && n1 === n2) {\n      if (n1 === 0 && !up) {\n        return null; // don't do negative\n        //\t\t\t} else if(n1 === 9 && up) {\n        //\t\t\t\treturn null; // don't insert 10 into a number\n      } else {\n        n1 = Math.floor(n1 * precision);\n        n1 += up ? precision : -precision;\n        return String(n1 / precision);\n      }\n    }\n    return null;\n  }\n  textReplace(value, up) {\n    return this.valueSetsReplace(this._defaultValueSet, value, up);\n  }\n  valueSetsReplace(valueSets, value, up) {\n    let result = null;\n    for (let i = 0, len = valueSets.length; result === null && i < len; i++) {\n      result = this.valueSetReplace(valueSets[i], value, up);\n    }\n    return result;\n  }\n  valueSetReplace(valueSet, value, up) {\n    let idx = valueSet.indexOf(value);\n    if (idx >= 0) {\n      idx += up ? +1 : -1;\n      if (idx < 0) {\n        idx = valueSet.length - 1;\n      } else {\n        idx %= valueSet.length;\n      }\n      return valueSet[idx];\n    }\n    return null;\n  }\n}\nBasicInplaceReplace.INSTANCE = new BasicInplaceReplace();","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter, Event } from './event.js';\nconst shortcutEvent = Object.freeze(function (callback, context) {\n  const handle = setTimeout(callback.bind(context), 0);\n  return {\n    dispose() {\n      clearTimeout(handle);\n    }\n  };\n});\nexport var CancellationToken;\n(function (CancellationToken) {\n  function isCancellationToken(thing) {\n    if (thing === CancellationToken.None || thing === CancellationToken.Cancelled) {\n      return true;\n    }\n    if (thing instanceof MutableToken) {\n      return true;\n    }\n    if (!thing || typeof thing !== 'object') {\n      return false;\n    }\n    return typeof thing.isCancellationRequested === 'boolean' && typeof thing.onCancellationRequested === 'function';\n  }\n  CancellationToken.isCancellationToken = isCancellationToken;\n  CancellationToken.None = Object.freeze({\n    isCancellationRequested: false,\n    onCancellationRequested: Event.None\n  });\n  CancellationToken.Cancelled = Object.freeze({\n    isCancellationRequested: true,\n    onCancellationRequested: shortcutEvent\n  });\n})(CancellationToken || (CancellationToken = {}));\nclass MutableToken {\n  constructor() {\n    this._isCancelled = false;\n    this._emitter = null;\n  }\n  cancel() {\n    if (!this._isCancelled) {\n      this._isCancelled = true;\n      if (this._emitter) {\n        this._emitter.fire(undefined);\n        this.dispose();\n      }\n    }\n  }\n  get isCancellationRequested() {\n    return this._isCancelled;\n  }\n  get onCancellationRequested() {\n    if (this._isCancelled) {\n      return shortcutEvent;\n    }\n    if (!this._emitter) {\n      this._emitter = new Emitter();\n    }\n    return this._emitter.event;\n  }\n  dispose() {\n    if (this._emitter) {\n      this._emitter.dispose();\n      this._emitter = null;\n    }\n  }\n}\nexport class CancellationTokenSource {\n  constructor(parent) {\n    this._token = undefined;\n    this._parentListener = undefined;\n    this._parentListener = parent && parent.onCancellationRequested(this.cancel, this);\n  }\n  get token() {\n    if (!this._token) {\n      // be lazy and create the token only when\n      // actually needed\n      this._token = new MutableToken();\n    }\n    return this._token;\n  }\n  cancel() {\n    if (!this._token) {\n      // save an object by returning the default\n      // cancelled token when cancellation happens\n      // before someone asks for the token\n      this._token = CancellationToken.Cancelled;\n    } else if (this._token instanceof MutableToken) {\n      // actually cancel\n      this._token.cancel();\n    }\n  }\n  dispose() {\n    let cancel = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    if (cancel) {\n      this.cancel();\n    }\n    if (this._parentListener) {\n      this._parentListener.dispose();\n    }\n    if (!this._token) {\n      // ensure to initialize with an empty token if we had none\n      this._token = CancellationToken.None;\n    } else if (this._token instanceof MutableToken) {\n      // actually dispose\n      this._token.dispose();\n    }\n  }\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nclass KeyCodeStrMap {\n  constructor() {\n    this._keyCodeToStr = [];\n    this._strToKeyCode = Object.create(null);\n  }\n  define(keyCode, str) {\n    this._keyCodeToStr[keyCode] = str;\n    this._strToKeyCode[str.toLowerCase()] = keyCode;\n  }\n  keyCodeToStr(keyCode) {\n    return this._keyCodeToStr[keyCode];\n  }\n  strToKeyCode(str) {\n    return this._strToKeyCode[str.toLowerCase()] || 0 /* Unknown */;\n  }\n}\nconst uiMap = new KeyCodeStrMap();\nconst userSettingsUSMap = new KeyCodeStrMap();\nconst userSettingsGeneralMap = new KeyCodeStrMap();\nexport const EVENT_KEY_CODE_MAP = new Array(230);\nexport const NATIVE_WINDOWS_KEY_CODE_TO_KEY_CODE = {};\nconst scanCodeIntToStr = [];\nconst scanCodeStrToInt = Object.create(null);\nconst scanCodeLowerCaseStrToInt = Object.create(null);\n/**\n * -1 if a ScanCode => KeyCode mapping depends on kb layout.\n */\nexport const IMMUTABLE_CODE_TO_KEY_CODE = [];\n/**\n * -1 if a KeyCode => ScanCode mapping depends on kb layout.\n */\nexport const IMMUTABLE_KEY_CODE_TO_CODE = [];\nfor (let i = 0; i <= 193 /* MAX_VALUE */; i++) {\n  IMMUTABLE_CODE_TO_KEY_CODE[i] = -1 /* DependsOnKbLayout */;\n}\nfor (let i = 0; i <= 126 /* MAX_VALUE */; i++) {\n  IMMUTABLE_KEY_CODE_TO_CODE[i] = -1 /* DependsOnKbLayout */;\n}\n(function () {\n  // See https://msdn.microsoft.com/en-us/library/windows/desktop/dd375731(v=vs.85).aspx\n  // See https://github.com/microsoft/node-native-keymap/blob/master/deps/chromium/keyboard_codes_win.h\n  const empty = '';\n  const mappings = [\n  // keyCodeOrd, immutable, scanCode, scanCodeStr, keyCode, keyCodeStr, eventKeyCode, vkey, usUserSettingsLabel, generalUserSettingsLabel\n  [0, 1, 0 /* None */, 'None', 0 /* Unknown */, 'unknown', 0, 'VK_UNKNOWN', empty, empty], [0, 1, 1 /* Hyper */, 'Hyper', 0 /* Unknown */, empty, 0, empty, empty, empty], [0, 1, 2 /* Super */, 'Super', 0 /* Unknown */, empty, 0, empty, empty, empty], [0, 1, 3 /* Fn */, 'Fn', 0 /* Unknown */, empty, 0, empty, empty, empty], [0, 1, 4 /* FnLock */, 'FnLock', 0 /* Unknown */, empty, 0, empty, empty, empty], [0, 1, 5 /* Suspend */, 'Suspend', 0 /* Unknown */, empty, 0, empty, empty, empty], [0, 1, 6 /* Resume */, 'Resume', 0 /* Unknown */, empty, 0, empty, empty, empty], [0, 1, 7 /* Turbo */, 'Turbo', 0 /* Unknown */, empty, 0, empty, empty, empty], [0, 1, 8 /* Sleep */, 'Sleep', 0 /* Unknown */, empty, 0, 'VK_SLEEP', empty, empty], [0, 1, 9 /* WakeUp */, 'WakeUp', 0 /* Unknown */, empty, 0, empty, empty, empty], [31, 0, 10 /* KeyA */, 'KeyA', 31 /* KeyA */, 'A', 65, 'VK_A', empty, empty], [32, 0, 11 /* KeyB */, 'KeyB', 32 /* KeyB */, 'B', 66, 'VK_B', empty, empty], [33, 0, 12 /* KeyC */, 'KeyC', 33 /* KeyC */, 'C', 67, 'VK_C', empty, empty], [34, 0, 13 /* KeyD */, 'KeyD', 34 /* KeyD */, 'D', 68, 'VK_D', empty, empty], [35, 0, 14 /* KeyE */, 'KeyE', 35 /* KeyE */, 'E', 69, 'VK_E', empty, empty], [36, 0, 15 /* KeyF */, 'KeyF', 36 /* KeyF */, 'F', 70, 'VK_F', empty, empty], [37, 0, 16 /* KeyG */, 'KeyG', 37 /* KeyG */, 'G', 71, 'VK_G', empty, empty], [38, 0, 17 /* KeyH */, 'KeyH', 38 /* KeyH */, 'H', 72, 'VK_H', empty, empty], [39, 0, 18 /* KeyI */, 'KeyI', 39 /* KeyI */, 'I', 73, 'VK_I', empty, empty], [40, 0, 19 /* KeyJ */, 'KeyJ', 40 /* KeyJ */, 'J', 74, 'VK_J', empty, empty], [41, 0, 20 /* KeyK */, 'KeyK', 41 /* KeyK */, 'K', 75, 'VK_K', empty, empty], [42, 0, 21 /* KeyL */, 'KeyL', 42 /* KeyL */, 'L', 76, 'VK_L', empty, empty], [43, 0, 22 /* KeyM */, 'KeyM', 43 /* KeyM */, 'M', 77, 'VK_M', empty, empty], [44, 0, 23 /* KeyN */, 'KeyN', 44 /* KeyN */, 'N', 78, 'VK_N', empty, empty], [45, 0, 24 /* KeyO */, 'KeyO', 45 /* KeyO */, 'O', 79, 'VK_O', empty, empty], [46, 0, 25 /* KeyP */, 'KeyP', 46 /* KeyP */, 'P', 80, 'VK_P', empty, empty], [47, 0, 26 /* KeyQ */, 'KeyQ', 47 /* KeyQ */, 'Q', 81, 'VK_Q', empty, empty], [48, 0, 27 /* KeyR */, 'KeyR', 48 /* KeyR */, 'R', 82, 'VK_R', empty, empty], [49, 0, 28 /* KeyS */, 'KeyS', 49 /* KeyS */, 'S', 83, 'VK_S', empty, empty], [50, 0, 29 /* KeyT */, 'KeyT', 50 /* KeyT */, 'T', 84, 'VK_T', empty, empty], [51, 0, 30 /* KeyU */, 'KeyU', 51 /* KeyU */, 'U', 85, 'VK_U', empty, empty], [52, 0, 31 /* KeyV */, 'KeyV', 52 /* KeyV */, 'V', 86, 'VK_V', empty, empty], [53, 0, 32 /* KeyW */, 'KeyW', 53 /* KeyW */, 'W', 87, 'VK_W', empty, empty], [54, 0, 33 /* KeyX */, 'KeyX', 54 /* KeyX */, 'X', 88, 'VK_X', empty, empty], [55, 0, 34 /* KeyY */, 'KeyY', 55 /* KeyY */, 'Y', 89, 'VK_Y', empty, empty], [56, 0, 35 /* KeyZ */, 'KeyZ', 56 /* KeyZ */, 'Z', 90, 'VK_Z', empty, empty], [22, 0, 36 /* Digit1 */, 'Digit1', 22 /* Digit1 */, '1', 49, 'VK_1', empty, empty], [23, 0, 37 /* Digit2 */, 'Digit2', 23 /* Digit2 */, '2', 50, 'VK_2', empty, empty], [24, 0, 38 /* Digit3 */, 'Digit3', 24 /* Digit3 */, '3', 51, 'VK_3', empty, empty], [25, 0, 39 /* Digit4 */, 'Digit4', 25 /* Digit4 */, '4', 52, 'VK_4', empty, empty], [26, 0, 40 /* Digit5 */, 'Digit5', 26 /* Digit5 */, '5', 53, 'VK_5', empty, empty], [27, 0, 41 /* Digit6 */, 'Digit6', 27 /* Digit6 */, '6', 54, 'VK_6', empty, empty], [28, 0, 42 /* Digit7 */, 'Digit7', 28 /* Digit7 */, '7', 55, 'VK_7', empty, empty], [29, 0, 43 /* Digit8 */, 'Digit8', 29 /* Digit8 */, '8', 56, 'VK_8', empty, empty], [30, 0, 44 /* Digit9 */, 'Digit9', 30 /* Digit9 */, '9', 57, 'VK_9', empty, empty], [21, 0, 45 /* Digit0 */, 'Digit0', 21 /* Digit0 */, '0', 48, 'VK_0', empty, empty], [3, 1, 46 /* Enter */, 'Enter', 3 /* Enter */, 'Enter', 13, 'VK_RETURN', empty, empty], [9, 1, 47 /* Escape */, 'Escape', 9 /* Escape */, 'Escape', 27, 'VK_ESCAPE', empty, empty], [1, 1, 48 /* Backspace */, 'Backspace', 1 /* Backspace */, 'Backspace', 8, 'VK_BACK', empty, empty], [2, 1, 49 /* Tab */, 'Tab', 2 /* Tab */, 'Tab', 9, 'VK_TAB', empty, empty], [10, 1, 50 /* Space */, 'Space', 10 /* Space */, 'Space', 32, 'VK_SPACE', empty, empty], [83, 0, 51 /* Minus */, 'Minus', 83 /* Minus */, '-', 189, 'VK_OEM_MINUS', '-', 'OEM_MINUS'], [81, 0, 52 /* Equal */, 'Equal', 81 /* Equal */, '=', 187, 'VK_OEM_PLUS', '=', 'OEM_PLUS'], [87, 0, 53 /* BracketLeft */, 'BracketLeft', 87 /* BracketLeft */, '[', 219, 'VK_OEM_4', '[', 'OEM_4'], [89, 0, 54 /* BracketRight */, 'BracketRight', 89 /* BracketRight */, ']', 221, 'VK_OEM_6', ']', 'OEM_6'], [88, 0, 55 /* Backslash */, 'Backslash', 88 /* Backslash */, '\\\\', 220, 'VK_OEM_5', '\\\\', 'OEM_5'], [0, 0, 56 /* IntlHash */, 'IntlHash', 0 /* Unknown */, empty, 0, empty, empty, empty], [80, 0, 57 /* Semicolon */, 'Semicolon', 80 /* Semicolon */, ';', 186, 'VK_OEM_1', ';', 'OEM_1'], [90, 0, 58 /* Quote */, 'Quote', 90 /* Quote */, '\\'', 222, 'VK_OEM_7', '\\'', 'OEM_7'], [86, 0, 59 /* Backquote */, 'Backquote', 86 /* Backquote */, '`', 192, 'VK_OEM_3', '`', 'OEM_3'], [82, 0, 60 /* Comma */, 'Comma', 82 /* Comma */, ',', 188, 'VK_OEM_COMMA', ',', 'OEM_COMMA'], [84, 0, 61 /* Period */, 'Period', 84 /* Period */, '.', 190, 'VK_OEM_PERIOD', '.', 'OEM_PERIOD'], [85, 0, 62 /* Slash */, 'Slash', 85 /* Slash */, '/', 191, 'VK_OEM_2', '/', 'OEM_2'], [8, 1, 63 /* CapsLock */, 'CapsLock', 8 /* CapsLock */, 'CapsLock', 20, 'VK_CAPITAL', empty, empty], [59, 1, 64 /* F1 */, 'F1', 59 /* F1 */, 'F1', 112, 'VK_F1', empty, empty], [60, 1, 65 /* F2 */, 'F2', 60 /* F2 */, 'F2', 113, 'VK_F2', empty, empty], [61, 1, 66 /* F3 */, 'F3', 61 /* F3 */, 'F3', 114, 'VK_F3', empty, empty], [62, 1, 67 /* F4 */, 'F4', 62 /* F4 */, 'F4', 115, 'VK_F4', empty, empty], [63, 1, 68 /* F5 */, 'F5', 63 /* F5 */, 'F5', 116, 'VK_F5', empty, empty], [64, 1, 69 /* F6 */, 'F6', 64 /* F6 */, 'F6', 117, 'VK_F6', empty, empty], [65, 1, 70 /* F7 */, 'F7', 65 /* F7 */, 'F7', 118, 'VK_F7', empty, empty], [66, 1, 71 /* F8 */, 'F8', 66 /* F8 */, 'F8', 119, 'VK_F8', empty, empty], [67, 1, 72 /* F9 */, 'F9', 67 /* F9 */, 'F9', 120, 'VK_F9', empty, empty], [68, 1, 73 /* F10 */, 'F10', 68 /* F10 */, 'F10', 121, 'VK_F10', empty, empty], [69, 1, 74 /* F11 */, 'F11', 69 /* F11 */, 'F11', 122, 'VK_F11', empty, empty], [70, 1, 75 /* F12 */, 'F12', 70 /* F12 */, 'F12', 123, 'VK_F12', empty, empty], [0, 1, 76 /* PrintScreen */, 'PrintScreen', 0 /* Unknown */, empty, 0, empty, empty, empty], [79, 1, 77 /* ScrollLock */, 'ScrollLock', 79 /* ScrollLock */, 'ScrollLock', 145, 'VK_SCROLL', empty, empty], [7, 1, 78 /* Pause */, 'Pause', 7 /* PauseBreak */, 'PauseBreak', 19, 'VK_PAUSE', empty, empty], [19, 1, 79 /* Insert */, 'Insert', 19 /* Insert */, 'Insert', 45, 'VK_INSERT', empty, empty], [14, 1, 80 /* Home */, 'Home', 14 /* Home */, 'Home', 36, 'VK_HOME', empty, empty], [11, 1, 81 /* PageUp */, 'PageUp', 11 /* PageUp */, 'PageUp', 33, 'VK_PRIOR', empty, empty], [20, 1, 82 /* Delete */, 'Delete', 20 /* Delete */, 'Delete', 46, 'VK_DELETE', empty, empty], [13, 1, 83 /* End */, 'End', 13 /* End */, 'End', 35, 'VK_END', empty, empty], [12, 1, 84 /* PageDown */, 'PageDown', 12 /* PageDown */, 'PageDown', 34, 'VK_NEXT', empty, empty], [17, 1, 85 /* ArrowRight */, 'ArrowRight', 17 /* RightArrow */, 'RightArrow', 39, 'VK_RIGHT', 'Right', empty], [15, 1, 86 /* ArrowLeft */, 'ArrowLeft', 15 /* LeftArrow */, 'LeftArrow', 37, 'VK_LEFT', 'Left', empty], [18, 1, 87 /* ArrowDown */, 'ArrowDown', 18 /* DownArrow */, 'DownArrow', 40, 'VK_DOWN', 'Down', empty], [16, 1, 88 /* ArrowUp */, 'ArrowUp', 16 /* UpArrow */, 'UpArrow', 38, 'VK_UP', 'Up', empty], [78, 1, 89 /* NumLock */, 'NumLock', 78 /* NumLock */, 'NumLock', 144, 'VK_NUMLOCK', empty, empty], [108, 1, 90 /* NumpadDivide */, 'NumpadDivide', 108 /* NumpadDivide */, 'NumPad_Divide', 111, 'VK_DIVIDE', empty, empty], [103, 1, 91 /* NumpadMultiply */, 'NumpadMultiply', 103 /* NumpadMultiply */, 'NumPad_Multiply', 106, 'VK_MULTIPLY', empty, empty], [106, 1, 92 /* NumpadSubtract */, 'NumpadSubtract', 106 /* NumpadSubtract */, 'NumPad_Subtract', 109, 'VK_SUBTRACT', empty, empty], [104, 1, 93 /* NumpadAdd */, 'NumpadAdd', 104 /* NumpadAdd */, 'NumPad_Add', 107, 'VK_ADD', empty, empty], [3, 1, 94 /* NumpadEnter */, 'NumpadEnter', 3 /* Enter */, empty, 0, empty, empty, empty], [94, 1, 95 /* Numpad1 */, 'Numpad1', 94 /* Numpad1 */, 'NumPad1', 97, 'VK_NUMPAD1', empty, empty], [95, 1, 96 /* Numpad2 */, 'Numpad2', 95 /* Numpad2 */, 'NumPad2', 98, 'VK_NUMPAD2', empty, empty], [96, 1, 97 /* Numpad3 */, 'Numpad3', 96 /* Numpad3 */, 'NumPad3', 99, 'VK_NUMPAD3', empty, empty], [97, 1, 98 /* Numpad4 */, 'Numpad4', 97 /* Numpad4 */, 'NumPad4', 100, 'VK_NUMPAD4', empty, empty], [98, 1, 99 /* Numpad5 */, 'Numpad5', 98 /* Numpad5 */, 'NumPad5', 101, 'VK_NUMPAD5', empty, empty], [99, 1, 100 /* Numpad6 */, 'Numpad6', 99 /* Numpad6 */, 'NumPad6', 102, 'VK_NUMPAD6', empty, empty], [100, 1, 101 /* Numpad7 */, 'Numpad7', 100 /* Numpad7 */, 'NumPad7', 103, 'VK_NUMPAD7', empty, empty], [101, 1, 102 /* Numpad8 */, 'Numpad8', 101 /* Numpad8 */, 'NumPad8', 104, 'VK_NUMPAD8', empty, empty], [102, 1, 103 /* Numpad9 */, 'Numpad9', 102 /* Numpad9 */, 'NumPad9', 105, 'VK_NUMPAD9', empty, empty], [93, 1, 104 /* Numpad0 */, 'Numpad0', 93 /* Numpad0 */, 'NumPad0', 96, 'VK_NUMPAD0', empty, empty], [107, 1, 105 /* NumpadDecimal */, 'NumpadDecimal', 107 /* NumpadDecimal */, 'NumPad_Decimal', 110, 'VK_DECIMAL', empty, empty], [92, 0, 106 /* IntlBackslash */, 'IntlBackslash', 92 /* IntlBackslash */, 'OEM_102', 226, 'VK_OEM_102', empty, empty], [58, 1, 107 /* ContextMenu */, 'ContextMenu', 58 /* ContextMenu */, 'ContextMenu', 93, empty, empty, empty], [0, 1, 108 /* Power */, 'Power', 0 /* Unknown */, empty, 0, empty, empty, empty], [0, 1, 109 /* NumpadEqual */, 'NumpadEqual', 0 /* Unknown */, empty, 0, empty, empty, empty], [71, 1, 110 /* F13 */, 'F13', 71 /* F13 */, 'F13', 124, 'VK_F13', empty, empty], [72, 1, 111 /* F14 */, 'F14', 72 /* F14 */, 'F14', 125, 'VK_F14', empty, empty], [73, 1, 112 /* F15 */, 'F15', 73 /* F15 */, 'F15', 126, 'VK_F15', empty, empty], [74, 1, 113 /* F16 */, 'F16', 74 /* F16 */, 'F16', 127, 'VK_F16', empty, empty], [75, 1, 114 /* F17 */, 'F17', 75 /* F17 */, 'F17', 128, 'VK_F17', empty, empty], [76, 1, 115 /* F18 */, 'F18', 76 /* F18 */, 'F18', 129, 'VK_F18', empty, empty], [77, 1, 116 /* F19 */, 'F19', 77 /* F19 */, 'F19', 130, 'VK_F19', empty, empty], [0, 1, 117 /* F20 */, 'F20', 0 /* Unknown */, empty, 0, 'VK_F20', empty, empty], [0, 1, 118 /* F21 */, 'F21', 0 /* Unknown */, empty, 0, 'VK_F21', empty, empty], [0, 1, 119 /* F22 */, 'F22', 0 /* Unknown */, empty, 0, 'VK_F22', empty, empty], [0, 1, 120 /* F23 */, 'F23', 0 /* Unknown */, empty, 0, 'VK_F23', empty, empty], [0, 1, 121 /* F24 */, 'F24', 0 /* Unknown */, empty, 0, 'VK_F24', empty, empty], [0, 1, 122 /* Open */, 'Open', 0 /* Unknown */, empty, 0, empty, empty, empty], [0, 1, 123 /* Help */, 'Help', 0 /* Unknown */, empty, 0, empty, empty, empty], [0, 1, 124 /* Select */, 'Select', 0 /* Unknown */, empty, 0, empty, empty, empty], [0, 1, 125 /* Again */, 'Again', 0 /* Unknown */, empty, 0, empty, empty, empty], [0, 1, 126 /* Undo */, 'Undo', 0 /* Unknown */, empty, 0, empty, empty, empty], [0, 1, 127 /* Cut */, 'Cut', 0 /* Unknown */, empty, 0, empty, empty, empty], [0, 1, 128 /* Copy */, 'Copy', 0 /* Unknown */, empty, 0, empty, empty, empty], [0, 1, 129 /* Paste */, 'Paste', 0 /* Unknown */, empty, 0, empty, empty, empty], [0, 1, 130 /* Find */, 'Find', 0 /* Unknown */, empty, 0, empty, empty, empty], [0, 1, 131 /* AudioVolumeMute */, 'AudioVolumeMute', 112 /* AudioVolumeMute */, 'AudioVolumeMute', 173, 'VK_VOLUME_MUTE', empty, empty], [0, 1, 132 /* AudioVolumeUp */, 'AudioVolumeUp', 113 /* AudioVolumeUp */, 'AudioVolumeUp', 175, 'VK_VOLUME_UP', empty, empty], [0, 1, 133 /* AudioVolumeDown */, 'AudioVolumeDown', 114 /* AudioVolumeDown */, 'AudioVolumeDown', 174, 'VK_VOLUME_DOWN', empty, empty], [105, 1, 134 /* NumpadComma */, 'NumpadComma', 105 /* NUMPAD_SEPARATOR */, 'NumPad_Separator', 108, 'VK_SEPARATOR', empty, empty], [110, 0, 135 /* IntlRo */, 'IntlRo', 110 /* ABNT_C1 */, 'ABNT_C1', 193, 'VK_ABNT_C1', empty, empty], [0, 1, 136 /* KanaMode */, 'KanaMode', 0 /* Unknown */, empty, 0, empty, empty, empty], [0, 0, 137 /* IntlYen */, 'IntlYen', 0 /* Unknown */, empty, 0, empty, empty, empty], [0, 1, 138 /* Convert */, 'Convert', 0 /* Unknown */, empty, 0, empty, empty, empty], [0, 1, 139 /* NonConvert */, 'NonConvert', 0 /* Unknown */, empty, 0, empty, empty, empty], [0, 1, 140 /* Lang1 */, 'Lang1', 0 /* Unknown */, empty, 0, empty, empty, empty], [0, 1, 141 /* Lang2 */, 'Lang2', 0 /* Unknown */, empty, 0, empty, empty, empty], [0, 1, 142 /* Lang3 */, 'Lang3', 0 /* Unknown */, empty, 0, empty, empty, empty], [0, 1, 143 /* Lang4 */, 'Lang4', 0 /* Unknown */, empty, 0, empty, empty, empty], [0, 1, 144 /* Lang5 */, 'Lang5', 0 /* Unknown */, empty, 0, empty, empty, empty], [0, 1, 145 /* Abort */, 'Abort', 0 /* Unknown */, empty, 0, empty, empty, empty], [0, 1, 146 /* Props */, 'Props', 0 /* Unknown */, empty, 0, empty, empty, empty], [0, 1, 147 /* NumpadParenLeft */, 'NumpadParenLeft', 0 /* Unknown */, empty, 0, empty, empty, empty], [0, 1, 148 /* NumpadParenRight */, 'NumpadParenRight', 0 /* Unknown */, empty, 0, empty, empty, empty], [0, 1, 149 /* NumpadBackspace */, 'NumpadBackspace', 0 /* Unknown */, empty, 0, empty, empty, empty], [0, 1, 150 /* NumpadMemoryStore */, 'NumpadMemoryStore', 0 /* Unknown */, empty, 0, empty, empty, empty], [0, 1, 151 /* NumpadMemoryRecall */, 'NumpadMemoryRecall', 0 /* Unknown */, empty, 0, empty, empty, empty], [0, 1, 152 /* NumpadMemoryClear */, 'NumpadMemoryClear', 0 /* Unknown */, empty, 0, empty, empty, empty], [0, 1, 153 /* NumpadMemoryAdd */, 'NumpadMemoryAdd', 0 /* Unknown */, empty, 0, empty, empty, empty], [0, 1, 154 /* NumpadMemorySubtract */, 'NumpadMemorySubtract', 0 /* Unknown */, empty, 0, empty, empty, empty], [0, 1, 155 /* NumpadClear */, 'NumpadClear', 0 /* Unknown */, empty, 0, empty, empty, empty], [0, 1, 156 /* NumpadClearEntry */, 'NumpadClearEntry', 0 /* Unknown */, empty, 0, empty, empty, empty], [5, 1, 0 /* None */, empty, 5 /* Ctrl */, 'Ctrl', 17, 'VK_CONTROL', empty, empty], [4, 1, 0 /* None */, empty, 4 /* Shift */, 'Shift', 16, 'VK_SHIFT', empty, empty], [6, 1, 0 /* None */, empty, 6 /* Alt */, 'Alt', 18, 'VK_MENU', empty, empty], [57, 1, 0 /* None */, empty, 57 /* Meta */, 'Meta', 0, 'VK_COMMAND', empty, empty], [5, 1, 157 /* ControlLeft */, 'ControlLeft', 5 /* Ctrl */, empty, 0, 'VK_LCONTROL', empty, empty], [4, 1, 158 /* ShiftLeft */, 'ShiftLeft', 4 /* Shift */, empty, 0, 'VK_LSHIFT', empty, empty], [6, 1, 159 /* AltLeft */, 'AltLeft', 6 /* Alt */, empty, 0, 'VK_LMENU', empty, empty], [57, 1, 160 /* MetaLeft */, 'MetaLeft', 57 /* Meta */, empty, 0, 'VK_LWIN', empty, empty], [5, 1, 161 /* ControlRight */, 'ControlRight', 5 /* Ctrl */, empty, 0, 'VK_RCONTROL', empty, empty], [4, 1, 162 /* ShiftRight */, 'ShiftRight', 4 /* Shift */, empty, 0, 'VK_RSHIFT', empty, empty], [6, 1, 163 /* AltRight */, 'AltRight', 6 /* Alt */, empty, 0, 'VK_RMENU', empty, empty], [57, 1, 164 /* MetaRight */, 'MetaRight', 57 /* Meta */, empty, 0, 'VK_RWIN', empty, empty], [0, 1, 165 /* BrightnessUp */, 'BrightnessUp', 0 /* Unknown */, empty, 0, empty, empty, empty], [0, 1, 166 /* BrightnessDown */, 'BrightnessDown', 0 /* Unknown */, empty, 0, empty, empty, empty], [0, 1, 167 /* MediaPlay */, 'MediaPlay', 0 /* Unknown */, empty, 0, empty, empty, empty], [0, 1, 168 /* MediaRecord */, 'MediaRecord', 0 /* Unknown */, empty, 0, empty, empty, empty], [0, 1, 169 /* MediaFastForward */, 'MediaFastForward', 0 /* Unknown */, empty, 0, empty, empty, empty], [0, 1, 170 /* MediaRewind */, 'MediaRewind', 0 /* Unknown */, empty, 0, empty, empty, empty], [114, 1, 171 /* MediaTrackNext */, 'MediaTrackNext', 119 /* MediaTrackNext */, 'MediaTrackNext', 176, 'VK_MEDIA_NEXT_TRACK', empty, empty], [115, 1, 172 /* MediaTrackPrevious */, 'MediaTrackPrevious', 120 /* MediaTrackPrevious */, 'MediaTrackPrevious', 177, 'VK_MEDIA_PREV_TRACK', empty, empty], [116, 1, 173 /* MediaStop */, 'MediaStop', 121 /* MediaStop */, 'MediaStop', 178, 'VK_MEDIA_STOP', empty, empty], [0, 1, 174 /* Eject */, 'Eject', 0 /* Unknown */, empty, 0, empty, empty, empty], [117, 1, 175 /* MediaPlayPause */, 'MediaPlayPause', 122 /* MediaPlayPause */, 'MediaPlayPause', 179, 'VK_MEDIA_PLAY_PAUSE', empty, empty], [0, 1, 176 /* MediaSelect */, 'MediaSelect', 123 /* LaunchMediaPlayer */, 'LaunchMediaPlayer', 181, 'VK_MEDIA_LAUNCH_MEDIA_SELECT', empty, empty], [0, 1, 177 /* LaunchMail */, 'LaunchMail', 124 /* LaunchMail */, 'LaunchMail', 180, 'VK_MEDIA_LAUNCH_MAIL', empty, empty], [0, 1, 178 /* LaunchApp2 */, 'LaunchApp2', 125 /* LaunchApp2 */, 'LaunchApp2', 183, 'VK_MEDIA_LAUNCH_APP2', empty, empty], [0, 1, 179 /* LaunchApp1 */, 'LaunchApp1', 0 /* Unknown */, empty, 0, 'VK_MEDIA_LAUNCH_APP1', empty, empty], [0, 1, 180 /* SelectTask */, 'SelectTask', 0 /* Unknown */, empty, 0, empty, empty, empty], [0, 1, 181 /* LaunchScreenSaver */, 'LaunchScreenSaver', 0 /* Unknown */, empty, 0, empty, empty, empty], [0, 1, 182 /* BrowserSearch */, 'BrowserSearch', 115 /* BrowserSearch */, 'BrowserSearch', 170, 'VK_BROWSER_SEARCH', empty, empty], [0, 1, 183 /* BrowserHome */, 'BrowserHome', 116 /* BrowserHome */, 'BrowserHome', 172, 'VK_BROWSER_HOME', empty, empty], [112, 1, 184 /* BrowserBack */, 'BrowserBack', 117 /* BrowserBack */, 'BrowserBack', 166, 'VK_BROWSER_BACK', empty, empty], [113, 1, 185 /* BrowserForward */, 'BrowserForward', 118 /* BrowserForward */, 'BrowserForward', 167, 'VK_BROWSER_FORWARD', empty, empty], [0, 1, 186 /* BrowserStop */, 'BrowserStop', 0 /* Unknown */, empty, 0, 'VK_BROWSER_STOP', empty, empty], [0, 1, 187 /* BrowserRefresh */, 'BrowserRefresh', 0 /* Unknown */, empty, 0, 'VK_BROWSER_REFRESH', empty, empty], [0, 1, 188 /* BrowserFavorites */, 'BrowserFavorites', 0 /* Unknown */, empty, 0, 'VK_BROWSER_FAVORITES', empty, empty], [0, 1, 189 /* ZoomToggle */, 'ZoomToggle', 0 /* Unknown */, empty, 0, empty, empty, empty], [0, 1, 190 /* MailReply */, 'MailReply', 0 /* Unknown */, empty, 0, empty, empty, empty], [0, 1, 191 /* MailForward */, 'MailForward', 0 /* Unknown */, empty, 0, empty, empty, empty], [0, 1, 192 /* MailSend */, 'MailSend', 0 /* Unknown */, empty, 0, empty, empty, empty],\n  // See https://lists.w3.org/Archives/Public/www-dom/2010JulSep/att-0182/keyCode-spec.html\n  // If an Input Method Editor is processing key input and the event is keydown, return 229.\n  [109, 1, 0 /* None */, empty, 109 /* KEY_IN_COMPOSITION */, 'KeyInComposition', 229, empty, empty, empty], [111, 1, 0 /* None */, empty, 111 /* ABNT_C2 */, 'ABNT_C2', 194, 'VK_ABNT_C2', empty, empty], [91, 1, 0 /* None */, empty, 91 /* OEM_8 */, 'OEM_8', 223, 'VK_OEM_8', empty, empty], [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_CLEAR', empty, empty], [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_KANA', empty, empty], [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_HANGUL', empty, empty], [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_JUNJA', empty, empty], [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_FINAL', empty, empty], [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_HANJA', empty, empty], [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_KANJI', empty, empty], [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_CONVERT', empty, empty], [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_NONCONVERT', empty, empty], [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_ACCEPT', empty, empty], [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_MODECHANGE', empty, empty], [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_SELECT', empty, empty], [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_PRINT', empty, empty], [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_EXECUTE', empty, empty], [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_SNAPSHOT', empty, empty], [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_HELP', empty, empty], [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_APPS', empty, empty], [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_PROCESSKEY', empty, empty], [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_PACKET', empty, empty], [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_DBE_SBCSCHAR', empty, empty], [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_DBE_DBCSCHAR', empty, empty], [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_ATTN', empty, empty], [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_CRSEL', empty, empty], [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_EXSEL', empty, empty], [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_EREOF', empty, empty], [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_PLAY', empty, empty], [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_ZOOM', empty, empty], [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_NONAME', empty, empty], [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_PA1', empty, empty], [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_OEM_CLEAR', empty, empty]];\n  let seenKeyCode = [];\n  let seenScanCode = [];\n  for (const mapping of mappings) {\n    const [_keyCodeOrd, immutable, scanCode, scanCodeStr, keyCode, keyCodeStr, eventKeyCode, vkey, usUserSettingsLabel, generalUserSettingsLabel] = mapping;\n    if (!seenScanCode[scanCode]) {\n      seenScanCode[scanCode] = true;\n      scanCodeIntToStr[scanCode] = scanCodeStr;\n      scanCodeStrToInt[scanCodeStr] = scanCode;\n      scanCodeLowerCaseStrToInt[scanCodeStr.toLowerCase()] = scanCode;\n      if (immutable) {\n        IMMUTABLE_CODE_TO_KEY_CODE[scanCode] = keyCode;\n        if (keyCode !== 0 /* Unknown */ && keyCode !== 3 /* Enter */ && keyCode !== 5 /* Ctrl */ && keyCode !== 4 /* Shift */ && keyCode !== 6 /* Alt */ && keyCode !== 57 /* Meta */) {\n          IMMUTABLE_KEY_CODE_TO_CODE[keyCode] = scanCode;\n        }\n      }\n    }\n    if (!seenKeyCode[keyCode]) {\n      seenKeyCode[keyCode] = true;\n      if (!keyCodeStr) {\n        throw new Error(\"String representation missing for key code \".concat(keyCode, \" around scan code \").concat(scanCodeStr));\n      }\n      uiMap.define(keyCode, keyCodeStr);\n      userSettingsUSMap.define(keyCode, usUserSettingsLabel || keyCodeStr);\n      userSettingsGeneralMap.define(keyCode, generalUserSettingsLabel || usUserSettingsLabel || keyCodeStr);\n    }\n    if (eventKeyCode) {\n      EVENT_KEY_CODE_MAP[eventKeyCode] = keyCode;\n    }\n    if (vkey) {\n      NATIVE_WINDOWS_KEY_CODE_TO_KEY_CODE[vkey] = keyCode;\n    }\n  }\n  // Manually added due to the exclusion above (due to duplication with NumpadEnter)\n  IMMUTABLE_KEY_CODE_TO_CODE[3 /* Enter */] = 46 /* Enter */;\n})();\nexport var KeyCodeUtils;\n(function (KeyCodeUtils) {\n  function toString(keyCode) {\n    return uiMap.keyCodeToStr(keyCode);\n  }\n  KeyCodeUtils.toString = toString;\n  function fromString(key) {\n    return uiMap.strToKeyCode(key);\n  }\n  KeyCodeUtils.fromString = fromString;\n  function toUserSettingsUS(keyCode) {\n    return userSettingsUSMap.keyCodeToStr(keyCode);\n  }\n  KeyCodeUtils.toUserSettingsUS = toUserSettingsUS;\n  function toUserSettingsGeneral(keyCode) {\n    return userSettingsGeneralMap.keyCodeToStr(keyCode);\n  }\n  KeyCodeUtils.toUserSettingsGeneral = toUserSettingsGeneral;\n  function fromUserSettings(key) {\n    return userSettingsUSMap.strToKeyCode(key) || userSettingsGeneralMap.strToKeyCode(key);\n  }\n  KeyCodeUtils.fromUserSettings = fromUserSettings;\n  function toElectronAccelerator(keyCode) {\n    if (keyCode >= 93 /* Numpad0 */ && keyCode <= 108 /* NumpadDivide */) {\n      // [Electron Accelerators] Electron is able to parse numpad keys, but unfortunately it\n      // renders them just as regular keys in menus. For example, num0 is rendered as \"0\",\n      // numdiv is rendered as \"/\", numsub is rendered as \"-\".\n      //\n      // This can lead to incredible confusion, as it makes numpad based keybindings indistinguishable\n      // from keybindings based on regular keys.\n      //\n      // We therefore need to fall back to custom rendering for numpad keys.\n      return null;\n    }\n    switch (keyCode) {\n      case 16 /* UpArrow */:\n        return 'Up';\n      case 18 /* DownArrow */:\n        return 'Down';\n      case 15 /* LeftArrow */:\n        return 'Left';\n      case 17 /* RightArrow */:\n        return 'Right';\n    }\n    return uiMap.keyCodeToStr(keyCode);\n  }\n  KeyCodeUtils.toElectronAccelerator = toElectronAccelerator;\n})(KeyCodeUtils || (KeyCodeUtils = {}));\nexport function KeyChord(firstPart, secondPart) {\n  const chordPart = (secondPart & 0x0000FFFF) << 16 >>> 0;\n  return (firstPart | chordPart) >>> 0;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// THIS IS A GENERATED FILE. DO NOT EDIT DIRECTLY.\nexport var AccessibilitySupport;\n(function (AccessibilitySupport) {\n  /**\n   * This should be the browser case where it is not known if a screen reader is attached or no.\n   */\n  AccessibilitySupport[AccessibilitySupport[\"Unknown\"] = 0] = \"Unknown\";\n  AccessibilitySupport[AccessibilitySupport[\"Disabled\"] = 1] = \"Disabled\";\n  AccessibilitySupport[AccessibilitySupport[\"Enabled\"] = 2] = \"Enabled\";\n})(AccessibilitySupport || (AccessibilitySupport = {}));\nexport var CompletionItemInsertTextRule;\n(function (CompletionItemInsertTextRule) {\n  /**\n   * Adjust whitespace/indentation of multiline insert texts to\n   * match the current line indentation.\n   */\n  CompletionItemInsertTextRule[CompletionItemInsertTextRule[\"KeepWhitespace\"] = 1] = \"KeepWhitespace\";\n  /**\n   * `insertText` is a snippet.\n   */\n  CompletionItemInsertTextRule[CompletionItemInsertTextRule[\"InsertAsSnippet\"] = 4] = \"InsertAsSnippet\";\n})(CompletionItemInsertTextRule || (CompletionItemInsertTextRule = {}));\nexport var CompletionItemKind;\n(function (CompletionItemKind) {\n  CompletionItemKind[CompletionItemKind[\"Method\"] = 0] = \"Method\";\n  CompletionItemKind[CompletionItemKind[\"Function\"] = 1] = \"Function\";\n  CompletionItemKind[CompletionItemKind[\"Constructor\"] = 2] = \"Constructor\";\n  CompletionItemKind[CompletionItemKind[\"Field\"] = 3] = \"Field\";\n  CompletionItemKind[CompletionItemKind[\"Variable\"] = 4] = \"Variable\";\n  CompletionItemKind[CompletionItemKind[\"Class\"] = 5] = \"Class\";\n  CompletionItemKind[CompletionItemKind[\"Struct\"] = 6] = \"Struct\";\n  CompletionItemKind[CompletionItemKind[\"Interface\"] = 7] = \"Interface\";\n  CompletionItemKind[CompletionItemKind[\"Module\"] = 8] = \"Module\";\n  CompletionItemKind[CompletionItemKind[\"Property\"] = 9] = \"Property\";\n  CompletionItemKind[CompletionItemKind[\"Event\"] = 10] = \"Event\";\n  CompletionItemKind[CompletionItemKind[\"Operator\"] = 11] = \"Operator\";\n  CompletionItemKind[CompletionItemKind[\"Unit\"] = 12] = \"Unit\";\n  CompletionItemKind[CompletionItemKind[\"Value\"] = 13] = \"Value\";\n  CompletionItemKind[CompletionItemKind[\"Constant\"] = 14] = \"Constant\";\n  CompletionItemKind[CompletionItemKind[\"Enum\"] = 15] = \"Enum\";\n  CompletionItemKind[CompletionItemKind[\"EnumMember\"] = 16] = \"EnumMember\";\n  CompletionItemKind[CompletionItemKind[\"Keyword\"] = 17] = \"Keyword\";\n  CompletionItemKind[CompletionItemKind[\"Text\"] = 18] = \"Text\";\n  CompletionItemKind[CompletionItemKind[\"Color\"] = 19] = \"Color\";\n  CompletionItemKind[CompletionItemKind[\"File\"] = 20] = \"File\";\n  CompletionItemKind[CompletionItemKind[\"Reference\"] = 21] = \"Reference\";\n  CompletionItemKind[CompletionItemKind[\"Customcolor\"] = 22] = \"Customcolor\";\n  CompletionItemKind[CompletionItemKind[\"Folder\"] = 23] = \"Folder\";\n  CompletionItemKind[CompletionItemKind[\"TypeParameter\"] = 24] = \"TypeParameter\";\n  CompletionItemKind[CompletionItemKind[\"User\"] = 25] = \"User\";\n  CompletionItemKind[CompletionItemKind[\"Issue\"] = 26] = \"Issue\";\n  CompletionItemKind[CompletionItemKind[\"Snippet\"] = 27] = \"Snippet\";\n})(CompletionItemKind || (CompletionItemKind = {}));\nexport var CompletionItemTag;\n(function (CompletionItemTag) {\n  CompletionItemTag[CompletionItemTag[\"Deprecated\"] = 1] = \"Deprecated\";\n})(CompletionItemTag || (CompletionItemTag = {}));\n/**\n * How a suggest provider was triggered.\n */\nexport var CompletionTriggerKind;\n(function (CompletionTriggerKind) {\n  CompletionTriggerKind[CompletionTriggerKind[\"Invoke\"] = 0] = \"Invoke\";\n  CompletionTriggerKind[CompletionTriggerKind[\"TriggerCharacter\"] = 1] = \"TriggerCharacter\";\n  CompletionTriggerKind[CompletionTriggerKind[\"TriggerForIncompleteCompletions\"] = 2] = \"TriggerForIncompleteCompletions\";\n})(CompletionTriggerKind || (CompletionTriggerKind = {}));\n/**\n * A positioning preference for rendering content widgets.\n */\nexport var ContentWidgetPositionPreference;\n(function (ContentWidgetPositionPreference) {\n  /**\n   * Place the content widget exactly at a position\n   */\n  ContentWidgetPositionPreference[ContentWidgetPositionPreference[\"EXACT\"] = 0] = \"EXACT\";\n  /**\n   * Place the content widget above a position\n   */\n  ContentWidgetPositionPreference[ContentWidgetPositionPreference[\"ABOVE\"] = 1] = \"ABOVE\";\n  /**\n   * Place the content widget below a position\n   */\n  ContentWidgetPositionPreference[ContentWidgetPositionPreference[\"BELOW\"] = 2] = \"BELOW\";\n})(ContentWidgetPositionPreference || (ContentWidgetPositionPreference = {}));\n/**\n * Describes the reason the cursor has changed its position.\n */\nexport var CursorChangeReason;\n(function (CursorChangeReason) {\n  /**\n   * Unknown or not set.\n   */\n  CursorChangeReason[CursorChangeReason[\"NotSet\"] = 0] = \"NotSet\";\n  /**\n   * A `model.setValue()` was called.\n   */\n  CursorChangeReason[CursorChangeReason[\"ContentFlush\"] = 1] = \"ContentFlush\";\n  /**\n   * The `model` has been changed outside of this cursor and the cursor recovers its position from associated markers.\n   */\n  CursorChangeReason[CursorChangeReason[\"RecoverFromMarkers\"] = 2] = \"RecoverFromMarkers\";\n  /**\n   * There was an explicit user gesture.\n   */\n  CursorChangeReason[CursorChangeReason[\"Explicit\"] = 3] = \"Explicit\";\n  /**\n   * There was a Paste.\n   */\n  CursorChangeReason[CursorChangeReason[\"Paste\"] = 4] = \"Paste\";\n  /**\n   * There was an Undo.\n   */\n  CursorChangeReason[CursorChangeReason[\"Undo\"] = 5] = \"Undo\";\n  /**\n   * There was a Redo.\n   */\n  CursorChangeReason[CursorChangeReason[\"Redo\"] = 6] = \"Redo\";\n})(CursorChangeReason || (CursorChangeReason = {}));\n/**\n * The default end of line to use when instantiating models.\n */\nexport var DefaultEndOfLine;\n(function (DefaultEndOfLine) {\n  /**\n   * Use line feed (\\n) as the end of line character.\n   */\n  DefaultEndOfLine[DefaultEndOfLine[\"LF\"] = 1] = \"LF\";\n  /**\n   * Use carriage return and line feed (\\r\\n) as the end of line character.\n   */\n  DefaultEndOfLine[DefaultEndOfLine[\"CRLF\"] = 2] = \"CRLF\";\n})(DefaultEndOfLine || (DefaultEndOfLine = {}));\n/**\n * A document highlight kind.\n */\nexport var DocumentHighlightKind;\n(function (DocumentHighlightKind) {\n  /**\n   * A textual occurrence.\n   */\n  DocumentHighlightKind[DocumentHighlightKind[\"Text\"] = 0] = \"Text\";\n  /**\n   * Read-access of a symbol, like reading a variable.\n   */\n  DocumentHighlightKind[DocumentHighlightKind[\"Read\"] = 1] = \"Read\";\n  /**\n   * Write-access of a symbol, like writing to a variable.\n   */\n  DocumentHighlightKind[DocumentHighlightKind[\"Write\"] = 2] = \"Write\";\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\n/**\n * Configuration options for auto indentation in the editor\n */\nexport var EditorAutoIndentStrategy;\n(function (EditorAutoIndentStrategy) {\n  EditorAutoIndentStrategy[EditorAutoIndentStrategy[\"None\"] = 0] = \"None\";\n  EditorAutoIndentStrategy[EditorAutoIndentStrategy[\"Keep\"] = 1] = \"Keep\";\n  EditorAutoIndentStrategy[EditorAutoIndentStrategy[\"Brackets\"] = 2] = \"Brackets\";\n  EditorAutoIndentStrategy[EditorAutoIndentStrategy[\"Advanced\"] = 3] = \"Advanced\";\n  EditorAutoIndentStrategy[EditorAutoIndentStrategy[\"Full\"] = 4] = \"Full\";\n})(EditorAutoIndentStrategy || (EditorAutoIndentStrategy = {}));\nexport var EditorOption;\n(function (EditorOption) {\n  EditorOption[EditorOption[\"acceptSuggestionOnCommitCharacter\"] = 0] = \"acceptSuggestionOnCommitCharacter\";\n  EditorOption[EditorOption[\"acceptSuggestionOnEnter\"] = 1] = \"acceptSuggestionOnEnter\";\n  EditorOption[EditorOption[\"accessibilitySupport\"] = 2] = \"accessibilitySupport\";\n  EditorOption[EditorOption[\"accessibilityPageSize\"] = 3] = \"accessibilityPageSize\";\n  EditorOption[EditorOption[\"ariaLabel\"] = 4] = \"ariaLabel\";\n  EditorOption[EditorOption[\"autoClosingBrackets\"] = 5] = \"autoClosingBrackets\";\n  EditorOption[EditorOption[\"autoClosingDelete\"] = 6] = \"autoClosingDelete\";\n  EditorOption[EditorOption[\"autoClosingOvertype\"] = 7] = \"autoClosingOvertype\";\n  EditorOption[EditorOption[\"autoClosingQuotes\"] = 8] = \"autoClosingQuotes\";\n  EditorOption[EditorOption[\"autoIndent\"] = 9] = \"autoIndent\";\n  EditorOption[EditorOption[\"automaticLayout\"] = 10] = \"automaticLayout\";\n  EditorOption[EditorOption[\"autoSurround\"] = 11] = \"autoSurround\";\n  EditorOption[EditorOption[\"bracketPairColorization\"] = 12] = \"bracketPairColorization\";\n  EditorOption[EditorOption[\"guides\"] = 13] = \"guides\";\n  EditorOption[EditorOption[\"codeLens\"] = 14] = \"codeLens\";\n  EditorOption[EditorOption[\"codeLensFontFamily\"] = 15] = \"codeLensFontFamily\";\n  EditorOption[EditorOption[\"codeLensFontSize\"] = 16] = \"codeLensFontSize\";\n  EditorOption[EditorOption[\"colorDecorators\"] = 17] = \"colorDecorators\";\n  EditorOption[EditorOption[\"columnSelection\"] = 18] = \"columnSelection\";\n  EditorOption[EditorOption[\"comments\"] = 19] = \"comments\";\n  EditorOption[EditorOption[\"contextmenu\"] = 20] = \"contextmenu\";\n  EditorOption[EditorOption[\"copyWithSyntaxHighlighting\"] = 21] = \"copyWithSyntaxHighlighting\";\n  EditorOption[EditorOption[\"cursorBlinking\"] = 22] = \"cursorBlinking\";\n  EditorOption[EditorOption[\"cursorSmoothCaretAnimation\"] = 23] = \"cursorSmoothCaretAnimation\";\n  EditorOption[EditorOption[\"cursorStyle\"] = 24] = \"cursorStyle\";\n  EditorOption[EditorOption[\"cursorSurroundingLines\"] = 25] = \"cursorSurroundingLines\";\n  EditorOption[EditorOption[\"cursorSurroundingLinesStyle\"] = 26] = \"cursorSurroundingLinesStyle\";\n  EditorOption[EditorOption[\"cursorWidth\"] = 27] = \"cursorWidth\";\n  EditorOption[EditorOption[\"disableLayerHinting\"] = 28] = \"disableLayerHinting\";\n  EditorOption[EditorOption[\"disableMonospaceOptimizations\"] = 29] = \"disableMonospaceOptimizations\";\n  EditorOption[EditorOption[\"domReadOnly\"] = 30] = \"domReadOnly\";\n  EditorOption[EditorOption[\"dragAndDrop\"] = 31] = \"dragAndDrop\";\n  EditorOption[EditorOption[\"emptySelectionClipboard\"] = 32] = \"emptySelectionClipboard\";\n  EditorOption[EditorOption[\"extraEditorClassName\"] = 33] = \"extraEditorClassName\";\n  EditorOption[EditorOption[\"fastScrollSensitivity\"] = 34] = \"fastScrollSensitivity\";\n  EditorOption[EditorOption[\"find\"] = 35] = \"find\";\n  EditorOption[EditorOption[\"fixedOverflowWidgets\"] = 36] = \"fixedOverflowWidgets\";\n  EditorOption[EditorOption[\"folding\"] = 37] = \"folding\";\n  EditorOption[EditorOption[\"foldingStrategy\"] = 38] = \"foldingStrategy\";\n  EditorOption[EditorOption[\"foldingHighlight\"] = 39] = \"foldingHighlight\";\n  EditorOption[EditorOption[\"foldingImportsByDefault\"] = 40] = \"foldingImportsByDefault\";\n  EditorOption[EditorOption[\"unfoldOnClickAfterEndOfLine\"] = 41] = \"unfoldOnClickAfterEndOfLine\";\n  EditorOption[EditorOption[\"fontFamily\"] = 42] = \"fontFamily\";\n  EditorOption[EditorOption[\"fontInfo\"] = 43] = \"fontInfo\";\n  EditorOption[EditorOption[\"fontLigatures\"] = 44] = \"fontLigatures\";\n  EditorOption[EditorOption[\"fontSize\"] = 45] = \"fontSize\";\n  EditorOption[EditorOption[\"fontWeight\"] = 46] = \"fontWeight\";\n  EditorOption[EditorOption[\"formatOnPaste\"] = 47] = \"formatOnPaste\";\n  EditorOption[EditorOption[\"formatOnType\"] = 48] = \"formatOnType\";\n  EditorOption[EditorOption[\"glyphMargin\"] = 49] = \"glyphMargin\";\n  EditorOption[EditorOption[\"gotoLocation\"] = 50] = \"gotoLocation\";\n  EditorOption[EditorOption[\"hideCursorInOverviewRuler\"] = 51] = \"hideCursorInOverviewRuler\";\n  EditorOption[EditorOption[\"hover\"] = 52] = \"hover\";\n  EditorOption[EditorOption[\"inDiffEditor\"] = 53] = \"inDiffEditor\";\n  EditorOption[EditorOption[\"inlineSuggest\"] = 54] = \"inlineSuggest\";\n  EditorOption[EditorOption[\"letterSpacing\"] = 55] = \"letterSpacing\";\n  EditorOption[EditorOption[\"lightbulb\"] = 56] = \"lightbulb\";\n  EditorOption[EditorOption[\"lineDecorationsWidth\"] = 57] = \"lineDecorationsWidth\";\n  EditorOption[EditorOption[\"lineHeight\"] = 58] = \"lineHeight\";\n  EditorOption[EditorOption[\"lineNumbers\"] = 59] = \"lineNumbers\";\n  EditorOption[EditorOption[\"lineNumbersMinChars\"] = 60] = \"lineNumbersMinChars\";\n  EditorOption[EditorOption[\"linkedEditing\"] = 61] = \"linkedEditing\";\n  EditorOption[EditorOption[\"links\"] = 62] = \"links\";\n  EditorOption[EditorOption[\"matchBrackets\"] = 63] = \"matchBrackets\";\n  EditorOption[EditorOption[\"minimap\"] = 64] = \"minimap\";\n  EditorOption[EditorOption[\"mouseStyle\"] = 65] = \"mouseStyle\";\n  EditorOption[EditorOption[\"mouseWheelScrollSensitivity\"] = 66] = \"mouseWheelScrollSensitivity\";\n  EditorOption[EditorOption[\"mouseWheelZoom\"] = 67] = \"mouseWheelZoom\";\n  EditorOption[EditorOption[\"multiCursorMergeOverlapping\"] = 68] = \"multiCursorMergeOverlapping\";\n  EditorOption[EditorOption[\"multiCursorModifier\"] = 69] = \"multiCursorModifier\";\n  EditorOption[EditorOption[\"multiCursorPaste\"] = 70] = \"multiCursorPaste\";\n  EditorOption[EditorOption[\"occurrencesHighlight\"] = 71] = \"occurrencesHighlight\";\n  EditorOption[EditorOption[\"overviewRulerBorder\"] = 72] = \"overviewRulerBorder\";\n  EditorOption[EditorOption[\"overviewRulerLanes\"] = 73] = \"overviewRulerLanes\";\n  EditorOption[EditorOption[\"padding\"] = 74] = \"padding\";\n  EditorOption[EditorOption[\"parameterHints\"] = 75] = \"parameterHints\";\n  EditorOption[EditorOption[\"peekWidgetDefaultFocus\"] = 76] = \"peekWidgetDefaultFocus\";\n  EditorOption[EditorOption[\"definitionLinkOpensInPeek\"] = 77] = \"definitionLinkOpensInPeek\";\n  EditorOption[EditorOption[\"quickSuggestions\"] = 78] = \"quickSuggestions\";\n  EditorOption[EditorOption[\"quickSuggestionsDelay\"] = 79] = \"quickSuggestionsDelay\";\n  EditorOption[EditorOption[\"readOnly\"] = 80] = \"readOnly\";\n  EditorOption[EditorOption[\"renameOnType\"] = 81] = \"renameOnType\";\n  EditorOption[EditorOption[\"renderControlCharacters\"] = 82] = \"renderControlCharacters\";\n  EditorOption[EditorOption[\"renderFinalNewline\"] = 83] = \"renderFinalNewline\";\n  EditorOption[EditorOption[\"renderLineHighlight\"] = 84] = \"renderLineHighlight\";\n  EditorOption[EditorOption[\"renderLineHighlightOnlyWhenFocus\"] = 85] = \"renderLineHighlightOnlyWhenFocus\";\n  EditorOption[EditorOption[\"renderValidationDecorations\"] = 86] = \"renderValidationDecorations\";\n  EditorOption[EditorOption[\"renderWhitespace\"] = 87] = \"renderWhitespace\";\n  EditorOption[EditorOption[\"revealHorizontalRightPadding\"] = 88] = \"revealHorizontalRightPadding\";\n  EditorOption[EditorOption[\"roundedSelection\"] = 89] = \"roundedSelection\";\n  EditorOption[EditorOption[\"rulers\"] = 90] = \"rulers\";\n  EditorOption[EditorOption[\"scrollbar\"] = 91] = \"scrollbar\";\n  EditorOption[EditorOption[\"scrollBeyondLastColumn\"] = 92] = \"scrollBeyondLastColumn\";\n  EditorOption[EditorOption[\"scrollBeyondLastLine\"] = 93] = \"scrollBeyondLastLine\";\n  EditorOption[EditorOption[\"scrollPredominantAxis\"] = 94] = \"scrollPredominantAxis\";\n  EditorOption[EditorOption[\"selectionClipboard\"] = 95] = \"selectionClipboard\";\n  EditorOption[EditorOption[\"selectionHighlight\"] = 96] = \"selectionHighlight\";\n  EditorOption[EditorOption[\"selectOnLineNumbers\"] = 97] = \"selectOnLineNumbers\";\n  EditorOption[EditorOption[\"showFoldingControls\"] = 98] = \"showFoldingControls\";\n  EditorOption[EditorOption[\"showUnused\"] = 99] = \"showUnused\";\n  EditorOption[EditorOption[\"snippetSuggestions\"] = 100] = \"snippetSuggestions\";\n  EditorOption[EditorOption[\"smartSelect\"] = 101] = \"smartSelect\";\n  EditorOption[EditorOption[\"smoothScrolling\"] = 102] = \"smoothScrolling\";\n  EditorOption[EditorOption[\"stickyTabStops\"] = 103] = \"stickyTabStops\";\n  EditorOption[EditorOption[\"stopRenderingLineAfter\"] = 104] = \"stopRenderingLineAfter\";\n  EditorOption[EditorOption[\"suggest\"] = 105] = \"suggest\";\n  EditorOption[EditorOption[\"suggestFontSize\"] = 106] = \"suggestFontSize\";\n  EditorOption[EditorOption[\"suggestLineHeight\"] = 107] = \"suggestLineHeight\";\n  EditorOption[EditorOption[\"suggestOnTriggerCharacters\"] = 108] = \"suggestOnTriggerCharacters\";\n  EditorOption[EditorOption[\"suggestSelection\"] = 109] = \"suggestSelection\";\n  EditorOption[EditorOption[\"tabCompletion\"] = 110] = \"tabCompletion\";\n  EditorOption[EditorOption[\"tabIndex\"] = 111] = \"tabIndex\";\n  EditorOption[EditorOption[\"unusualLineTerminators\"] = 112] = \"unusualLineTerminators\";\n  EditorOption[EditorOption[\"useShadowDOM\"] = 113] = \"useShadowDOM\";\n  EditorOption[EditorOption[\"useTabStops\"] = 114] = \"useTabStops\";\n  EditorOption[EditorOption[\"wordSeparators\"] = 115] = \"wordSeparators\";\n  EditorOption[EditorOption[\"wordWrap\"] = 116] = \"wordWrap\";\n  EditorOption[EditorOption[\"wordWrapBreakAfterCharacters\"] = 117] = \"wordWrapBreakAfterCharacters\";\n  EditorOption[EditorOption[\"wordWrapBreakBeforeCharacters\"] = 118] = \"wordWrapBreakBeforeCharacters\";\n  EditorOption[EditorOption[\"wordWrapColumn\"] = 119] = \"wordWrapColumn\";\n  EditorOption[EditorOption[\"wordWrapOverride1\"] = 120] = \"wordWrapOverride1\";\n  EditorOption[EditorOption[\"wordWrapOverride2\"] = 121] = \"wordWrapOverride2\";\n  EditorOption[EditorOption[\"wrappingIndent\"] = 122] = \"wrappingIndent\";\n  EditorOption[EditorOption[\"wrappingStrategy\"] = 123] = \"wrappingStrategy\";\n  EditorOption[EditorOption[\"showDeprecated\"] = 124] = \"showDeprecated\";\n  EditorOption[EditorOption[\"inlayHints\"] = 125] = \"inlayHints\";\n  EditorOption[EditorOption[\"editorClassName\"] = 126] = \"editorClassName\";\n  EditorOption[EditorOption[\"pixelRatio\"] = 127] = \"pixelRatio\";\n  EditorOption[EditorOption[\"tabFocusMode\"] = 128] = \"tabFocusMode\";\n  EditorOption[EditorOption[\"layoutInfo\"] = 129] = \"layoutInfo\";\n  EditorOption[EditorOption[\"wrappingInfo\"] = 130] = \"wrappingInfo\";\n})(EditorOption || (EditorOption = {}));\n/**\n * End of line character preference.\n */\nexport var EndOfLinePreference;\n(function (EndOfLinePreference) {\n  /**\n   * Use the end of line character identified in the text buffer.\n   */\n  EndOfLinePreference[EndOfLinePreference[\"TextDefined\"] = 0] = \"TextDefined\";\n  /**\n   * Use line feed (\\n) as the end of line character.\n   */\n  EndOfLinePreference[EndOfLinePreference[\"LF\"] = 1] = \"LF\";\n  /**\n   * Use carriage return and line feed (\\r\\n) as the end of line character.\n   */\n  EndOfLinePreference[EndOfLinePreference[\"CRLF\"] = 2] = \"CRLF\";\n})(EndOfLinePreference || (EndOfLinePreference = {}));\n/**\n * End of line character preference.\n */\nexport var EndOfLineSequence;\n(function (EndOfLineSequence) {\n  /**\n   * Use line feed (\\n) as the end of line character.\n   */\n  EndOfLineSequence[EndOfLineSequence[\"LF\"] = 0] = \"LF\";\n  /**\n   * Use carriage return and line feed (\\r\\n) as the end of line character.\n   */\n  EndOfLineSequence[EndOfLineSequence[\"CRLF\"] = 1] = \"CRLF\";\n})(EndOfLineSequence || (EndOfLineSequence = {}));\n/**\n * Describes what to do with the indentation when pressing Enter.\n */\nexport var IndentAction;\n(function (IndentAction) {\n  /**\n   * Insert new line and copy the previous line's indentation.\n   */\n  IndentAction[IndentAction[\"None\"] = 0] = \"None\";\n  /**\n   * Insert new line and indent once (relative to the previous line's indentation).\n   */\n  IndentAction[IndentAction[\"Indent\"] = 1] = \"Indent\";\n  /**\n   * Insert two new lines:\n   *  - the first one indented which will hold the cursor\n   *  - the second one at the same indentation level\n   */\n  IndentAction[IndentAction[\"IndentOutdent\"] = 2] = \"IndentOutdent\";\n  /**\n   * Insert new line and outdent once (relative to the previous line's indentation).\n   */\n  IndentAction[IndentAction[\"Outdent\"] = 3] = \"Outdent\";\n})(IndentAction || (IndentAction = {}));\nexport var InlayHintKind;\n(function (InlayHintKind) {\n  InlayHintKind[InlayHintKind[\"Other\"] = 0] = \"Other\";\n  InlayHintKind[InlayHintKind[\"Type\"] = 1] = \"Type\";\n  InlayHintKind[InlayHintKind[\"Parameter\"] = 2] = \"Parameter\";\n})(InlayHintKind || (InlayHintKind = {}));\n/**\n * How an {@link InlineCompletionsProvider inline completion provider} was triggered.\n */\nexport var InlineCompletionTriggerKind;\n(function (InlineCompletionTriggerKind) {\n  /**\n   * Completion was triggered automatically while editing.\n   * It is sufficient to return a single completion item in this case.\n   */\n  InlineCompletionTriggerKind[InlineCompletionTriggerKind[\"Automatic\"] = 0] = \"Automatic\";\n  /**\n   * Completion was triggered explicitly by a user gesture.\n   * Return multiple completion items to enable cycling through them.\n   */\n  InlineCompletionTriggerKind[InlineCompletionTriggerKind[\"Explicit\"] = 1] = \"Explicit\";\n})(InlineCompletionTriggerKind || (InlineCompletionTriggerKind = {}));\n/**\n * Virtual Key Codes, the value does not hold any inherent meaning.\n * Inspired somewhat from https://msdn.microsoft.com/en-us/library/windows/desktop/dd375731(v=vs.85).aspx\n * But these are \"more general\", as they should work across browsers & OS`s.\n */\nexport var KeyCode;\n(function (KeyCode) {\n  KeyCode[KeyCode[\"DependsOnKbLayout\"] = -1] = \"DependsOnKbLayout\";\n  /**\n   * Placed first to cover the 0 value of the enum.\n   */\n  KeyCode[KeyCode[\"Unknown\"] = 0] = \"Unknown\";\n  KeyCode[KeyCode[\"Backspace\"] = 1] = \"Backspace\";\n  KeyCode[KeyCode[\"Tab\"] = 2] = \"Tab\";\n  KeyCode[KeyCode[\"Enter\"] = 3] = \"Enter\";\n  KeyCode[KeyCode[\"Shift\"] = 4] = \"Shift\";\n  KeyCode[KeyCode[\"Ctrl\"] = 5] = \"Ctrl\";\n  KeyCode[KeyCode[\"Alt\"] = 6] = \"Alt\";\n  KeyCode[KeyCode[\"PauseBreak\"] = 7] = \"PauseBreak\";\n  KeyCode[KeyCode[\"CapsLock\"] = 8] = \"CapsLock\";\n  KeyCode[KeyCode[\"Escape\"] = 9] = \"Escape\";\n  KeyCode[KeyCode[\"Space\"] = 10] = \"Space\";\n  KeyCode[KeyCode[\"PageUp\"] = 11] = \"PageUp\";\n  KeyCode[KeyCode[\"PageDown\"] = 12] = \"PageDown\";\n  KeyCode[KeyCode[\"End\"] = 13] = \"End\";\n  KeyCode[KeyCode[\"Home\"] = 14] = \"Home\";\n  KeyCode[KeyCode[\"LeftArrow\"] = 15] = \"LeftArrow\";\n  KeyCode[KeyCode[\"UpArrow\"] = 16] = \"UpArrow\";\n  KeyCode[KeyCode[\"RightArrow\"] = 17] = \"RightArrow\";\n  KeyCode[KeyCode[\"DownArrow\"] = 18] = \"DownArrow\";\n  KeyCode[KeyCode[\"Insert\"] = 19] = \"Insert\";\n  KeyCode[KeyCode[\"Delete\"] = 20] = \"Delete\";\n  KeyCode[KeyCode[\"Digit0\"] = 21] = \"Digit0\";\n  KeyCode[KeyCode[\"Digit1\"] = 22] = \"Digit1\";\n  KeyCode[KeyCode[\"Digit2\"] = 23] = \"Digit2\";\n  KeyCode[KeyCode[\"Digit3\"] = 24] = \"Digit3\";\n  KeyCode[KeyCode[\"Digit4\"] = 25] = \"Digit4\";\n  KeyCode[KeyCode[\"Digit5\"] = 26] = \"Digit5\";\n  KeyCode[KeyCode[\"Digit6\"] = 27] = \"Digit6\";\n  KeyCode[KeyCode[\"Digit7\"] = 28] = \"Digit7\";\n  KeyCode[KeyCode[\"Digit8\"] = 29] = \"Digit8\";\n  KeyCode[KeyCode[\"Digit9\"] = 30] = \"Digit9\";\n  KeyCode[KeyCode[\"KeyA\"] = 31] = \"KeyA\";\n  KeyCode[KeyCode[\"KeyB\"] = 32] = \"KeyB\";\n  KeyCode[KeyCode[\"KeyC\"] = 33] = \"KeyC\";\n  KeyCode[KeyCode[\"KeyD\"] = 34] = \"KeyD\";\n  KeyCode[KeyCode[\"KeyE\"] = 35] = \"KeyE\";\n  KeyCode[KeyCode[\"KeyF\"] = 36] = \"KeyF\";\n  KeyCode[KeyCode[\"KeyG\"] = 37] = \"KeyG\";\n  KeyCode[KeyCode[\"KeyH\"] = 38] = \"KeyH\";\n  KeyCode[KeyCode[\"KeyI\"] = 39] = \"KeyI\";\n  KeyCode[KeyCode[\"KeyJ\"] = 40] = \"KeyJ\";\n  KeyCode[KeyCode[\"KeyK\"] = 41] = \"KeyK\";\n  KeyCode[KeyCode[\"KeyL\"] = 42] = \"KeyL\";\n  KeyCode[KeyCode[\"KeyM\"] = 43] = \"KeyM\";\n  KeyCode[KeyCode[\"KeyN\"] = 44] = \"KeyN\";\n  KeyCode[KeyCode[\"KeyO\"] = 45] = \"KeyO\";\n  KeyCode[KeyCode[\"KeyP\"] = 46] = \"KeyP\";\n  KeyCode[KeyCode[\"KeyQ\"] = 47] = \"KeyQ\";\n  KeyCode[KeyCode[\"KeyR\"] = 48] = \"KeyR\";\n  KeyCode[KeyCode[\"KeyS\"] = 49] = \"KeyS\";\n  KeyCode[KeyCode[\"KeyT\"] = 50] = \"KeyT\";\n  KeyCode[KeyCode[\"KeyU\"] = 51] = \"KeyU\";\n  KeyCode[KeyCode[\"KeyV\"] = 52] = \"KeyV\";\n  KeyCode[KeyCode[\"KeyW\"] = 53] = \"KeyW\";\n  KeyCode[KeyCode[\"KeyX\"] = 54] = \"KeyX\";\n  KeyCode[KeyCode[\"KeyY\"] = 55] = \"KeyY\";\n  KeyCode[KeyCode[\"KeyZ\"] = 56] = \"KeyZ\";\n  KeyCode[KeyCode[\"Meta\"] = 57] = \"Meta\";\n  KeyCode[KeyCode[\"ContextMenu\"] = 58] = \"ContextMenu\";\n  KeyCode[KeyCode[\"F1\"] = 59] = \"F1\";\n  KeyCode[KeyCode[\"F2\"] = 60] = \"F2\";\n  KeyCode[KeyCode[\"F3\"] = 61] = \"F3\";\n  KeyCode[KeyCode[\"F4\"] = 62] = \"F4\";\n  KeyCode[KeyCode[\"F5\"] = 63] = \"F5\";\n  KeyCode[KeyCode[\"F6\"] = 64] = \"F6\";\n  KeyCode[KeyCode[\"F7\"] = 65] = \"F7\";\n  KeyCode[KeyCode[\"F8\"] = 66] = \"F8\";\n  KeyCode[KeyCode[\"F9\"] = 67] = \"F9\";\n  KeyCode[KeyCode[\"F10\"] = 68] = \"F10\";\n  KeyCode[KeyCode[\"F11\"] = 69] = \"F11\";\n  KeyCode[KeyCode[\"F12\"] = 70] = \"F12\";\n  KeyCode[KeyCode[\"F13\"] = 71] = \"F13\";\n  KeyCode[KeyCode[\"F14\"] = 72] = \"F14\";\n  KeyCode[KeyCode[\"F15\"] = 73] = \"F15\";\n  KeyCode[KeyCode[\"F16\"] = 74] = \"F16\";\n  KeyCode[KeyCode[\"F17\"] = 75] = \"F17\";\n  KeyCode[KeyCode[\"F18\"] = 76] = \"F18\";\n  KeyCode[KeyCode[\"F19\"] = 77] = \"F19\";\n  KeyCode[KeyCode[\"NumLock\"] = 78] = \"NumLock\";\n  KeyCode[KeyCode[\"ScrollLock\"] = 79] = \"ScrollLock\";\n  /**\n   * Used for miscellaneous characters; it can vary by keyboard.\n   * For the US standard keyboard, the ';:' key\n   */\n  KeyCode[KeyCode[\"Semicolon\"] = 80] = \"Semicolon\";\n  /**\n   * For any country/region, the '+' key\n   * For the US standard keyboard, the '=+' key\n   */\n  KeyCode[KeyCode[\"Equal\"] = 81] = \"Equal\";\n  /**\n   * For any country/region, the ',' key\n   * For the US standard keyboard, the ',<' key\n   */\n  KeyCode[KeyCode[\"Comma\"] = 82] = \"Comma\";\n  /**\n   * For any country/region, the '-' key\n   * For the US standard keyboard, the '-_' key\n   */\n  KeyCode[KeyCode[\"Minus\"] = 83] = \"Minus\";\n  /**\n   * For any country/region, the '.' key\n   * For the US standard keyboard, the '.>' key\n   */\n  KeyCode[KeyCode[\"Period\"] = 84] = \"Period\";\n  /**\n   * Used for miscellaneous characters; it can vary by keyboard.\n   * For the US standard keyboard, the '/?' key\n   */\n  KeyCode[KeyCode[\"Slash\"] = 85] = \"Slash\";\n  /**\n   * Used for miscellaneous characters; it can vary by keyboard.\n   * For the US standard keyboard, the '`~' key\n   */\n  KeyCode[KeyCode[\"Backquote\"] = 86] = \"Backquote\";\n  /**\n   * Used for miscellaneous characters; it can vary by keyboard.\n   * For the US standard keyboard, the '[{' key\n   */\n  KeyCode[KeyCode[\"BracketLeft\"] = 87] = \"BracketLeft\";\n  /**\n   * Used for miscellaneous characters; it can vary by keyboard.\n   * For the US standard keyboard, the '\\|' key\n   */\n  KeyCode[KeyCode[\"Backslash\"] = 88] = \"Backslash\";\n  /**\n   * Used for miscellaneous characters; it can vary by keyboard.\n   * For the US standard keyboard, the ']}' key\n   */\n  KeyCode[KeyCode[\"BracketRight\"] = 89] = \"BracketRight\";\n  /**\n   * Used for miscellaneous characters; it can vary by keyboard.\n   * For the US standard keyboard, the ''\"' key\n   */\n  KeyCode[KeyCode[\"Quote\"] = 90] = \"Quote\";\n  /**\n   * Used for miscellaneous characters; it can vary by keyboard.\n   */\n  KeyCode[KeyCode[\"OEM_8\"] = 91] = \"OEM_8\";\n  /**\n   * Either the angle bracket key or the backslash key on the RT 102-key keyboard.\n   */\n  KeyCode[KeyCode[\"IntlBackslash\"] = 92] = \"IntlBackslash\";\n  KeyCode[KeyCode[\"Numpad0\"] = 93] = \"Numpad0\";\n  KeyCode[KeyCode[\"Numpad1\"] = 94] = \"Numpad1\";\n  KeyCode[KeyCode[\"Numpad2\"] = 95] = \"Numpad2\";\n  KeyCode[KeyCode[\"Numpad3\"] = 96] = \"Numpad3\";\n  KeyCode[KeyCode[\"Numpad4\"] = 97] = \"Numpad4\";\n  KeyCode[KeyCode[\"Numpad5\"] = 98] = \"Numpad5\";\n  KeyCode[KeyCode[\"Numpad6\"] = 99] = \"Numpad6\";\n  KeyCode[KeyCode[\"Numpad7\"] = 100] = \"Numpad7\";\n  KeyCode[KeyCode[\"Numpad8\"] = 101] = \"Numpad8\";\n  KeyCode[KeyCode[\"Numpad9\"] = 102] = \"Numpad9\";\n  KeyCode[KeyCode[\"NumpadMultiply\"] = 103] = \"NumpadMultiply\";\n  KeyCode[KeyCode[\"NumpadAdd\"] = 104] = \"NumpadAdd\";\n  KeyCode[KeyCode[\"NUMPAD_SEPARATOR\"] = 105] = \"NUMPAD_SEPARATOR\";\n  KeyCode[KeyCode[\"NumpadSubtract\"] = 106] = \"NumpadSubtract\";\n  KeyCode[KeyCode[\"NumpadDecimal\"] = 107] = \"NumpadDecimal\";\n  KeyCode[KeyCode[\"NumpadDivide\"] = 108] = \"NumpadDivide\";\n  /**\n   * Cover all key codes when IME is processing input.\n   */\n  KeyCode[KeyCode[\"KEY_IN_COMPOSITION\"] = 109] = \"KEY_IN_COMPOSITION\";\n  KeyCode[KeyCode[\"ABNT_C1\"] = 110] = \"ABNT_C1\";\n  KeyCode[KeyCode[\"ABNT_C2\"] = 111] = \"ABNT_C2\";\n  KeyCode[KeyCode[\"AudioVolumeMute\"] = 112] = \"AudioVolumeMute\";\n  KeyCode[KeyCode[\"AudioVolumeUp\"] = 113] = \"AudioVolumeUp\";\n  KeyCode[KeyCode[\"AudioVolumeDown\"] = 114] = \"AudioVolumeDown\";\n  KeyCode[KeyCode[\"BrowserSearch\"] = 115] = \"BrowserSearch\";\n  KeyCode[KeyCode[\"BrowserHome\"] = 116] = \"BrowserHome\";\n  KeyCode[KeyCode[\"BrowserBack\"] = 117] = \"BrowserBack\";\n  KeyCode[KeyCode[\"BrowserForward\"] = 118] = \"BrowserForward\";\n  KeyCode[KeyCode[\"MediaTrackNext\"] = 119] = \"MediaTrackNext\";\n  KeyCode[KeyCode[\"MediaTrackPrevious\"] = 120] = \"MediaTrackPrevious\";\n  KeyCode[KeyCode[\"MediaStop\"] = 121] = \"MediaStop\";\n  KeyCode[KeyCode[\"MediaPlayPause\"] = 122] = \"MediaPlayPause\";\n  KeyCode[KeyCode[\"LaunchMediaPlayer\"] = 123] = \"LaunchMediaPlayer\";\n  KeyCode[KeyCode[\"LaunchMail\"] = 124] = \"LaunchMail\";\n  KeyCode[KeyCode[\"LaunchApp2\"] = 125] = \"LaunchApp2\";\n  /**\n   * Placed last to cover the length of the enum.\n   * Please do not depend on this value!\n   */\n  KeyCode[KeyCode[\"MAX_VALUE\"] = 126] = \"MAX_VALUE\";\n})(KeyCode || (KeyCode = {}));\nexport var MarkerSeverity;\n(function (MarkerSeverity) {\n  MarkerSeverity[MarkerSeverity[\"Hint\"] = 1] = \"Hint\";\n  MarkerSeverity[MarkerSeverity[\"Info\"] = 2] = \"Info\";\n  MarkerSeverity[MarkerSeverity[\"Warning\"] = 4] = \"Warning\";\n  MarkerSeverity[MarkerSeverity[\"Error\"] = 8] = \"Error\";\n})(MarkerSeverity || (MarkerSeverity = {}));\nexport var MarkerTag;\n(function (MarkerTag) {\n  MarkerTag[MarkerTag[\"Unnecessary\"] = 1] = \"Unnecessary\";\n  MarkerTag[MarkerTag[\"Deprecated\"] = 2] = \"Deprecated\";\n})(MarkerTag || (MarkerTag = {}));\n/**\n * Position in the minimap to render the decoration.\n */\nexport var MinimapPosition;\n(function (MinimapPosition) {\n  MinimapPosition[MinimapPosition[\"Inline\"] = 1] = \"Inline\";\n  MinimapPosition[MinimapPosition[\"Gutter\"] = 2] = \"Gutter\";\n})(MinimapPosition || (MinimapPosition = {}));\n/**\n * Type of hit element with the mouse in the editor.\n */\nexport var MouseTargetType;\n(function (MouseTargetType) {\n  /**\n   * Mouse is on top of an unknown element.\n   */\n  MouseTargetType[MouseTargetType[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n  /**\n   * Mouse is on top of the textarea used for input.\n   */\n  MouseTargetType[MouseTargetType[\"TEXTAREA\"] = 1] = \"TEXTAREA\";\n  /**\n   * Mouse is on top of the glyph margin\n   */\n  MouseTargetType[MouseTargetType[\"GUTTER_GLYPH_MARGIN\"] = 2] = \"GUTTER_GLYPH_MARGIN\";\n  /**\n   * Mouse is on top of the line numbers\n   */\n  MouseTargetType[MouseTargetType[\"GUTTER_LINE_NUMBERS\"] = 3] = \"GUTTER_LINE_NUMBERS\";\n  /**\n   * Mouse is on top of the line decorations\n   */\n  MouseTargetType[MouseTargetType[\"GUTTER_LINE_DECORATIONS\"] = 4] = \"GUTTER_LINE_DECORATIONS\";\n  /**\n   * Mouse is on top of the whitespace left in the gutter by a view zone.\n   */\n  MouseTargetType[MouseTargetType[\"GUTTER_VIEW_ZONE\"] = 5] = \"GUTTER_VIEW_ZONE\";\n  /**\n   * Mouse is on top of text in the content.\n   */\n  MouseTargetType[MouseTargetType[\"CONTENT_TEXT\"] = 6] = \"CONTENT_TEXT\";\n  /**\n   * Mouse is on top of empty space in the content (e.g. after line text or below last line)\n   */\n  MouseTargetType[MouseTargetType[\"CONTENT_EMPTY\"] = 7] = \"CONTENT_EMPTY\";\n  /**\n   * Mouse is on top of a view zone in the content.\n   */\n  MouseTargetType[MouseTargetType[\"CONTENT_VIEW_ZONE\"] = 8] = \"CONTENT_VIEW_ZONE\";\n  /**\n   * Mouse is on top of a content widget.\n   */\n  MouseTargetType[MouseTargetType[\"CONTENT_WIDGET\"] = 9] = \"CONTENT_WIDGET\";\n  /**\n   * Mouse is on top of the decorations overview ruler.\n   */\n  MouseTargetType[MouseTargetType[\"OVERVIEW_RULER\"] = 10] = \"OVERVIEW_RULER\";\n  /**\n   * Mouse is on top of a scrollbar.\n   */\n  MouseTargetType[MouseTargetType[\"SCROLLBAR\"] = 11] = \"SCROLLBAR\";\n  /**\n   * Mouse is on top of an overlay widget.\n   */\n  MouseTargetType[MouseTargetType[\"OVERLAY_WIDGET\"] = 12] = \"OVERLAY_WIDGET\";\n  /**\n   * Mouse is outside of the editor.\n   */\n  MouseTargetType[MouseTargetType[\"OUTSIDE_EDITOR\"] = 13] = \"OUTSIDE_EDITOR\";\n})(MouseTargetType || (MouseTargetType = {}));\n/**\n * A positioning preference for rendering overlay widgets.\n */\nexport var OverlayWidgetPositionPreference;\n(function (OverlayWidgetPositionPreference) {\n  /**\n   * Position the overlay widget in the top right corner\n   */\n  OverlayWidgetPositionPreference[OverlayWidgetPositionPreference[\"TOP_RIGHT_CORNER\"] = 0] = \"TOP_RIGHT_CORNER\";\n  /**\n   * Position the overlay widget in the bottom right corner\n   */\n  OverlayWidgetPositionPreference[OverlayWidgetPositionPreference[\"BOTTOM_RIGHT_CORNER\"] = 1] = \"BOTTOM_RIGHT_CORNER\";\n  /**\n   * Position the overlay widget in the top center\n   */\n  OverlayWidgetPositionPreference[OverlayWidgetPositionPreference[\"TOP_CENTER\"] = 2] = \"TOP_CENTER\";\n})(OverlayWidgetPositionPreference || (OverlayWidgetPositionPreference = {}));\n/**\n * Vertical Lane in the overview ruler of the editor.\n */\nexport var OverviewRulerLane;\n(function (OverviewRulerLane) {\n  OverviewRulerLane[OverviewRulerLane[\"Left\"] = 1] = \"Left\";\n  OverviewRulerLane[OverviewRulerLane[\"Center\"] = 2] = \"Center\";\n  OverviewRulerLane[OverviewRulerLane[\"Right\"] = 4] = \"Right\";\n  OverviewRulerLane[OverviewRulerLane[\"Full\"] = 7] = \"Full\";\n})(OverviewRulerLane || (OverviewRulerLane = {}));\nexport var RenderLineNumbersType;\n(function (RenderLineNumbersType) {\n  RenderLineNumbersType[RenderLineNumbersType[\"Off\"] = 0] = \"Off\";\n  RenderLineNumbersType[RenderLineNumbersType[\"On\"] = 1] = \"On\";\n  RenderLineNumbersType[RenderLineNumbersType[\"Relative\"] = 2] = \"Relative\";\n  RenderLineNumbersType[RenderLineNumbersType[\"Interval\"] = 3] = \"Interval\";\n  RenderLineNumbersType[RenderLineNumbersType[\"Custom\"] = 4] = \"Custom\";\n})(RenderLineNumbersType || (RenderLineNumbersType = {}));\nexport var RenderMinimap;\n(function (RenderMinimap) {\n  RenderMinimap[RenderMinimap[\"None\"] = 0] = \"None\";\n  RenderMinimap[RenderMinimap[\"Text\"] = 1] = \"Text\";\n  RenderMinimap[RenderMinimap[\"Blocks\"] = 2] = \"Blocks\";\n})(RenderMinimap || (RenderMinimap = {}));\nexport var ScrollType;\n(function (ScrollType) {\n  ScrollType[ScrollType[\"Smooth\"] = 0] = \"Smooth\";\n  ScrollType[ScrollType[\"Immediate\"] = 1] = \"Immediate\";\n})(ScrollType || (ScrollType = {}));\nexport var ScrollbarVisibility;\n(function (ScrollbarVisibility) {\n  ScrollbarVisibility[ScrollbarVisibility[\"Auto\"] = 1] = \"Auto\";\n  ScrollbarVisibility[ScrollbarVisibility[\"Hidden\"] = 2] = \"Hidden\";\n  ScrollbarVisibility[ScrollbarVisibility[\"Visible\"] = 3] = \"Visible\";\n})(ScrollbarVisibility || (ScrollbarVisibility = {}));\n/**\n * The direction of a selection.\n */\nexport var SelectionDirection;\n(function (SelectionDirection) {\n  /**\n   * The selection starts above where it ends.\n   */\n  SelectionDirection[SelectionDirection[\"LTR\"] = 0] = \"LTR\";\n  /**\n   * The selection starts below where it ends.\n   */\n  SelectionDirection[SelectionDirection[\"RTL\"] = 1] = \"RTL\";\n})(SelectionDirection || (SelectionDirection = {}));\nexport var SignatureHelpTriggerKind;\n(function (SignatureHelpTriggerKind) {\n  SignatureHelpTriggerKind[SignatureHelpTriggerKind[\"Invoke\"] = 1] = \"Invoke\";\n  SignatureHelpTriggerKind[SignatureHelpTriggerKind[\"TriggerCharacter\"] = 2] = \"TriggerCharacter\";\n  SignatureHelpTriggerKind[SignatureHelpTriggerKind[\"ContentChange\"] = 3] = \"ContentChange\";\n})(SignatureHelpTriggerKind || (SignatureHelpTriggerKind = {}));\n/**\n * A symbol kind.\n */\nexport var SymbolKind;\n(function (SymbolKind) {\n  SymbolKind[SymbolKind[\"File\"] = 0] = \"File\";\n  SymbolKind[SymbolKind[\"Module\"] = 1] = \"Module\";\n  SymbolKind[SymbolKind[\"Namespace\"] = 2] = \"Namespace\";\n  SymbolKind[SymbolKind[\"Package\"] = 3] = \"Package\";\n  SymbolKind[SymbolKind[\"Class\"] = 4] = \"Class\";\n  SymbolKind[SymbolKind[\"Method\"] = 5] = \"Method\";\n  SymbolKind[SymbolKind[\"Property\"] = 6] = \"Property\";\n  SymbolKind[SymbolKind[\"Field\"] = 7] = \"Field\";\n  SymbolKind[SymbolKind[\"Constructor\"] = 8] = \"Constructor\";\n  SymbolKind[SymbolKind[\"Enum\"] = 9] = \"Enum\";\n  SymbolKind[SymbolKind[\"Interface\"] = 10] = \"Interface\";\n  SymbolKind[SymbolKind[\"Function\"] = 11] = \"Function\";\n  SymbolKind[SymbolKind[\"Variable\"] = 12] = \"Variable\";\n  SymbolKind[SymbolKind[\"Constant\"] = 13] = \"Constant\";\n  SymbolKind[SymbolKind[\"String\"] = 14] = \"String\";\n  SymbolKind[SymbolKind[\"Number\"] = 15] = \"Number\";\n  SymbolKind[SymbolKind[\"Boolean\"] = 16] = \"Boolean\";\n  SymbolKind[SymbolKind[\"Array\"] = 17] = \"Array\";\n  SymbolKind[SymbolKind[\"Object\"] = 18] = \"Object\";\n  SymbolKind[SymbolKind[\"Key\"] = 19] = \"Key\";\n  SymbolKind[SymbolKind[\"Null\"] = 20] = \"Null\";\n  SymbolKind[SymbolKind[\"EnumMember\"] = 21] = \"EnumMember\";\n  SymbolKind[SymbolKind[\"Struct\"] = 22] = \"Struct\";\n  SymbolKind[SymbolKind[\"Event\"] = 23] = \"Event\";\n  SymbolKind[SymbolKind[\"Operator\"] = 24] = \"Operator\";\n  SymbolKind[SymbolKind[\"TypeParameter\"] = 25] = \"TypeParameter\";\n})(SymbolKind || (SymbolKind = {}));\nexport var SymbolTag;\n(function (SymbolTag) {\n  SymbolTag[SymbolTag[\"Deprecated\"] = 1] = \"Deprecated\";\n})(SymbolTag || (SymbolTag = {}));\n/**\n * The kind of animation in which the editor's cursor should be rendered.\n */\nexport var TextEditorCursorBlinkingStyle;\n(function (TextEditorCursorBlinkingStyle) {\n  /**\n   * Hidden\n   */\n  TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Hidden\"] = 0] = \"Hidden\";\n  /**\n   * Blinking\n   */\n  TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Blink\"] = 1] = \"Blink\";\n  /**\n   * Blinking with smooth fading\n   */\n  TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Smooth\"] = 2] = \"Smooth\";\n  /**\n   * Blinking with prolonged filled state and smooth fading\n   */\n  TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Phase\"] = 3] = \"Phase\";\n  /**\n   * Expand collapse animation on the y axis\n   */\n  TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Expand\"] = 4] = \"Expand\";\n  /**\n   * No-Blinking\n   */\n  TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Solid\"] = 5] = \"Solid\";\n})(TextEditorCursorBlinkingStyle || (TextEditorCursorBlinkingStyle = {}));\n/**\n * The style in which the editor's cursor should be rendered.\n */\nexport var TextEditorCursorStyle;\n(function (TextEditorCursorStyle) {\n  /**\n   * As a vertical line (sitting between two characters).\n   */\n  TextEditorCursorStyle[TextEditorCursorStyle[\"Line\"] = 1] = \"Line\";\n  /**\n   * As a block (sitting on top of a character).\n   */\n  TextEditorCursorStyle[TextEditorCursorStyle[\"Block\"] = 2] = \"Block\";\n  /**\n   * As a horizontal line (sitting under a character).\n   */\n  TextEditorCursorStyle[TextEditorCursorStyle[\"Underline\"] = 3] = \"Underline\";\n  /**\n   * As a thin vertical line (sitting between two characters).\n   */\n  TextEditorCursorStyle[TextEditorCursorStyle[\"LineThin\"] = 4] = \"LineThin\";\n  /**\n   * As an outlined block (sitting on top of a character).\n   */\n  TextEditorCursorStyle[TextEditorCursorStyle[\"BlockOutline\"] = 5] = \"BlockOutline\";\n  /**\n   * As a thin horizontal line (sitting under a character).\n   */\n  TextEditorCursorStyle[TextEditorCursorStyle[\"UnderlineThin\"] = 6] = \"UnderlineThin\";\n})(TextEditorCursorStyle || (TextEditorCursorStyle = {}));\n/**\n * Describes the behavior of decorations when typing/editing near their edges.\n * Note: Please do not edit the values, as they very carefully match `DecorationRangeBehavior`\n */\nexport var TrackedRangeStickiness;\n(function (TrackedRangeStickiness) {\n  TrackedRangeStickiness[TrackedRangeStickiness[\"AlwaysGrowsWhenTypingAtEdges\"] = 0] = \"AlwaysGrowsWhenTypingAtEdges\";\n  TrackedRangeStickiness[TrackedRangeStickiness[\"NeverGrowsWhenTypingAtEdges\"] = 1] = \"NeverGrowsWhenTypingAtEdges\";\n  TrackedRangeStickiness[TrackedRangeStickiness[\"GrowsOnlyWhenTypingBefore\"] = 2] = \"GrowsOnlyWhenTypingBefore\";\n  TrackedRangeStickiness[TrackedRangeStickiness[\"GrowsOnlyWhenTypingAfter\"] = 3] = \"GrowsOnlyWhenTypingAfter\";\n})(TrackedRangeStickiness || (TrackedRangeStickiness = {}));\n/**\n * Describes how to indent wrapped lines.\n */\nexport var WrappingIndent;\n(function (WrappingIndent) {\n  /**\n   * No indentation => wrapped lines begin at column 1.\n   */\n  WrappingIndent[WrappingIndent[\"None\"] = 0] = \"None\";\n  /**\n   * Same => wrapped lines get the same indentation as the parent.\n   */\n  WrappingIndent[WrappingIndent[\"Same\"] = 1] = \"Same\";\n  /**\n   * Indent => wrapped lines get +1 indentation toward the parent.\n   */\n  WrappingIndent[WrappingIndent[\"Indent\"] = 2] = \"Indent\";\n  /**\n   * DeepIndent => wrapped lines get +2 indentation toward the parent.\n   */\n  WrappingIndent[WrappingIndent[\"DeepIndent\"] = 3] = \"DeepIndent\";\n})(WrappingIndent || (WrappingIndent = {}));","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Position } from './position.js';\nimport { Range } from './range.js';\n/**\n * A selection in the editor.\n * The selection is a range that has an orientation.\n */\nexport class Selection extends Range {\n  constructor(selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn) {\n    super(selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn);\n    this.selectionStartLineNumber = selectionStartLineNumber;\n    this.selectionStartColumn = selectionStartColumn;\n    this.positionLineNumber = positionLineNumber;\n    this.positionColumn = positionColumn;\n  }\n  /**\n   * Transform to a human-readable representation.\n   */\n  toString() {\n    return '[' + this.selectionStartLineNumber + ',' + this.selectionStartColumn + ' -> ' + this.positionLineNumber + ',' + this.positionColumn + ']';\n  }\n  /**\n   * Test if equals other selection.\n   */\n  equalsSelection(other) {\n    return Selection.selectionsEqual(this, other);\n  }\n  /**\n   * Test if the two selections are equal.\n   */\n  static selectionsEqual(a, b) {\n    return a.selectionStartLineNumber === b.selectionStartLineNumber && a.selectionStartColumn === b.selectionStartColumn && a.positionLineNumber === b.positionLineNumber && a.positionColumn === b.positionColumn;\n  }\n  /**\n   * Get directions (LTR or RTL).\n   */\n  getDirection() {\n    if (this.selectionStartLineNumber === this.startLineNumber && this.selectionStartColumn === this.startColumn) {\n      return 0 /* LTR */;\n    }\n    return 1 /* RTL */;\n  }\n  /**\n   * Create a new selection with a different `positionLineNumber` and `positionColumn`.\n   */\n  setEndPosition(endLineNumber, endColumn) {\n    if (this.getDirection() === 0 /* LTR */) {\n      return new Selection(this.startLineNumber, this.startColumn, endLineNumber, endColumn);\n    }\n    return new Selection(endLineNumber, endColumn, this.startLineNumber, this.startColumn);\n  }\n  /**\n   * Get the position at `positionLineNumber` and `positionColumn`.\n   */\n  getPosition() {\n    return new Position(this.positionLineNumber, this.positionColumn);\n  }\n  /**\n   * Create a new selection with a different `selectionStartLineNumber` and `selectionStartColumn`.\n   */\n  setStartPosition(startLineNumber, startColumn) {\n    if (this.getDirection() === 0 /* LTR */) {\n      return new Selection(startLineNumber, startColumn, this.endLineNumber, this.endColumn);\n    }\n    return new Selection(this.endLineNumber, this.endColumn, startLineNumber, startColumn);\n  }\n  // ----\n  /**\n   * Create a `Selection` from one or two positions\n   */\n  static fromPositions(start) {\n    let end = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : start;\n    return new Selection(start.lineNumber, start.column, end.lineNumber, end.column);\n  }\n  /**\n   * Create a `Selection` from an `ISelection`.\n   */\n  static liftSelection(sel) {\n    return new Selection(sel.selectionStartLineNumber, sel.selectionStartColumn, sel.positionLineNumber, sel.positionColumn);\n  }\n  /**\n   * `a` equals `b`.\n   */\n  static selectionsArrEqual(a, b) {\n    if (a && !b || !a && b) {\n      return false;\n    }\n    if (!a && !b) {\n      return true;\n    }\n    if (a.length !== b.length) {\n      return false;\n    }\n    for (let i = 0, len = a.length; i < len; i++) {\n      if (!this.selectionsEqual(a[i], b[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  /**\n   * Test if `obj` is an `ISelection`.\n   */\n  static isISelection(obj) {\n    return obj && typeof obj.selectionStartLineNumber === 'number' && typeof obj.selectionStartColumn === 'number' && typeof obj.positionLineNumber === 'number' && typeof obj.positionColumn === 'number';\n  }\n  /**\n   * Create with a direction.\n   */\n  static createWithDirection(startLineNumber, startColumn, endLineNumber, endColumn, direction) {\n    if (direction === 0 /* LTR */) {\n      return new Selection(startLineNumber, startColumn, endLineNumber, endColumn);\n    }\n    return new Selection(endLineNumber, endColumn, startLineNumber, startColumn);\n  }\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class Token {\n  constructor(offset, type, language) {\n    this._tokenBrand = undefined;\n    this.offset = offset | 0; // @perf\n    this.type = type;\n    this.language = language;\n  }\n  toString() {\n    return '(' + this.offset + ', ' + this.type + ')';\n  }\n}\nexport class TokenizationResult {\n  constructor(tokens, endState) {\n    this._tokenizationResultBrand = undefined;\n    this.tokens = tokens;\n    this.endState = endState;\n  }\n}\nexport class TokenizationResult2 {\n  constructor(tokens, endState) {\n    this._tokenizationResult2Brand = undefined;\n    this.tokens = tokens;\n    this.endState = endState;\n  }\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { CancellationTokenSource } from '../../../base/common/cancellation.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { KeyChord } from '../../../base/common/keyCodes.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { Position } from '../core/position.js';\nimport { Range } from '../core/range.js';\nimport { Selection } from '../core/selection.js';\nimport { Token } from '../core/token.js';\nimport * as standaloneEnums from './standaloneEnums.js';\nexport class KeyMod {\n  static chord(firstPart, secondPart) {\n    return KeyChord(firstPart, secondPart);\n  }\n}\nKeyMod.CtrlCmd = 2048 /* CtrlCmd */;\nKeyMod.Shift = 1024 /* Shift */;\nKeyMod.Alt = 512 /* Alt */;\nKeyMod.WinCtrl = 256 /* WinCtrl */;\nexport function createMonacoBaseAPI() {\n  return {\n    editor: undefined,\n    languages: undefined,\n    CancellationTokenSource: CancellationTokenSource,\n    Emitter: Emitter,\n    KeyCode: standaloneEnums.KeyCode,\n    KeyMod: KeyMod,\n    Position: Position,\n    Range: Range,\n    Selection: Selection,\n    SelectionDirection: standaloneEnums.SelectionDirection,\n    MarkerSeverity: standaloneEnums.MarkerSeverity,\n    MarkerTag: standaloneEnums.MarkerTag,\n    Uri: URI,\n    Token: Token\n  };\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nimport { stringDiff } from '../../../base/common/diff/diff.js';\nimport { globals } from '../../../base/common/platform.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { Position } from '../core/position.js';\nimport { Range } from '../core/range.js';\nimport { DiffComputer } from '../diff/diffComputer.js';\nimport { MirrorTextModel as BaseMirrorModel } from '../model/mirrorTextModel.js';\nimport { ensureValidWordDefinition, getWordAtText } from '../model/wordHelper.js';\nimport { computeLinks } from '../modes/linkComputer.js';\nimport { BasicInplaceReplace } from '../modes/supports/inplaceReplaceSupport.js';\nimport { createMonacoBaseAPI } from '../standalone/standaloneBase.js';\nimport * as types from '../../../base/common/types.js';\nimport { StopWatch } from '../../../base/common/stopwatch.js';\n/**\n * @internal\n */\nexport class MirrorModel extends BaseMirrorModel {\n  get uri() {\n    return this._uri;\n  }\n  get eol() {\n    return this._eol;\n  }\n  getValue() {\n    return this.getText();\n  }\n  getLinesContent() {\n    return this._lines.slice(0);\n  }\n  getLineCount() {\n    return this._lines.length;\n  }\n  getLineContent(lineNumber) {\n    return this._lines[lineNumber - 1];\n  }\n  getWordAtPosition(position, wordDefinition) {\n    let wordAtText = getWordAtText(position.column, ensureValidWordDefinition(wordDefinition), this._lines[position.lineNumber - 1], 0);\n    if (wordAtText) {\n      return new Range(position.lineNumber, wordAtText.startColumn, position.lineNumber, wordAtText.endColumn);\n    }\n    return null;\n  }\n  words(wordDefinition) {\n    const lines = this._lines;\n    const wordenize = this._wordenize.bind(this);\n    let lineNumber = 0;\n    let lineText = '';\n    let wordRangesIdx = 0;\n    let wordRanges = [];\n    return {\n      *[Symbol.iterator]() {\n        while (true) {\n          if (wordRangesIdx < wordRanges.length) {\n            const value = lineText.substring(wordRanges[wordRangesIdx].start, wordRanges[wordRangesIdx].end);\n            wordRangesIdx += 1;\n            yield value;\n          } else {\n            if (lineNumber < lines.length) {\n              lineText = lines[lineNumber];\n              wordRanges = wordenize(lineText, wordDefinition);\n              wordRangesIdx = 0;\n              lineNumber += 1;\n            } else {\n              break;\n            }\n          }\n        }\n      }\n    };\n  }\n  getLineWords(lineNumber, wordDefinition) {\n    let content = this._lines[lineNumber - 1];\n    let ranges = this._wordenize(content, wordDefinition);\n    let words = [];\n    for (const range of ranges) {\n      words.push({\n        word: content.substring(range.start, range.end),\n        startColumn: range.start + 1,\n        endColumn: range.end + 1\n      });\n    }\n    return words;\n  }\n  _wordenize(content, wordDefinition) {\n    const result = [];\n    let match;\n    wordDefinition.lastIndex = 0; // reset lastIndex just to be sure\n    while (match = wordDefinition.exec(content)) {\n      if (match[0].length === 0) {\n        // it did match the empty string\n        break;\n      }\n      result.push({\n        start: match.index,\n        end: match.index + match[0].length\n      });\n    }\n    return result;\n  }\n  getValueInRange(range) {\n    range = this._validateRange(range);\n    if (range.startLineNumber === range.endLineNumber) {\n      return this._lines[range.startLineNumber - 1].substring(range.startColumn - 1, range.endColumn - 1);\n    }\n    let lineEnding = this._eol;\n    let startLineIndex = range.startLineNumber - 1;\n    let endLineIndex = range.endLineNumber - 1;\n    let resultLines = [];\n    resultLines.push(this._lines[startLineIndex].substring(range.startColumn - 1));\n    for (let i = startLineIndex + 1; i < endLineIndex; i++) {\n      resultLines.push(this._lines[i]);\n    }\n    resultLines.push(this._lines[endLineIndex].substring(0, range.endColumn - 1));\n    return resultLines.join(lineEnding);\n  }\n  offsetAt(position) {\n    position = this._validatePosition(position);\n    this._ensureLineStarts();\n    return this._lineStarts.getPrefixSum(position.lineNumber - 2) + (position.column - 1);\n  }\n  positionAt(offset) {\n    offset = Math.floor(offset);\n    offset = Math.max(0, offset);\n    this._ensureLineStarts();\n    let out = this._lineStarts.getIndexOf(offset);\n    let lineLength = this._lines[out.index].length;\n    // Ensure we return a valid position\n    return {\n      lineNumber: 1 + out.index,\n      column: 1 + Math.min(out.remainder, lineLength)\n    };\n  }\n  _validateRange(range) {\n    const start = this._validatePosition({\n      lineNumber: range.startLineNumber,\n      column: range.startColumn\n    });\n    const end = this._validatePosition({\n      lineNumber: range.endLineNumber,\n      column: range.endColumn\n    });\n    if (start.lineNumber !== range.startLineNumber || start.column !== range.startColumn || end.lineNumber !== range.endLineNumber || end.column !== range.endColumn) {\n      return {\n        startLineNumber: start.lineNumber,\n        startColumn: start.column,\n        endLineNumber: end.lineNumber,\n        endColumn: end.column\n      };\n    }\n    return range;\n  }\n  _validatePosition(position) {\n    if (!Position.isIPosition(position)) {\n      throw new Error('bad position');\n    }\n    let {\n      lineNumber,\n      column\n    } = position;\n    let hasChanged = false;\n    if (lineNumber < 1) {\n      lineNumber = 1;\n      column = 1;\n      hasChanged = true;\n    } else if (lineNumber > this._lines.length) {\n      lineNumber = this._lines.length;\n      column = this._lines[lineNumber - 1].length + 1;\n      hasChanged = true;\n    } else {\n      let maxCharacter = this._lines[lineNumber - 1].length + 1;\n      if (column < 1) {\n        column = 1;\n        hasChanged = true;\n      } else if (column > maxCharacter) {\n        column = maxCharacter;\n        hasChanged = true;\n      }\n    }\n    if (!hasChanged) {\n      return position;\n    } else {\n      return {\n        lineNumber,\n        column\n      };\n    }\n  }\n}\n/**\n * @internal\n */\nexport class EditorSimpleWorker {\n  constructor(host, foreignModuleFactory) {\n    this._host = host;\n    this._models = Object.create(null);\n    this._foreignModuleFactory = foreignModuleFactory;\n    this._foreignModule = null;\n  }\n  dispose() {\n    this._models = Object.create(null);\n  }\n  _getModel(uri) {\n    return this._models[uri];\n  }\n  _getModels() {\n    let all = [];\n    Object.keys(this._models).forEach(key => all.push(this._models[key]));\n    return all;\n  }\n  acceptNewModel(data) {\n    this._models[data.url] = new MirrorModel(URI.parse(data.url), data.lines, data.EOL, data.versionId);\n  }\n  acceptModelChanged(strURL, e) {\n    if (!this._models[strURL]) {\n      return;\n    }\n    let model = this._models[strURL];\n    model.onEvents(e);\n  }\n  acceptRemovedModel(strURL) {\n    if (!this._models[strURL]) {\n      return;\n    }\n    delete this._models[strURL];\n  }\n  // ---- BEGIN diff --------------------------------------------------------------------------\n  computeDiff(originalUrl, modifiedUrl, ignoreTrimWhitespace, maxComputationTime) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const original = this._getModel(originalUrl);\n      const modified = this._getModel(modifiedUrl);\n      if (!original || !modified) {\n        return null;\n      }\n      const originalLines = original.getLinesContent();\n      const modifiedLines = modified.getLinesContent();\n      const diffComputer = new DiffComputer(originalLines, modifiedLines, {\n        shouldComputeCharChanges: true,\n        shouldPostProcessCharChanges: true,\n        shouldIgnoreTrimWhitespace: ignoreTrimWhitespace,\n        shouldMakePrettyDiff: true,\n        maxComputationTime: maxComputationTime\n      });\n      const diffResult = diffComputer.computeDiff();\n      const identical = diffResult.changes.length > 0 ? false : this._modelsAreIdentical(original, modified);\n      return {\n        quitEarly: diffResult.quitEarly,\n        identical: identical,\n        changes: diffResult.changes\n      };\n    });\n  }\n  _modelsAreIdentical(original, modified) {\n    const originalLineCount = original.getLineCount();\n    const modifiedLineCount = modified.getLineCount();\n    if (originalLineCount !== modifiedLineCount) {\n      return false;\n    }\n    for (let line = 1; line <= originalLineCount; line++) {\n      const originalLine = original.getLineContent(line);\n      const modifiedLine = modified.getLineContent(line);\n      if (originalLine !== modifiedLine) {\n        return false;\n      }\n    }\n    return true;\n  }\n  computeMoreMinimalEdits(modelUrl, edits) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const model = this._getModel(modelUrl);\n      if (!model) {\n        return edits;\n      }\n      const result = [];\n      let lastEol = undefined;\n      edits = edits.slice(0).sort((a, b) => {\n        if (a.range && b.range) {\n          return Range.compareRangesUsingStarts(a.range, b.range);\n        }\n        // eol only changes should go to the end\n        let aRng = a.range ? 0 : 1;\n        let bRng = b.range ? 0 : 1;\n        return aRng - bRng;\n      });\n      for (let {\n        range,\n        text,\n        eol\n      } of edits) {\n        if (typeof eol === 'number') {\n          lastEol = eol;\n        }\n        if (Range.isEmpty(range) && !text) {\n          // empty change\n          continue;\n        }\n        const original = model.getValueInRange(range);\n        text = text.replace(/\\r\\n|\\n|\\r/g, model.eol);\n        if (original === text) {\n          // noop\n          continue;\n        }\n        // make sure diff won't take too long\n        if (Math.max(text.length, original.length) > EditorSimpleWorker._diffLimit) {\n          result.push({\n            range,\n            text\n          });\n          continue;\n        }\n        // compute diff between original and edit.text\n        const changes = stringDiff(original, text, false);\n        const editOffset = model.offsetAt(Range.lift(range).getStartPosition());\n        for (const change of changes) {\n          const start = model.positionAt(editOffset + change.originalStart);\n          const end = model.positionAt(editOffset + change.originalStart + change.originalLength);\n          const newEdit = {\n            text: text.substr(change.modifiedStart, change.modifiedLength),\n            range: {\n              startLineNumber: start.lineNumber,\n              startColumn: start.column,\n              endLineNumber: end.lineNumber,\n              endColumn: end.column\n            }\n          };\n          if (model.getValueInRange(newEdit.range) !== newEdit.text) {\n            result.push(newEdit);\n          }\n        }\n      }\n      if (typeof lastEol === 'number') {\n        result.push({\n          eol: lastEol,\n          text: '',\n          range: {\n            startLineNumber: 0,\n            startColumn: 0,\n            endLineNumber: 0,\n            endColumn: 0\n          }\n        });\n      }\n      return result;\n    });\n  }\n  // ---- END minimal edits ---------------------------------------------------------------\n  computeLinks(modelUrl) {\n    return __awaiter(this, void 0, void 0, function* () {\n      let model = this._getModel(modelUrl);\n      if (!model) {\n        return null;\n      }\n      return computeLinks(model);\n    });\n  }\n  textualSuggest(modelUrls, leadingWord, wordDef, wordDefFlags) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const sw = new StopWatch(true);\n      const wordDefRegExp = new RegExp(wordDef, wordDefFlags);\n      const seen = new Set();\n      outer: for (let url of modelUrls) {\n        const model = this._getModel(url);\n        if (!model) {\n          continue;\n        }\n        for (let word of model.words(wordDefRegExp)) {\n          if (word === leadingWord || !isNaN(Number(word))) {\n            continue;\n          }\n          seen.add(word);\n          if (seen.size > EditorSimpleWorker._suggestionsLimit) {\n            break outer;\n          }\n        }\n      }\n      return {\n        words: Array.from(seen),\n        duration: sw.elapsed()\n      };\n    });\n  }\n  // ---- END suggest --------------------------------------------------------------------------\n  //#region -- word ranges --\n  computeWordRanges(modelUrl, range, wordDef, wordDefFlags) {\n    return __awaiter(this, void 0, void 0, function* () {\n      let model = this._getModel(modelUrl);\n      if (!model) {\n        return Object.create(null);\n      }\n      const wordDefRegExp = new RegExp(wordDef, wordDefFlags);\n      const result = Object.create(null);\n      for (let line = range.startLineNumber; line < range.endLineNumber; line++) {\n        let words = model.getLineWords(line, wordDefRegExp);\n        for (const word of words) {\n          if (!isNaN(Number(word.word))) {\n            continue;\n          }\n          let array = result[word.word];\n          if (!array) {\n            array = [];\n            result[word.word] = array;\n          }\n          array.push({\n            startLineNumber: line,\n            startColumn: word.startColumn,\n            endLineNumber: line,\n            endColumn: word.endColumn\n          });\n        }\n      }\n      return result;\n    });\n  }\n  //#endregion\n  navigateValueSet(modelUrl, range, up, wordDef, wordDefFlags) {\n    return __awaiter(this, void 0, void 0, function* () {\n      let model = this._getModel(modelUrl);\n      if (!model) {\n        return null;\n      }\n      let wordDefRegExp = new RegExp(wordDef, wordDefFlags);\n      if (range.startColumn === range.endColumn) {\n        range = {\n          startLineNumber: range.startLineNumber,\n          startColumn: range.startColumn,\n          endLineNumber: range.endLineNumber,\n          endColumn: range.endColumn + 1\n        };\n      }\n      let selectionText = model.getValueInRange(range);\n      let wordRange = model.getWordAtPosition({\n        lineNumber: range.startLineNumber,\n        column: range.startColumn\n      }, wordDefRegExp);\n      if (!wordRange) {\n        return null;\n      }\n      let word = model.getValueInRange(wordRange);\n      let result = BasicInplaceReplace.INSTANCE.navigateValueSet(range, selectionText, wordRange, word, up);\n      return result;\n    });\n  }\n  // ---- BEGIN foreign module support --------------------------------------------------------------------------\n  loadForeignModule(moduleId, createData, foreignHostMethods) {\n    const proxyMethodRequest = (method, args) => {\n      return this._host.fhr(method, args);\n    };\n    const foreignHost = types.createProxyObject(foreignHostMethods, proxyMethodRequest);\n    let ctx = {\n      host: foreignHost,\n      getMirrorModels: () => {\n        return this._getModels();\n      }\n    };\n    if (this._foreignModuleFactory) {\n      this._foreignModule = this._foreignModuleFactory(ctx, createData);\n      // static foreing module\n      return Promise.resolve(types.getAllMethodNames(this._foreignModule));\n    }\n    // ESM-comment-begin\n    // \t\treturn new Promise<any>((resolve, reject) => {\n    // \t\t\trequire([moduleId], (foreignModule: { create: IForeignModuleFactory }) => {\n    // \t\t\t\tthis._foreignModule = foreignModule.create(ctx, createData);\n    // \n    // \t\t\t\tresolve(types.getAllMethodNames(this._foreignModule));\n    // \n    // \t\t\t}, reject);\n    // \t\t});\n    // ESM-comment-end\n    // ESM-uncomment-begin\n    return Promise.reject(new Error(\"Unexpected usage\"));\n    // ESM-uncomment-end\n  }\n  // foreign method request\n  fmr(method, args) {\n    if (!this._foreignModule || typeof this._foreignModule[method] !== 'function') {\n      return Promise.reject(new Error('Missing requestHandler or method: ' + method));\n    }\n    try {\n      return Promise.resolve(this._foreignModule[method].apply(this._foreignModule, args));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  }\n}\n// ---- END diff --------------------------------------------------------------------------\n// ---- BEGIN minimal edits ---------------------------------------------------------------\nEditorSimpleWorker._diffLimit = 100000;\n// ---- BEGIN suggest --------------------------------------------------------------------------\nEditorSimpleWorker._suggestionsLimit = 10000;\n/**\n * Called on the worker side\n * @internal\n */\nexport function create(host) {\n  return new EditorSimpleWorker(host, null);\n}\nif (typeof importScripts === 'function') {\n  // Running in a web worker\n  globals.monaco = createMonacoBaseAPI();\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { splitLines } from '../../../base/common/strings.js';\nimport { Position } from '../core/position.js';\nimport { PrefixSumComputer } from '../viewModel/prefixSumComputer.js';\nexport class MirrorTextModel {\n  constructor(uri, lines, eol, versionId) {\n    this._uri = uri;\n    this._lines = lines;\n    this._eol = eol;\n    this._versionId = versionId;\n    this._lineStarts = null;\n    this._cachedTextValue = null;\n  }\n  dispose() {\n    this._lines.length = 0;\n  }\n  get version() {\n    return this._versionId;\n  }\n  getText() {\n    if (this._cachedTextValue === null) {\n      this._cachedTextValue = this._lines.join(this._eol);\n    }\n    return this._cachedTextValue;\n  }\n  onEvents(e) {\n    if (e.eol && e.eol !== this._eol) {\n      this._eol = e.eol;\n      this._lineStarts = null;\n    }\n    // Update my lines\n    const changes = e.changes;\n    for (const change of changes) {\n      this._acceptDeleteRange(change.range);\n      this._acceptInsertText(new Position(change.range.startLineNumber, change.range.startColumn), change.text);\n    }\n    this._versionId = e.versionId;\n    this._cachedTextValue = null;\n  }\n  _ensureLineStarts() {\n    if (!this._lineStarts) {\n      const eolLength = this._eol.length;\n      const linesLength = this._lines.length;\n      const lineStartValues = new Uint32Array(linesLength);\n      for (let i = 0; i < linesLength; i++) {\n        lineStartValues[i] = this._lines[i].length + eolLength;\n      }\n      this._lineStarts = new PrefixSumComputer(lineStartValues);\n    }\n  }\n  /**\n   * All changes to a line's text go through this method\n   */\n  _setLineText(lineIndex, newValue) {\n    this._lines[lineIndex] = newValue;\n    if (this._lineStarts) {\n      // update prefix sum\n      this._lineStarts.changeValue(lineIndex, this._lines[lineIndex].length + this._eol.length);\n    }\n  }\n  _acceptDeleteRange(range) {\n    if (range.startLineNumber === range.endLineNumber) {\n      if (range.startColumn === range.endColumn) {\n        // Nothing to delete\n        return;\n      }\n      // Delete text on the affected line\n      this._setLineText(range.startLineNumber - 1, this._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1) + this._lines[range.startLineNumber - 1].substring(range.endColumn - 1));\n      return;\n    }\n    // Take remaining text on last line and append it to remaining text on first line\n    this._setLineText(range.startLineNumber - 1, this._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1) + this._lines[range.endLineNumber - 1].substring(range.endColumn - 1));\n    // Delete middle lines\n    this._lines.splice(range.startLineNumber, range.endLineNumber - range.startLineNumber);\n    if (this._lineStarts) {\n      // update prefix sum\n      this._lineStarts.removeValues(range.startLineNumber, range.endLineNumber - range.startLineNumber);\n    }\n  }\n  _acceptInsertText(position, insertText) {\n    if (insertText.length === 0) {\n      // Nothing to insert\n      return;\n    }\n    let insertLines = splitLines(insertText);\n    if (insertLines.length === 1) {\n      // Inserting text on one line\n      this._setLineText(position.lineNumber - 1, this._lines[position.lineNumber - 1].substring(0, position.column - 1) + insertLines[0] + this._lines[position.lineNumber - 1].substring(position.column - 1));\n      return;\n    }\n    // Append overflowing text from first line to the end of text to insert\n    insertLines[insertLines.length - 1] += this._lines[position.lineNumber - 1].substring(position.column - 1);\n    // Delete overflowing text from first line and insert text on first line\n    this._setLineText(position.lineNumber - 1, this._lines[position.lineNumber - 1].substring(0, position.column - 1) + insertLines[0]);\n    // Insert new lines & store lengths\n    let newLengths = new Uint32Array(insertLines.length - 1);\n    for (let i = 1; i < insertLines.length; i++) {\n      this._lines.splice(position.lineNumber + i - 1, 0, insertLines[i]);\n      newLengths[i - 1] = insertLines[i].length + this._eol.length;\n    }\n    if (this._lineStarts) {\n      // update prefix sum\n      this._lineStarts.insertValues(position.lineNumber, newLengths);\n    }\n  }\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { SimpleWorkerServer } from '../base/common/worker/simpleWorker.js';\nimport { EditorSimpleWorker } from './common/services/editorSimpleWorker.js';\nlet initialized = false;\nexport function initialize(foreignModule) {\n  if (initialized) {\n    return;\n  }\n  initialized = true;\n  const simpleWorker = new SimpleWorkerServer(msg => {\n    self.postMessage(msg);\n  }, host => new EditorSimpleWorker(host, foreignModule));\n  self.onmessage = e => {\n    simpleWorker.onmessage(e.data);\n  };\n}\nself.onmessage = e => {\n  // Ignore first message in this case and initialize if not yet initialized\n  if (!initialized) {\n    initialize(null);\n  }\n};"],"sourceRoot":""}